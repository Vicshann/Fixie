From: <Saved by Blink>
Snapshot-Content-Location: https://mcyoung.xyz/2021/06/01/linker-script/
Subject: =?utf-8?Q?Everything=20You=20Never=20Wanted=20To=20Know=20About=20Linker?=
 =?utf-8?Q?=20Script=20=C2=B7=20mcyoung?=
Date: Mon, 3 Feb 2025 17:05:19 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9----"


------MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9----
Content-Type: text/html
Content-ID: <frame-5273584A20B7E7C0AAE9AE219B64F737@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://mcyoung.xyz/2021/06/01/linker-script/

<!DOCTYPE html><html lang=3D"en-us"><head><meta http-equiv=3D"Content-Type"=
 content=3D"text/html; charset=3DUTF-8"> <link href=3D"https://gmpg.org/xfn=
/11" rel=3D"profile"> <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3D=
edge">  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-sc=
ale=3D1.0, maximum-scale=3D1"> <title> Everything You Never Wanted To Know =
About Linker Script =C2=B7 mcyoung </title>  <link rel=3D"stylesheet" href=
=3D"https://mcyoung.xyz/public/css/syntax.css"> <link rel=3D"stylesheet" hr=
ef=3D"https://mcyoung.xyz/public/css/syntax-overrides.css"> <link rel=3D"st=
ylesheet" href=3D"https://mcyoung.xyz/public/css/style.css"> <link rel=3D"s=
tylesheet" href=3D"https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min=
.css" crossorigin=3D"anonymous"> <link rel=3D"preload" href=3D"https://mcyo=
ung.xyz/public/fonts/abril-fatface.woff2" as=3D"font" type=3D"font/woff2" c=
rossorigin=3D""> <link rel=3D"preload" href=3D"https://mcyoung.xyz/public/f=
onts/rokkitt.woff2" as=3D"font" type=3D"font/woff2" crossorigin=3D""> <link=
 rel=3D"preload" href=3D"https://mcyoung.xyz/public/fonts/rokkitt-italic.wo=
ff2" as=3D"font" type=3D"font/woff2" crossorigin=3D""> <link rel=3D"preload=
" href=3D"https://mcyoung.xyz/public/fonts/spline-mono.woff2" as=3D"font" t=
ype=3D"font/woff2" crossorigin=3D""> <link rel=3D"preload" href=3D"https://=
mcyoung.xyz/public/fonts/spline-mono-italic.woff2" as=3D"font" type=3D"font=
/woff2" crossorigin=3D""> <link rel=3D"shortcut icon" href=3D"https://mcyou=
ng.xyz/public/favicon.ico"> <link rel=3D"alternate" type=3D"application/rss=
+xml" title=3D"RSS" href=3D"https://mcyoung.xyz/atom.xml">   <meta name=3D"=
twitter:card" content=3D"summary_large_image"> <meta name=3D"twitter:title"=
 content=3D"Everything You Never Wanted To Know About Linker Script =C2=B7 =
mcyoung"> <meta name=3D"twitter:image" content=3D"https://mcyoung.xyz/og/li=
nker-script-d8449181d8bbd4222ee9ad1bad74541df6a77a4a.png"> <meta property=
=3D"og:title" content=3D"Everything You Never Wanted To Know About Linker S=
cript =C2=B7 mcyoung"> <meta property=3D"og:type" content=3D"object"> <meta=
 property=3D"og:image" content=3D"https://mcyoung.xyz/og/linker-script-d844=
9181d8bbd4222ee9ad1bad74541df6a77a4a.png"> <meta property=3D"og:height" con=
tent=3D"630"> <meta property=3D"og:width" content=3D"1200"> <meta property=
=3D"og:url" content=3D"https://mcyoung.xyz/2021/06/01/linker-script/"> </he=
ad> <body> <div class=3D"sidebar"> <div class=3D"sidebar-avatar hide-if-mob=
ile"> <a href=3D"https://mcyoung.xyz/"> <img class=3D"sidebar-avatar" src=
=3D"https://mcyoung.xyz/public/images/avatar.png" alt=3D"Yeah, I drew this.=
 Check out my art blog."></a> </div> <div class=3D"container sidebar-sticky=
"> <div class=3D"sidebar-about"> <h1><a href=3D"https://mcyoung.xyz/"> mcyo=
ung </a></h1> <div class=3D"lead hide-if-mobile">I'm Miguel. I write about =
compilers, performance, and silly computer things. I also draw Pok=C3=A9mon=
. </div> </div> <hr class=3D"hide-if-mobile"> <nav class=3D"sidebar-nav"> <=
a class=3D"sidebar-nav-item" href=3D"https://mcyoung.xyz/">Home</a> =E2=80=
=A2 <a class=3D"sidebar-nav-item" href=3D"https://mcyoung.xyz/about">About<=
/a> =E2=80=A2 <a class=3D"sidebar-nav-item" href=3D"https://mcyoung.xyz/pos=
ts">Posts</a> =E2=80=A2 <a class=3D"sidebar-nav-item" href=3D"https://mcyou=
ng.xyz/tags">Tags</a> </nav> <nav class=3D"sidebar-nav"> <a class=3D"sideba=
r-nav-item " href=3D"https://art.mcyoung.xyz/">Art</a> =E2=80=A2 <a class=
=3D"sidebar-nav-item" href=3D"https://github.com/mcy">GitHub</a> =E2=80=A2 =
<a class=3D"sidebar-nav-item" href=3D"https://mcyoung.xyz/resume">Resum=C3=
=A9</a> =E2=80=A2 <a class=3D"sidebar-nav-item" href=3D"https://mcyoung.xyz=
/syllabus">Syllabus</a> </nav> <br class=3D"hide-if-mobile"> <span class=3D=
"hide-if-mobile"> <a href=3D"https://creativecommons.org/licenses/by-sa/4.0=
/legalcode">CC BY-SA</a> =E2=80=A2 <a href=3D"https://varz.mcyoung.xyz/">Si=
te Analytics</a> <br> =C2=A9 2024 Miguel Young de la Sota</span> </div> </d=
iv> <div class=3D"content container"><div class=3D"post-title"> <span class=
=3D"post-meta"> 2021-06-01 =E2=80=A2 4898 words =E2=80=A2 40 minutes <br cl=
ass=3D"show-if-mobile"> <span class=3D"hide-if-mobile">=E2=80=A2</span> <a =
href=3D"https://mcyoung.xyz/tags.html#dark-arts">#dark-arts</a> =E2=80=A2 <=
a href=3D"https://mcyoung.xyz/tags.html#linkers">#linkers</a> =E2=80=A2 <a =
href=3D"https://mcyoung.xyz/tags.html#toolchains">#toolchains</a> </span> <=
h1><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/"> Everything Yo=
u Never Wanted To Know About Linker Script </a></h1> </div> <div class=3D"p=
ost"> <p>Low level software usually has lots of <code class=3D"language-pla=
intext highlighter-rouge">.cc</code> or <code class=3D"language-plaintext h=
ighlighter-rouge">.rs</code> files. Even lower-level software, like your cr=
yptography library, probably has <code class=3D"language-plaintext highligh=
ter-rouge">.S</code> containing assembly, my least favorite language for co=
de review.</p> <p>The lowest level software out there, firmware, kernels, a=
nd drivers, have one third file type to feed into the toolchain: an <code c=
lass=3D"language-plaintext highlighter-rouge">.ld</code> file, a =E2=80=9Cl=
inker script=E2=80=9D. The linker script, provided to Clang as <code class=
=3D"language-plaintext highlighter-rouge">-Wl,-T,foo.ld</code><sup id=3D"fn=
ref:linker-flag" role=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/0=
6/01/linker-script/#fn:linker-flag" class=3D"footnote" rel=3D"footnote">1</=
a></sup>, is like a template for the final executable. It tells the linker =
how to organize code from the input objects. This permits extremely precise=
 control over the toolchain=E2=80=99s output.</p> <p>Very few people know h=
ow to write linker script; it=E2=80=99s a bit of an obscure skill. Unfortun=
ately, I=E2=80=99m one of them, so I get called to do it on occasion. Hopef=
ully, this post is a good enough summary of the linker script language that=
 you, too, can build your own binary!</p> <p>Everything in this post can be=
 found in excruciating detail in <a href=3D"https://sourceware.org/binutils=
/docs/ld/index.html">GNU <code class=3D"language-plaintext highlighter-roug=
e">ld</code>=E2=80=99s documentation</a>; <code class=3D"language-plaintext=
 highlighter-rouge">lld</code> accepts basically the same syntax. There=E2=
=80=99s no spec, just what your linker happens to accept. I will, however, =
do my best to provide a more friendly introduction.</p> <p>No prior knowled=
ge of how toolchains work is necessary! Where possible, I=E2=80=99ve tried =
to provide historical context on the names of everything. Toolchains are, u=
nfortunately, bound by half a century of tradition. Better to at least know=
 why they=E2=80=99re called that.</p> <blockquote> <h3 id=3D"wait-an-s-file=
"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#wait-an-s-file">=
Wait, an <code class=3D"language-plaintext highlighter-rouge">.S</code> fil=
e?</a></h3> <p>On Windows, assembly files use the sensible <code class=3D"l=
anguage-plaintext highlighter-rouge">.asm</code> extension. POSIX we use th=
e <code class=3D"language-plaintext highlighter-rouge">.s</code> extension,=
 or <code class=3D"language-plaintext highlighter-rouge">.S</code> when we=
=E2=80=99d like Clang to run the C preprocessor on them (virtually all hand=
-written assembly is of the second kind).</p> <p>I don=E2=80=99t actually h=
ave a historical citation<sup id=3D"fnref:etymology-of-s" role=3D"doc-noter=
ef"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:etymology-o=
f-s" class=3D"footnote" rel=3D"footnote">2</a></sup> for <code class=3D"lan=
guage-plaintext highlighter-rouge">.s</code>, other than that it came from =
the Unix tradition of obnoxiously terse names. If we are to believe that <c=
ode class=3D"language-plaintext highlighter-rouge">.o</code> stands for =E2=
=80=9Cobject=E2=80=9D, and <code class=3D"language-plaintext highlighter-ro=
uge">.a</code> stands for =E2=80=9Carchive=E2=80=9D, then <code class=3D"la=
nguage-plaintext highlighter-rouge">.s</code> must stand for =E2=80=9Csourc=
e=E2=80=9D, up until the B compiler replaced them with <code class=3D"langu=
age-plaintext highlighter-rouge">.b</code> files! See <a href=3D"http://man=
.cat-v.org/unix-1st/1/b">http://man.cat-v.org/unix-1st/1/b</a>.</p> <p>A fi=
nal bit of trivia: <code class=3D"language-plaintext highlighter-rouge">.C<=
/code> files are obviously different from <code class=3D"language-plaintext=
 highlighter-rouge">.c</code> files=E2=80=A6 they=E2=80=99re C++ files! (Se=
riously, try it.)</p> </blockquote> <blockquote> <p>Note: This post is spec=
ifically about POSIX. I know basically nothing about MSVC and <code class=
=3D"language-plaintext highlighter-rouge">link.exe</code> other than that t=
hey exist. The most I=E2=80=99ve done is helped people debug trivial <code =
class=3D"language-plaintext highlighter-rouge">__declspec</code> issues.</p=
> <p>I will also only be covering things specific to linking an executable;=
 linking other outputs, like shared libraries, is beyond this post.</p> </b=
lockquote> <h2 id=3D"seriously-whats-a-linker"><a href=3D"https://mcyoung.x=
yz/2021/06/01/linker-script/#seriously-whats-a-linker">Seriously, What=E2=
=80=99s a linker?</a></h2> <p>A linker is but a small part of a <em>toolcha=
in</em>, the low-level programmer=E2=80=99s toolbox: everything you need to=
 go from source code to execution.</p> <p>The crown jewel of any toolchain =
is the compiler. The LLVM toolchain, for example, includes Clang, a C/C++<s=
up id=3D"fnref:clang-languages" role=3D"doc-noteref"><a href=3D"https://mcy=
oung.xyz/2021/06/01/linker-script/#fn:clang-languages" class=3D"footnote" r=
el=3D"footnote">3</a></sup> compiler. The compiler takes source code, such =
as <code class=3D"language-plaintext highlighter-rouge">.cc</code>, and low=
ers it down to a <code class=3D"language-plaintext highlighter-rouge">.s</c=
ode> file, an <em>assembly file</em> which textually describes machine code=
 for a specific architecture (you can also write them yourself).</p> <p>Ano=
ther toolchain program, the assembler, <em>assembles</em> each <code class=
=3D"language-plaintext highlighter-rouge">.s</code> into a <code class=3D"l=
anguage-plaintext highlighter-rouge">.o</code> file, an <em>object file</em=
><sup id=3D"fnref:object-what" role=3D"doc-noteref"><a href=3D"https://mcyo=
ung.xyz/2021/06/01/linker-script/#fn:object-what" class=3D"footnote" rel=3D=
"footnote">4</a></sup>. An assembly file is merely a textual representation=
 of an object file; assemblers are not particularly interesting programs.</=
p> <p>A third program, the linker, <em>links</em> all of your object files =
into a final <em>executable</em> or <em>binary</em>, traditionally given th=
e name <code class=3D"language-plaintext highlighter-rouge">a.out</code><su=
p id=3D"fnref:aout" role=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/202=
1/06/01/linker-script/#fn:aout" class=3D"footnote" rel=3D"footnote">5</a></=
sup>.</p> <p>This three (or two, if you do compile/assemble in one step) ph=
ase process is sometimes called the <em>C compilation model</em>. All moder=
n software build infrastructure is built around this model<sup id=3D"fnref:=
rust-objects" role=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/06/0=
1/linker-script/#fn:rust-objects" class=3D"footnote" rel=3D"footnote">6</a>=
</sup>.</p> <blockquote> <h3 id=3D"even-more-stages"><a href=3D"https://mcy=
oung.xyz/2021/06/01/linker-script/#even-more-stages">Even More Stages!</a><=
/h3> <p>Clang, being based on LLVM, actually exposes one stage in between t=
he <code class=3D"language-plaintext highlighter-rouge">.cc</code> file and=
 the <code class=3D"language-plaintext highlighter-rouge">.s</code> file. Y=
ou can ask it to skip doing codegen and emit a <code class=3D"language-plai=
ntext highlighter-rouge">.ll</code> file filled with LLVM IR, an intermedia=
te between human-writable source code and assembly. The magic words to get =
this file are <code class=3D"language-plaintext highlighter-rouge">clang -S=
 -emit-llvm</code>. (The Rust equivalent is <code class=3D"language-plainte=
xt highlighter-rouge">rustc --emit=3Dllvm-ir</code>.)</p> <p>The LLVM toolc=
hain provides <code class=3D"language-plaintext highlighter-rouge">llc</cod=
e>, the LLVM compiler, which performs the <code class=3D"language-plaintext=
 highlighter-rouge">.ll</code> -&gt; <code class=3D"language-plaintext high=
lighter-rouge">.s</code> step (optionally assembling it, too). <code class=
=3D"language-plaintext highlighter-rouge">lli</code> is an interpreter for =
the IR. Studying IR is mostly useful for understanding optimization behavio=
r; topic for another day.</p> </blockquote> <p>The compiler, assembler, and=
 linker are the central components of a toolchain. Other languages, like Ru=
st, usually provide their own toolchain, or just a compiler, reusing the ex=
isting C/C++ toolchain. The assembler and linker are language agnostic.</p>=
 <p>The toolchain also provides various debugging tools, including an inter=
active debugger, and tools for manipulating object files, such as <code cla=
ss=3D"language-plaintext highlighter-rouge">nm</code>, <code class=3D"langu=
age-plaintext highlighter-rouge">objdump</code>, <code class=3D"language-pl=
aintext highlighter-rouge">objcopy</code>, and <code class=3D"language-plai=
ntext highlighter-rouge">ar</code>.</p> <p>These days, most of this stuff i=
s bundled into a single program, the compiler frontend, which knows how to =
compiler, assemble, and link, in one invocation. You can ask Clang to spit =
out <code class=3D"language-plaintext highlighter-rouge">.o</code> files wi=
th <code class=3D"language-plaintext highlighter-rouge">clang -c</code>, an=
d <code class=3D"language-plaintext highlighter-rouge">.s</code> files with=
 <code class=3D"language-plaintext highlighter-rouge">clang -S</code>.</p> =
<blockquote> <h3 id=3D"trs-nms"><a href=3D"https://mcyoung.xyz/2021/06/01/l=
inker-script/#trs-nms">Trs Nms</a></h3> <p>The UNIX crowd at Bell Labs was =
very excited about short, terse names. This tradition survives in Go=E2=80=
=99s somewhat questionable practice of single-letter variables.</p> <p>Most=
 toolchain program names are cute contractions. <code class=3D"language-pla=
intext highlighter-rouge">cc</code> is =E2=80=9CC compiler=E2=80=9D; compil=
ers for almost all other languages follow this convention, like <code class=
=3D"language-plaintext highlighter-rouge">rustc</code>, <code class=3D"lang=
uage-plaintext highlighter-rouge">javac</code>, <code class=3D"language-pla=
intext highlighter-rouge">protoc</code>, and <code class=3D"language-plaint=
ext highlighter-rouge">scalac</code>; Clang is just <code class=3D"language=
-plaintext highlighter-rouge">clang</code>, but is perfectly ok being calle=
d as <code class=3D"language-plaintext highlighter-rouge">cc</code>.</p> <p=
><code class=3D"language-plaintext highlighter-rouge">as</code> is =E2=80=
=9Cassembler=E2=80=9D; <code class=3D"language-plaintext highlighter-rouge"=
>ld</code> is =E2=80=9Cloader=E2=80=9D (you=E2=80=99ll learn why sooner). <=
code class=3D"language-plaintext highlighter-rouge">ar</code> is =E2=80=9Ca=
rchiver=E2=80=9D, <code class=3D"language-plaintext highlighter-rouge">nm</=
code> is =E2=80=9Cnames=E2=80=9D. Other names tend to be a bit more sensibl=
e.</p> </blockquote> <h3 id=3D"final-link"><a href=3D"https://mcyoung.xyz/2=
021/06/01/linker-script/#final-link">Final Link</a></h3> <p>Some fifty year=
s ago at Bell Labs, someone really wanted to write a program with more than=
 one <code class=3D"language-plaintext highlighter-rouge">.s</code> file. T=
o solve this, a program that could =E2=80=9Clink=E2=80=9D symbol references=
 across object files was written: the first linker.</p> <p>You can take sev=
eral <code class=3D"language-plaintext highlighter-rouge">.o</code> files a=
nd use <code class=3D"language-plaintext highlighter-rouge">ar</code> (an a=
rchaic <code class=3D"language-plaintext highlighter-rouge">tar</code>, bas=
ically) to create a library, which always have names like <code class=3D"la=
nguage-plaintext highlighter-rouge">libfoo.a</code> (the <code class=3D"lan=
guage-plaintext highlighter-rouge">lib</code> is mandatory). A static libra=
ry is just a collection of objects, which can be provided on an as-needed b=
asis to the linker.</p> <p>The =E2=80=9Cfinal link=E2=80=9D incorporates se=
veral <code class=3D"language-plaintext highlighter-rouge">.o</code> files =
and <code class=3D"language-plaintext highlighter-rouge">.a</code> files to=
 produce an executable. It does roughly the following:</p> <ol> <li>Parse a=
ll the objects and static libraries and put their <em>symbols</em> into a d=
atabase. Symbols are named addresses of functions and global variables.</li=
> <li>Search for all unresolved symbol references in the <code class=3D"lan=
guage-plaintext highlighter-rouge">.o</code> files and match it up with a s=
ymbol from the database, recursively doing this for any code in a <code cla=
ss=3D"language-plaintext highlighter-rouge">.a</code> referenced during thi=
s process. This forms a sort of dependency graph between sections. This ste=
p is called <em>symbol resolution</em>.</li> <li>Throw out any code that is=
n=E2=80=99t referenced by the input files by tracing the dependency graph f=
rom the entry-point symbol (e.g., <code class=3D"language-plaintext highlig=
hter-rouge">_start</code> on Linux). This step is called <em>garbage collec=
tion</em>.</li> <li>Execute the linker script to figure out how to stitch t=
he final binary together. This includes discovering the offsets at which ev=
erything will go.</li> <li>Resolve <em>relocations</em>, =E2=80=9Choles=E2=
=80=9D in the binary that require knowing the final runtime address of the =
section. Relocations are instructions placed in the object file for the lin=
ker to execute.</li> <li>Write out the completed binary.</li> </ol> <p>This=
 process is extremely memory-intensive; it is possible for colossal binarie=
s, especially ones with tons of debug information, to =E2=80=9Cfail to link=
=E2=80=9D because the linker exhausts the system=E2=80=99s memory.</p> <p>W=
e only care about step 4; whole books can be written about the previous ste=
ps. Thankfully, Ian Lance Taylor, mad linker scientist and author of <code =
class=3D"language-plaintext highlighter-rouge">gold</code>, has written sev=
eral excellent words on this topic: <a href=3D"https://lwn.net/Articles/276=
782/">https://lwn.net/Articles/276782/</a>.</p> <h2 id=3D"object-files-and-=
sections"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#object-f=
iles-and-sections">Object Files and Sections</a></h2> <p>Linkers, fundament=
ally, consume object files and produce object files; the output is executab=
le, meaning that all relocations have been resolved and an entry-point addr=
ess (where the OS/bootloader will jump to to start the binary).</p> <p>It=
=E2=80=99s useful to be able to peek into object files. The <code class=3D"=
language-plaintext highlighter-rouge">objdump</code> utility is best for th=
is. <code class=3D"language-plaintext highlighter-rouge">objdump -x my_obje=
ct.o</code> will show <em>all</em> headers, telling you what exactly is in =
it.</p> <p>At a high level, an object file describes how a program should b=
e loaded into memory. The object is divided into sections, which are named =
blocks of data. Sections may have file-like permissions, such as allocatabl=
e, loadable, readonly, and executable. <code class=3D"language-plaintext hi=
ghlighter-rouge">objdump -h</code> can be used to show the list of sections=
. Some selected lines of output from <code class=3D"language-plaintext high=
lighter-rouge">objdump</code> on my machine (I=E2=80=99m on a 64-bit machin=
e, but I=E2=80=99ve trimmed leading zeros to make it all fit):</p> <div cla=
ss=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-t=
erminal" data-lang=3D"terminal"><span class=3D"gp">$</span><span class=3D"w=
"> </span>objdump <span class=3D"nt">-h</span> <span class=3D"s2">"</span><=
span class=3D"si">$(</span>which clang<span class=3D"si">)</span><span clas=
s=3D"s2">"</span>
<span class=3D"go">/usr/bin/clang:     file format elf64-x86-64

Sections:
Idx Name    Size      VMA       LMA       File off  Algn
 11 .init   00000017  00691ab8  00691ab8  00291ab8  2**2
            CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt    00006bb0  00691ad0  00691ad0  00291ad0  2**4
            CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text   0165e861  00698680  00698680  00298680  2**4
            CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini   00000009  01cf6ee4  01cf6ee4  018f6ee4  2**2
            CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata 0018ec68  01cf6ef0  01cf6ef0  018f6ef0  2**4
            CONTENTS, ALLOC, LOAD, READONLY, DATA
 24 .data   000024e8  021cd5d0  021cd5d0  01dcc5d0  2**4
            CONTENTS, ALLOC, LOAD, DATA
 26 .bss    00009d21  021cfac0  021cfac0  01dceab8  2**4
            ALLOC</span></code></pre></figure><div class=3D"codeblock-butto=
ns"><div class=3D"codeblock-button">Terminal</div></div></div> <p>Allocatea=
ble (<code class=3D"language-plaintext highlighter-rouge">ALLOC</code>) sec=
tions must be <em>allocated</em> space by the operating system; if the sect=
ion is loadable (<code class=3D"language-plaintext highlighter-rouge">LOAD<=
/code>), then the operating system must further fill that space with the co=
ntents of the section. This process is called <em>loading</em> and is perfo=
rmed by a <em>loader</em> program<sup id=3D"fnref:bare-metal-loading" role=
=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#f=
n:bare-metal-loading" class=3D"footnote" rel=3D"footnote">7</a></sup>. The =
loader is sometimes called the =E2=80=9Cdynamic linker=E2=80=9D, and is oft=
en the same program as the =E2=80=9Cprogram linker=E2=80=9D; this is why th=
e linker is called <code class=3D"language-plaintext highlighter-rouge">ld<=
/code>.</p> <p>Loading can also be done beforehand using the <code class=3D=
"language-plaintext highlighter-rouge">binary</code> output format. This is=
 useful for tiny microcontrollers that are too primitive to perform any loa=
ding. <code class=3D"language-plaintext highlighter-rouge">objcopy</code> i=
s useful for this and many other tasks that involve transforming object fil=
es.</p> <p>Some common (POSIX) sections include:</p> <ul> <li><code class=
=3D"language-plaintext highlighter-rouge">.text</code>, where your code liv=
es<sup id=3D"fnref:text-section" role=3D"doc-noteref"><a href=3D"https://mc=
young.xyz/2021/06/01/linker-script/#fn:text-section" class=3D"footnote" rel=
=3D"footnote">8</a></sup>. It=E2=80=99s usually a loadable, readonly, execu=
table section.</li> <li><code class=3D"language-plaintext highlighter-rouge=
">.data</code> contains the initial values of global variables. It=E2=80=99=
s loadable.</li> <li><code class=3D"language-plaintext highlighter-rouge">.=
rodata</code> contains constants. It=E2=80=99s loadable and readonly.</li> =
<li><code class=3D"language-plaintext highlighter-rouge">.bss</code> is an =
empty allocatable section<sup id=3D"fnref:bss-section" role=3D"doc-noteref"=
><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:bss-section" c=
lass=3D"footnote" rel=3D"footnote">9</a></sup>. C specifies that uninitiali=
zed globals default to zero; this is a convenient way for avoiding storing =
a huge block of zeros in the executable!</li> <li>Debug sections that are n=
ot loaded or allocated; these are usually removed for release builds.</li> =
</ul> <p>After the linker decides which sections from the <code class=3D"la=
nguage-plaintext highlighter-rouge">.o</code> and <code class=3D"language-p=
laintext highlighter-rouge">.a</code> inputs to keep (based on which symbol=
s it decided it needed), it looks to the linker script how to arrange them =
in the output.</p> <p>Let=E2=80=99s write our first linker script!</p> <div=
 class=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"langua=
ge-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <span class=3D"=
p">{</span>
  <span class=3D"cm">/* Define an output section ".text". */</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span>
    <span class=3D"cm">/* Pull in all symbols in input sections named .text=
 */</span>
    <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">=
text</span><span class=3D"p">)</span>
    <span class=3D"cm">/* Do the same for sections starting with .text.,
       such as .text.foo */</span>
    <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">=
text</span><span class=3D"p">.</span><span class=3D"o">*</span><span class=
=3D"p">)</span>
  <span class=3D"p">}</span>

  <span class=3D"cm">/* Do the same for ".bss", ".rodata", and ".data". */<=
/span>
  <span class=3D"p">.</span><span class=3D"n">bss</span> <span class=3D"o">=
:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">bss</span><span class=3D"p">);</span> <sp=
an class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">bss</sp=
an><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">)<=
/span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">data</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">data</span><span class=3D"p">);</span> <s=
pan class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">data</=
span><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">=
)</span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">rodata</span> <span class=3D"=
o">:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span clas=
s=3D"p">(.</span><span class=3D"n">rodata</span><span class=3D"p">);</span>=
 <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">rod=
ata</span><span class=3D"p">.</span><span class=3D"o">*</span><span class=
=3D"p">)</span> <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
is tells the linker to create a <code class=3D"language-plaintext highlight=
er-rouge">.text</code> section in the output, which contains all sections n=
amed <code class=3D"language-plaintext highlighter-rouge">.text</code> from=
 all inputs, plus all sections with names like <code class=3D"language-plai=
ntext highlighter-rouge">.text.foo</code>. The content of the section is la=
id out in order: the contents of all <code class=3D"language-plaintext high=
lighter-rouge">.text</code> sections will come before any <code class=3D"la=
nguage-plaintext highlighter-rouge">.text.*</code> sections; I don=E2=80=99=
t think the linker makes any promises about the ordering between different =
objects<sup id=3D"fnref:order-sorting" role=3D"doc-noteref"><a href=3D"http=
s://mcyoung.xyz/2021/06/01/linker-script/#fn:order-sorting" class=3D"footno=
te" rel=3D"footnote">10</a></sup>.</p> <p>As I mentioned before, parsers fo=
r linker script are fussy<sup id=3D"fnref:comment-syntax" role=3D"doc-noter=
ef"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:comment-syn=
tax" class=3D"footnote" rel=3D"footnote">11</a></sup>: the space in <code c=
lass=3D"language-plaintext highlighter-rouge">.text :</code> is significant=
.</p> <p>Note that the two <code class=3D"language-plaintext highlighter-ro=
uge">.text</code> sections are different, and can have different names! The=
 linker generally doesn=E2=80=99t care what a section is named; just its at=
tributes. We could name it <code class=3D"language-plaintext highlighter-ro=
uge">code</code> if we wanted to; even the leading period is mere conventio=
n. Some object file formats don=E2=80=99t support arbitrary sections; all t=
he sane ones (ELF, COFF, Mach-O) don=E2=80=99t care, but they don=E2=80=99t=
 all spell it the same way; in Mach-O, you call it <code class=3D"language-=
plaintext highlighter-rouge">__text</code>.</p> <p>Before continuing, I rec=
ommend looking at the <a href=3D"https://mcyoung.xyz/2021/06/01/linker-scri=
pt/#appendix">appendix</a> so that you have a clear path towards being able=
 to run and test your linker scripts!</p> <blockquote> <h3 id=3D"input-sect=
ion-syntax"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#input-=
section-syntax">Input Section Syntax</a></h3> <p>None of this syntax is use=
d in practice but it=E2=80=99s useful to contextualize the syntax for pulli=
ng in a section. The full form of the syntax is</p> <div class=3D"codeblock=
"><figure class=3D"highlight"><pre><code class=3D"language-text" data-lang=
=3D"text">&gt; archive:object(section1 section2 ...)</code></pre></figure><=
div class=3D"codeblock-buttons"><div class=3D"codeblock-button">Plaintext</=
div></div></div> <p>Naturally, all of this is optional, so you can write <c=
ode class=3D"language-plaintext highlighter-rouge">foo.o</code> or <code cl=
ass=3D"language-plaintext highlighter-rouge">libbar.a:(.text)</code> or <co=
de class=3D"language-plaintext highlighter-rouge">:baz.o(.text .data)</code=
>, where the last one means =E2=80=9Cnot part of a library=E2=80=9D. There=
=E2=80=99s even an <code class=3D"language-plaintext highlighter-rouge">EXC=
LUDE_FILE</code> syntax for filtering by source object, and a <code class=
=3D"language-plaintext highlighter-rouge">INPUT_SECTION_FLAGS</code> syntax=
 for filtering by the presence of format-specific flags.</p> <p>Do not use =
any of this. Just write <code class=3D"language-plaintext highlighter-rouge=
">*(.text)</code> and don=E2=80=99t think about it too hard. The <code clas=
s=3D"language-plaintext highlighter-rouge">*</code> is just a glob for all =
objects.</p> </blockquote> <p>Each section has an <em>alignment</em>, which=
 is just the maximum of the alignments of all input sections pulled into it=
. This is important for ensuring that code and globals are aligned the way =
the architecture expects them to be. The alignment of a section can be set =
explicitly with</p> <div class=3D"codeblock"><figure class=3D"highlight"><p=
re><code class=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTION=
S</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">super_aligned</span> <span cl=
ass=3D"o">:</span> <span class=3D"n">ALIGN</span><span class=3D"p">(</span>=
<span class=3D"mi">16</span><span class=3D"p">)</span> <span class=3D"p">{<=
/span>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Yo=
u can also instruct the linker to toss out sections using the special <code=
 class=3D"language-plaintext highlighter-rouge">/DISCARD/</code> output sec=
tion, which overrides any decisions made at garbage-collection time. I=E2=
=80=99ve only ever used this to discard debug information that GCC was real=
ly excited about keeping around.</p> <p>On the other hand, you can use <cod=
e class=3D"language-plaintext highlighter-rouge">KEEP(*(.text.*))</code> to=
 ensure no <code class=3D"language-plaintext highlighter-rouge">.text</code=
> sections are discarded by garbage-collection. Unfortunately, this doesn=
=E2=80=99t let you pull in sections from static libraries that weren=E2=80=
=99t referenced in the input objects.</p> <h3 id=3D"lma-and-vma"><a href=3D=
"https://mcyoung.xyz/2021/06/01/linker-script/#lma-and-vma">LMA and VMA</a>=
</h3> <p>Every section has three addresses associated with it. The simplest=
 is the file offset: how far from the start of the file to find the section=
.</p> <p>The <em>virtual memory address</em>, or VMA, is where the program =
expects to find the section at runtime. This is the address that is used by=
 pointers and the program counter.</p> <p>The <em>load memory address</em>,=
 or LMA, is where the loader (be it a runtime loader or <code class=3D"lang=
uage-plaintext highlighter-rouge">objcpy</code>) must place the code. This =
is almost always the same as the VMA. Later on, in <a href=3D"https://mcyou=
ng.xyz/2021/06/01/linker-script/#rom-ram-lma">Using Symbols and LMAs</a>, I=
=E2=80=99ll explain a place where this is actually useful.</p> <p>When decl=
aring a new section, the VMA and LMA are both set to the value<sup id=3D"fn=
ref:dot-align" role=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/06/=
01/linker-script/#fn:dot-align" class=3D"footnote" rel=3D"footnote">12</a><=
/sup> of the <em>location counter</em>, which has the <em>extremely</em> de=
scriptive name <code class=3D"language-plaintext highlighter-rouge">.</code=
><sup id=3D"fnref:dot-in-asm" role=3D"doc-noteref"><a href=3D"https://mcyou=
ng.xyz/2021/06/01/linker-script/#fn:dot-in-asm" class=3D"footnote" rel=3D"f=
ootnote">13</a></sup>. This counter is automatically incremented as data is=
 copied from the input</p> <p>We can explicitly specify the VMA of a sectio=
n by putting an expression before the colon, and the LMA by putting an expr=
ession in the <code class=3D"language-plaintext highlighter-rouge">AT(lma)<=
/code> specifier <em>after</em> the colon:</p> <div class=3D"codeblock"><fi=
gure class=3D"highlight"><pre><code class=3D"language-cpp" data-lang=3D"cpp=
"><span class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"mh=
">0x10008000</span><span class=3D"o">:</span> <span class=3D"n">AT</span><s=
pan class=3D"p">(</span><span class=3D"mh">0x40008000</span><span class=3D"=
p">)</span> <span class=3D"p">{</span>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
is will modify the location counter; you could also write it as</p> <div cl=
ass=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-=
cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <span class=3D"p">=
{</span>
  <span class=3D"p">.</span> <span class=3D"o">=3D</span> <span class=3D"mh=
">0x10008000</span><span class=3D"p">;</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"n">AT</span><span class=3D"p">(</span><span class=
=3D"mh">0x40008000</span><span class=3D"p">)</span> <span class=3D"p">{</sp=
an>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Wi=
thin <code class=3D"language-plaintext highlighter-rouge">SECTIONS</code>, =
the location counter can be set at any point, even while in the middle of d=
eclaring a section (though the linker will probably complain if you do some=
thing rude like move it backwards).</p> <p>The location counter is incremen=
ted automatically as sections are added, so it=E2=80=99s rarely necessary t=
o fuss with it directly.</p> <h2 id=3D"memory-regions-and-section-allocatio=
n"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#memory-regions-=
and-section-allocation">Memory Regions and Section Allocation</a></h2> <p>B=
y default, the linker will simply allocate sections starting at address <co=
de class=3D"language-plaintext highlighter-rouge">0</code>. The <code class=
=3D"language-plaintext highlighter-rouge">MEMORY</code> statement can be us=
ed to define <em>memory regions</em> for more finely controlling how VMAs a=
nd LMAs are allocated without writing them down explicitly.</p> <p>A classi=
c example of a <code class=3D"language-plaintext highlighter-rouge">MEMORY<=
/code> block separates the address space into ROM and RAM:</p> <div class=
=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-cpp=
" data-lang=3D"cpp"><span class=3D"n">MEMORY</span> <span class=3D"p">{</sp=
an>
  <span class=3D"n">rom</span> <span class=3D"p">(</span><span class=3D"n">=
rx</span><span class=3D"p">)</span>   <span class=3D"o">:</span> <span clas=
s=3D"n">ORIGIN</span> <span class=3D"o">=3D</span> <span class=3D"mh">0x800=
0</span><span class=3D"p">,</span>     <span class=3D"n">LENGTH</span> <spa=
n class=3D"o">=3D</span> <span class=3D"mi">16</span><span class=3D"n">K</s=
pan>
  <span class=3D"n">ram</span> <span class=3D"p">(</span><span class=3D"n">=
rw</span><span class=3D"o">!</span><span class=3D"n">x</span><span class=3D=
"p">)</span> <span class=3D"o">:</span> <span class=3D"n">ORIGIN</span> <sp=
an class=3D"o">=3D</span> <span class=3D"mh">0x10000000</span><span class=
=3D"p">,</span> <span class=3D"n">LENGTH</span> <span class=3D"o">=3D</span=
> <span class=3D"mi">256</span><span class=3D"n">M</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>A =
region is a block of memory with a name and some attributes. The name is ir=
relevant beyond the scope of the linker script. The attributes in parens ar=
e used to specify what sections could conceivably go in that region. A sect=
ion is compatible if it has any of the attributes before the <code class=3D=
"language-plaintext highlighter-rouge">!</code>, and none which come after =
the <code class=3D"language-plaintext highlighter-rouge">!</code>. (This fi=
lter mini-language isn=E2=80=99t very expressive.)</p> <p>The attributes ar=
e the ones we mentioned earlier: <code class=3D"language-plaintext highligh=
ter-rouge">rwxal</code> are readonly, read/write, executable, allocated, an=
d loadable<sup id=3D"fnref:attrs-in-asm" role=3D"doc-noteref"><a href=3D"ht=
tps://mcyoung.xyz/2021/06/01/linker-script/#fn:attrs-in-asm" class=3D"footn=
ote" rel=3D"footnote">14</a></sup>.</p> <p>When allocating a section a VMA,=
 the linker will try to pick the best memory region that matches the filter=
 using a heuristic. I don=E2=80=99t really trust the heuristic, but you can=
 instead write <code class=3D"language-plaintext highlighter-rouge">&gt; re=
gion</code> to put something into a specific region. Thus,</p> <div class=
=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-cpp=
" data-lang=3D"cpp"><span class=3D"n">SECTION</span> <span class=3D"p">{</s=
pan>
  <span class=3D"p">.</span><span class=3D"n">data</span> <span class=3D"p"=
>{</span>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n=
">ram</span> <span class=3D"n">AT</span><span class=3D"o">&gt;</span> <span=
 class=3D"n">rom</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p><c=
ode class=3D"language-plaintext highlighter-rouge">AT&gt;</code> is the =E2=
=80=9Cobvious=E2=80=9D of <code class=3D"language-plaintext highlighter-rou=
ge">AT()</code> and <code class=3D"language-plaintext highlighter-rouge">&g=
t;</code>, and sets which region to allocate the LMA from.</p> <p>The origi=
n and length of a region can be obtained with the <code class=3D"language-p=
laintext highlighter-rouge">ORIGIN(region)</code> and <code class=3D"langua=
ge-plaintext highlighter-rouge">LENGTH(region)</code> functions.</p> <h2 id=
=3D"other-stuff-to-put-in-sections"><a href=3D"https://mcyoung.xyz/2021/06/=
01/linker-script/#other-stuff-to-put-in-sections">Other Stuff to Put In Sec=
tions</a></h2> <p>Output sections can hold more than just input sections. A=
rbitrary data can be placed into sections using the <code class=3D"language=
-plaintext highlighter-rouge">BYTE</code>, <code class=3D"language-plaintex=
t highlighter-rouge">SHORT</code>, <code class=3D"language-plaintext highli=
ghter-rouge">LONG</code> and <code class=3D"language-plaintext highlighter-=
rouge">QUAD</code> for placing literal 8, 16, 32, and 64-bit unsigned integ=
ers into the section:</p> <div class=3D"codeblock"><figure class=3D"highlig=
ht"><pre><code class=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">S=
ECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">screams_internally</span> <sp=
an class=3D"o">:</span> <span class=3D"p">{</span> <span class=3D"n">LONG</=
span><span class=3D"p">(</span><span class=3D"mh">0xaaaaaaaa</span><span cl=
ass=3D"p">)</span> <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Nu=
meric literals in linker script may, conveniently, be given the suffixes <c=
ode class=3D"language-plaintext highlighter-rouge">K</code> or <code class=
=3D"language-plaintext highlighter-rouge">M</code> to specify a kilobyte or=
 megabyte quantity. E.g., <code class=3D"language-plaintext highlighter-rou=
ge">4K</code> is sugar for <code class=3D"language-plaintext highlighter-ro=
uge">4096</code>.</p> <h3 id=3D"fill"><a href=3D"https://mcyoung.xyz/2021/0=
6/01/linker-script/#fill">Fill</a></h3> <p>You can fill the unused portions=
 of a section by using the <code class=3D"language-plaintext highlighter-ro=
uge">FILL</code> command, which sets the =E2=80=9Cfill pattern=E2=80=9D fro=
m that point onward. For example, we can create four kilobytes of <code cla=
ss=3D"language-plaintext highlighter-rouge">0xaa</code> using <code class=
=3D"language-plaintext highlighter-rouge">FILL</code> and the location coun=
ter:</p> <div class=3D"codeblock"><figure class=3D"highlight"><pre><code cl=
ass=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <s=
pan class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">scream_page</span> <span clas=
s=3D"o">:</span> <span class=3D"p">{</span>
    <span class=3D"n">FILL</span><span class=3D"p">(</span><span class=3D"m=
h">0xaa</span><span class=3D"p">)</span>
    <span class=3D"p">.</span> <span class=3D"o">+=3D</span> <span class=3D=
"mi">4</span><span class=3D"n">K</span><span class=3D"p">;</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
e =E2=80=9Cfill pattern=E2=80=9D is used to fill any unspecified space, suc=
h as alignment padding or jumping around with the location counter. We can =
use multiple FILLs to vary the fill pattern, such as if we wanted half the =
page to be <code class=3D"language-plaintext highlighter-rouge">0x0a</code>=
 and half <code class=3D"language-plaintext highlighter-rouge">0xa0</code>:=
</p> <div class=3D"codeblock"><figure class=3D"highlight"><pre><code class=
=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <span=
 class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">scream_page</span> <span clas=
s=3D"o">:</span> <span class=3D"p">{</span>
    <span class=3D"n">FILL</span><span class=3D"p">(</span><span class=3D"m=
h">0x0a</span><span class=3D"p">)</span>
    <span class=3D"p">.</span> <span class=3D"o">+=3D</span> <span class=3D=
"mi">2</span><span class=3D"n">K</span><span class=3D"p">;</span>
    <span class=3D"n">FILL</span><span class=3D"p">(</span><span class=3D"m=
h">0xa0</span><span class=3D"p">)</span>
    <span class=3D"p">.</span> <span class=3D"o">+=3D</span> <span class=3D=
"mi">2</span><span class=3D"n">K</span><span class=3D"p">;</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Wh=
en using one fill pattern for the whole section, you can just write <code c=
lass=3D"language-plaintext highlighter-rouge">=3D fill;</code> at the end o=
f the section. For example,</p> <div class=3D"codeblock"><figure class=3D"h=
ighlight"><pre><code class=3D"language-cpp" data-lang=3D"cpp"><span class=
=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">scream_page</span> <span clas=
s=3D"o">:</span> <span class=3D"p">{</span>
    <span class=3D"p">.</span> <span class=3D"o">+=3D</span> <span class=3D=
"mi">4</span><span class=3D"n">K</span><span class=3D"p">;</span>
  <span class=3D"p">}</span> <span class=3D"o">=3D</span> <span class=3D"mh=
">0xaa</span><span class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <h3 i=
d=3D"linker-symbols"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-scrip=
t/#linker-symbols">Linker Symbols</a></h3> <p>Although the linker needs to =
resolve all symbols using the input <code class=3D"language-plaintext highl=
ighter-rouge">.o</code> and <code class=3D"language-plaintext highlighter-r=
ouge">.a</code> files, you can also declare symbols directly in linker scri=
pt; this is the absolute latest that symbols can be provided. For example:<=
/p> <div class=3D"codeblock"><figure class=3D"highlight"><pre><code class=
=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <span=
 class=3D"p">{</span>
  <span class=3D"n">my_cool_symbol</span> <span class=3D"o">=3D</span> <spa=
n class=3D"mi">5</span><span class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
is will define a new symbol with value <code class=3D"language-plaintext hi=
ghlighter-rouge">5</code>. If we then wrote <code class=3D"language-plainte=
xt highlighter-rouge">extern char my_cool_symbol;</code>, we can access the=
 value placed by the linker. However, note that the value of a symbol is an=
 <em>address</em>! If you did</p> <div class=3D"codeblock"><figure class=3D=
"highlight"><pre><code class=3D"language-c" data-lang=3D"c"><span class=3D"=
k">extern</span> <span class=3D"kt">char</span> <span class=3D"n">my_cool_s=
ymbol</span><span class=3D"p">;</span>

<span class=3D"kt">uintptr_t</span> <span class=3D"nf">get</span><span clas=
s=3D"p">()</span> <span class=3D"p">{</span>
  <span class=3D"k">return</span> <span class=3D"n">my_cool_symbol</span><s=
pan class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">C</div></div></div> <p>the processor =
would be very confused about why you just dereferenced a pointer with addre=
ss <code class=3D"language-plaintext highlighter-rouge">5</code>. The <em>c=
orrect</em> way to extract a linker symbol=E2=80=99s value is to write</p> =
<div class=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"la=
nguage-c" data-lang=3D"c"><span class=3D"k">extern</span> <span class=3D"kt=
">char</span> <span class=3D"n">my_cool_symbol</span><span class=3D"p">;</s=
pan>

<span class=3D"kt">uintptr_t</span> <span class=3D"nf">get</span><span clas=
s=3D"p">()</span> <span class=3D"p">{</span>
  <span class=3D"k">return</span> <span class=3D"p">(</span><span class=3D"=
kt">uintptr_t</span><span class=3D"p">)</span><span class=3D"o">&amp;</span=
><span class=3D"n">my_cool_symbol</span><span class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">C</div></div></div> <p>It seems a bit=
 silly to take the address of the global and use that as some kind of magic=
 value, but that=E2=80=99s just how it works. The exact same mechanism work=
s in Rust, too:</p> <div class=3D"codeblock"><figure class=3D"highlight"><p=
re><code class=3D"language-rust" data-lang=3D"rust"><span class=3D"k">fn</s=
pan> <span class=3D"nf">get</span><span class=3D"p">()</span> <span class=
=3D"k">-&gt;</span> <span class=3D"nb">usize</span> <span class=3D"p">{</sp=
an>
  <span class=3D"k">extern</span> <span class=3D"s">"C"</span> <span class=
=3D"p">{</span>
    <span class=3D"nd">#[link_name</span> <span class=3D"nd">=3D</span> <sp=
an class=3D"s">"my_cool_symbol"</span><span class=3D"nd">]</span>
    <span class=3D"k">static</span> <span class=3D"n">SYM</span><span class=
=3D"p">:</span> <span class=3D"nb">u8</span><span class=3D"p">;</span>
  <span class=3D"p">}</span>

  <span class=3D"nd">addr_of!</span><span class=3D"p">(</span><span class=
=3D"n">SYM</span><span class=3D"p">)</span> <span class=3D"k">as</span> <sp=
an class=3D"nb">usize</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Rust</div></div></div> <p>The most co=
mmon use of this mechanism is percolating information not known until link =
time. For example, a common idiom is</p> <div class=3D"codeblock"><figure c=
lass=3D"highlight"><pre><code class=3D"language-cpp" data-lang=3D"cpp"><spa=
n class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span>
    <span class=3D"n">__text_start</span> <span class=3D"o">=3D</span> <spa=
n class=3D"p">.;</span>
    <span class=3D"cm">/* stuff */</span>
    <span class=3D"n">__text_end</span> <span class=3D"o">=3D</span> <span =
class=3D"p">.;</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
is allows initialization code to find the section=E2=80=99s address and len=
gth; in this case, the pointer values are actually meaningful!</p> <blockqu=
ote> <h3 id=3D"wunderbars"><a href=3D"https://mcyoung.xyz/2021/06/01/linker=
-script/#wunderbars">Wunderbars</a></h3> <p>It=E2=80=99s common practice to=
 lead linker symbols with two underscores, because C declares a surprisingl=
y large class of symbols reserved for the implementation, so normal user co=
de won=E2=80=99t call them. These include names like <code class=3D"languag=
e-plaintext highlighter-rouge">__text_start</code>, which start with two un=
derscores, and names starting with an underscore and an uppercase letter, l=
ike <code class=3D"language-plaintext highlighter-rouge">_Atomic</code>.</p=
> <p>However, libc and STL headers will totally use the double underscore s=
ymbols to make them resistant to tampering by users (which they are entitle=
d to), so beware!</p> </blockquote> <p>Symbol assignments can even go insid=
e of a section, to capture the location counter=E2=80=99s value between inp=
ut sections:</p> <div class=3D"codeblock"><figure class=3D"highlight"><pre>=
<code class=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</=
span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span>
    <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">=
text</span><span class=3D"p">)</span>
    <span class=3D"n">text_middle</span> <span class=3D"o">=3D</span> <span=
 class=3D"p">.;</span>
    <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">=
text</span><span class=3D"p">.</span><span class=3D"o">*</span><span class=
=3D"p">)</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Sy=
mbol names are not limited to C identifiers, and may contain dashes, period=
s, dollar signs, and other symbols. They may even be quoted, like <code cla=
ss=3D"language-plaintext highlighter-rouge">"this symbol has spaces"</code>=
, which C will never be able to access as an <code class=3D"language-plaint=
ext highlighter-rouge">extern</code>.</p> <p>There is a mini-language of ex=
pressions that symbols can be assigned to. This includes:</p> <ul> <li>Nume=
ric literals like <code class=3D"language-plaintext highlighter-rouge">42</=
code>, <code class=3D"language-plaintext highlighter-rouge">0xaa</code>, an=
d <code class=3D"language-plaintext highlighter-rouge">4K</code>.</li> <li>=
The location counter, <code class=3D"language-plaintext highlighter-rouge">=
.</code>.</li> <li>Other symbols.</li> <li>The usual set of C operators, su=
ch as arithmetic and bit operations. Xor is curiously missing.</li> <li>A h=
andful of builtin functions, described below.</li> </ul> <p>There are some =
fairly complicated rules around how symbols may be given relative addresses=
 to the start of a section, which are only relevant when dealing with posit=
ion-independent code: <a href=3D"https://sourceware.org/binutils/docs/ld/Ex=
pression-Section.html">https://sourceware.org/binutils/docs/ld/Expression-S=
ection.html</a></p> <p>Functions belong to one of two board categories: get=
ters for properties of sections, memory regions, and other linker structure=
s; and arithmetic. Useful functions include:</p> <ul> <li><code class=3D"la=
nguage-plaintext highlighter-rouge">ADDR</code>, <code class=3D"language-pl=
aintext highlighter-rouge">LOADADDR</code>, <code class=3D"language-plainte=
xt highlighter-rouge">SIZEOF</code>, and <code class=3D"language-plaintext =
highlighter-rouge">ALIGNOF</code>, which produce the VMA, LMA, size, and al=
ignment of a previously defined section.</li> <li><code class=3D"language-p=
laintext highlighter-rouge">ORIGIN</code> and <code class=3D"language-plain=
text highlighter-rouge">LENGTH</code>, which produce the start address and =
length of a memory region.</li> <li><code class=3D"language-plaintext highl=
ighter-rouge">MAX</code>, <code class=3D"language-plaintext highlighter-rou=
ge">MIN</code> are obvious; <code class=3D"language-plaintext highlighter-r=
ouge">LOG2CEIL</code> computes the base-2 log, rounded up.</li> <li><code c=
lass=3D"language-plaintext highlighter-rouge">ALIGN(expr, align)</code> rou=
nds <code class=3D"language-plaintext highlighter-rouge">expr</code> to the=
 next multiple of <code class=3D"language-plaintext highlighter-rouge">alig=
n</code>. <code class=3D"language-plaintext highlighter-rouge">ALIGN(align)=
</code> is roughly equivalent to <code class=3D"language-plaintext highligh=
ter-rouge">ALIGN(., align)</code> with some subtleties around PIC. <code cl=
ass=3D"language-plaintext highlighter-rouge">. =3D ALIGN(align);</code> wil=
l align the location counter to <code class=3D"language-plaintext highlight=
er-rouge">align</code>.</li> </ul> <p>Some other builtins can be found at <=
a href=3D"https://sourceware.org/binutils/docs/ld/Builtin-Functions.html">h=
ttps://sourceware.org/binutils/docs/ld/Builtin-Functions.html</a>.</p> <p>A=
 symbol definition can be wrapped in the <code class=3D"language-plaintext =
highlighter-rouge">PROVIDEO()</code> function to make it =E2=80=9Cweak=E2=
=80=9D, analogous to the =E2=80=9Cweak symbol=E2=80=9D feature found in Cla=
ng. This means that the linker will not use the definition if any input obj=
ect defines it.</p> <h3 id=3D"rom-ram-lma"><a href=3D"https://mcyoung.xyz/2=
021/06/01/linker-script/#rom-ram-lma">Using Symbols and LMAs</a></h3> <p>As=
 mentioned before, it is extremely rare for the LMA and VMA to be different=
. The most common situation where this occurs is when you=E2=80=99re runnin=
g on a system, like a microcontroller, where memory is partitioned into two=
 pieces: ROM and RAM. The ROM has the executable burned into it, and RAM st=
arts out full of random garbage.</p> <p>Most of the contents of the linked =
executable are read-only, so their VMA can be in ROM. However, the <code cl=
ass=3D"language-plaintext highlighter-rouge">.data</code> and <code class=
=3D"language-plaintext highlighter-rouge">.bss</code> sections need to lie =
in RAM, because they=E2=80=99re writable. For <code class=3D"language-plain=
text highlighter-rouge">.bss</code> this is easy, because it doesn=E2=80=99=
t have loadable content. For <code class=3D"language-plaintext highlighter-=
rouge">.data</code>, though, we need to separate the VMA and LMA: the VMA m=
ust go in RAM, and the LMA in ROM.</p> <p>This distinction is important for=
 the code that initializes the RAM: while for <code class=3D"language-plain=
text highlighter-rouge">.bss</code> all it has to do is zero it, for <code =
class=3D"language-plaintext highlighter-rouge">.data</code>, it has to copy=
 from ROM to RAM! The LMA lets us distinguish the copy source and the copy =
destination.</p> <p>This has the important property that it tells the loade=
r (usually <code class=3D"language-plaintext highlighter-rouge">objcopy</co=
de> in this case) to use the ROM addresses for actually loading the section=
 to, but to link the code as if it were at a RAM address (which is needed f=
or things like PC-relative loads to work correctly).</p> <p>Here=E2=80=99s =
how we=E2=80=99d do it in linker script:</p> <div class=3D"codeblock"><figu=
re class=3D"highlight"><pre><code class=3D"language-cpp" data-lang=3D"cpp">=
<span class=3D"n">MEMORY</span> <span class=3D"p">{</span>
  <span class=3D"n">rom</span> <span class=3D"o">:</span> <span class=3D"cm=
">/* ... */</span>
  <span class=3D"n">ram</span> <span class=3D"o">:</span> <span class=3D"cm=
">/* ... */</span>
<span class=3D"p">}</span>

<span class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"cm">/* .text and .rodata just go straight into the ROM. We=
 don't need
     to mutate them ever. */</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">text</span><span class=3D"p">)</span> <sp=
an class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n">rom=
</span>
  <span class=3D"p">.</span><span class=3D"n">rodata</span> <span class=3D"=
o">:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span clas=
s=3D"p">(.</span><span class=3D"n">rodata</span><span class=3D"p">)</span> =
<span class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n">=
rom</span>

  <span class=3D"cm">/* .bss doesn't have any "loadable" content, so it goe=
s straight
     into RAM. We could include `AT&gt; rom`, but because the sections
     have no content, it doesn't matter. */</span>
  <span class=3D"p">.</span><span class=3D"n">bss</span> <span class=3D"o">=
:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">bss</span><span class=3D"p">)</span> <spa=
n class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n">ram<=
/span>

  <span class=3D"cm">/* As described above, we need to get a RAM VMA but a =
ROM LMA;
     the &gt; and AT&gt; operators achieve this. */</span>
  <span class=3D"p">.</span><span class=3D"n">data</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">data</span><span class=3D"p">)</span> <sp=
an class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n">ram=
</span> <span class=3D"n">AT</span><span class=3D"o">&gt;</span> <span clas=
s=3D"n">rom</span>
<span class=3D"p">}</span>

<span class=3D"cm">/* The initialization code will need some symbols to kno=
w how to
   zero the .bss and copy the initial .data values. We can use the
   functions from the previous section for this! */</span>

<span class=3D"n">bss_start</span> <span class=3D"o">=3D</span> <span class=
=3D"n">ADDR</span><span class=3D"p">(.</span><span class=3D"n">bss</span><s=
pan class=3D"p">);</span>
<span class=3D"n">bss_end</span> <span class=3D"o">=3D</span> <span class=
=3D"n">bss_start</span> <span class=3D"o">+</span> <span class=3D"n">SIZEOF=
</span><span class=3D"p">(.</span><span class=3D"n">bss</span><span class=
=3D"p">);</span>

<span class=3D"n">data_start</span> <span class=3D"o">=3D</span> <span clas=
s=3D"n">ADDR</span><span class=3D"p">(.</span><span class=3D"n">data</span>=
<span class=3D"p">);</span>
<span class=3D"n">data_end</span> <span class=3D"o">=3D</span> <span class=
=3D"n">data_start</span> <span class=3D"o">+</span> <span class=3D"n">SIZEO=
F</span><span class=3D"p">(.</span><span class=3D"n">data</span><span class=
=3D"p">);</span>

<span class=3D"n">rom_data_start</span> <span class=3D"o">=3D</span> <span =
class=3D"n">LOADADDR</span><span class=3D"p">(.</span><span class=3D"n">dat=
a</span><span class=3D"p">);</span></code></pre></figure><div class=3D"code=
block-buttons"><div class=3D"codeblock-button">Linker Script</div></div></d=
iv> <p>Although we would normally write the initialization code in assembly=
 (since it=E2=80=99s undefined behavior to execute C before initializing th=
e <code class=3D"language-plaintext highlighter-rouge">.bss</code> and <cod=
e class=3D"language-plaintext highlighter-rouge">.data</code> sections), I=
=E2=80=99ve written it in C for illustrative purposes:</p> <div class=3D"co=
deblock"><figure class=3D"highlight"><pre><code class=3D"language-c" data-l=
ang=3D"c"><span class=3D"cp">#include</span> <span class=3D"cpf">&lt;string=
.h&gt;</span><span class=3D"cp">
</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">bss_start</span><span class=3D"p">[];</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">bss_end</span><span class=3D"p">[];</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">data_start</span><span class=3D"p">[];</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">data_end</span><span class=3D"p">[];</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">rom_data_start</span><span class=3D"p">[];</span>

<span class=3D"kt">void</span> <span class=3D"nf">init_sections</span><span=
 class=3D"p">(</span><span class=3D"kt">void</span><span class=3D"p">)</spa=
n> <span class=3D"p">{</span>
  <span class=3D"c1">// Zero the .bss.</span>
  <span class=3D"n">memset</span><span class=3D"p">(</span><span class=3D"n=
">bss_start</span><span class=3D"p">,</span> <span class=3D"mi">0</span><sp=
an class=3D"p">,</span> <span class=3D"n">bss_end</span> <span class=3D"o">=
-</span> <span class=3D"n">bss_start</span><span class=3D"p">);</span>

  <span class=3D"c1">// Copy the .data values from ROM to RAM.</span>
  <span class=3D"n">memcpy</span><span class=3D"p">(</span><span class=3D"n=
">data_start</span><span class=3D"p">,</span> <span class=3D"n">rom_data_st=
art</span><span class=3D"p">,</span> <span class=3D"n">data_end</span> <spa=
n class=3D"o">-</span> <span class=3D"n">data_start</span><span class=3D"p"=
>);</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">C</div></div></div> <h2 id=3D"misc-li=
nker-script-features"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-scri=
pt/#misc-linker-script-features">Misc Linker Script Features</a></h2> <p>Li=
nker script includes a bunch of other commands that don=E2=80=99t fit into =
a specific category:</p> <ul> <li><code class=3D"language-plaintext highlig=
hter-rouge">ENTRY()</code> sets the program entry-point, either as a symbol=
 or a raw address. The <code class=3D"language-plaintext highlighter-rouge"=
>-e</code> flag can be used to override it. The <code class=3D"language-pla=
intext highlighter-rouge">ld</code> docs assert that there are fallbacks if=
 an entry-point can=E2=80=99t be found, but in my experience you can someti=
mes get errors here. <code class=3D"language-plaintext highlighter-rouge">E=
NTRY(_start)</code> would use the <code class=3D"language-plaintext highlig=
hter-rouge">_start</code> symbol, for example<sup id=3D"fnref:not-main" rol=
e=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#=
fn:not-main" class=3D"footnote" rel=3D"footnote">15</a></sup>.</li> <li><co=
de class=3D"language-plaintext highlighter-rouge">INCLUDE "path/to/file.ld"=
</code> is <code class=3D"language-plaintext highlighter-rouge">#include</c=
ode> but for linker script.</li> <li><code class=3D"language-plaintext high=
lighter-rouge">INPUT(foo.o)</code> will add <code class=3D"language-plainte=
xt highlighter-rouge">foo.o</code> as a linker input, as if it was passed a=
t the commandline. <code class=3D"language-plaintext highlighter-rouge">GRO=
UP</code> is similar, but with the semantics of <code class=3D"language-pla=
intext highlighter-rouge">--start-group</code>.</li> <li><code class=3D"lan=
guage-plaintext highlighter-rouge">OUTPUT()</code> overrides the usual <cod=
e class=3D"language-plaintext highlighter-rouge">a.out</code> default outpu=
t name.</li> <li><code class=3D"language-plaintext highlighter-rouge">ASSER=
T()</code> provides static assertions.</li> <li><code class=3D"language-pla=
intext highlighter-rouge">EXTERN(sym)</code> causes the linker to behave as=
 if an undefined reference to <code class=3D"language-plaintext highlighter=
-rouge">sym</code> existed in an input object.</li> </ul> <p>(Other command=
s are documented, but I=E2=80=99ve never needed them in practice.)</p> <h2 =
id=3D"real-linker-scripts"><a href=3D"https://mcyoung.xyz/2021/06/01/linker=
-script/#real-linker-scripts">Real Linker Scripts</a></h2> <p>It may be use=
ful to look at some real-life linker scripts.</p> <p>If you wanna see what =
Clang, Rust, and the like all ultimately use, run <code class=3D"language-p=
laintext highlighter-rouge">ld --verbose</code>. This will print the defaul=
t linker script for your machine; this is a really intense script that uses=
 basically every feature available in linker script (and, since it=E2=80=99=
s GNU, is very poorly formatted).</p> <p>The Linux kernel also has linker s=
cripts, which are differently intense, because they use the C preprocessor.=
 For example, the one for amd64: <a href=3D"https://github.com/torvalds/lin=
ux/blob/master/arch/x86/kernel/vmlinux.lds.S">https://github.com/torvalds/l=
inux/blob/master/arch/x86/kernel/vmlinux.lds.S</a>.</p> <p>Tock OS, a secur=
e operating system written in Rust, has some pretty solid linker scripts, w=
ith lots of comments: <a href=3D"https://github.com/tock/tock/blob/master/b=
oards/kernel_layout.ld">https://github.com/tock/tock/blob/master/boards/ker=
nel_layout.ld</a>. I recommend taking a look to see what a =E2=80=9Creal=E2=
=80=9D but not too wild linker script looks like. There=E2=80=99s a fair bi=
t of toolchain-specific stuff in there, too, that should give you an idea o=
f what to expect.</p> <p>Happy linking!</p> <hr> <h2 id=3D"appendix"><a hre=
f=3D"https://mcyoung.xyz/2021/06/01/linker-script/#appendix">Appendix: A Li=
nker Playground</a></h2> <p>tl;dr: If you don=E2=80=99t wanna try out any e=
xamples, skip this section.</p> <p>I want you to be able to try out the exa=
mples above, but there=E2=80=99s no Godbolt for linker scripts (yet!). Unli=
ke normal code, you can=E2=80=99t just run linker script through a compiler=
, you=E2=80=99re gonna need some objects to link, too! Let=E2=80=99s set up=
 a very small C project for testing your linker scripts.</p> <blockquote> <=
p>Note: I=E2=80=99m assuming you=E2=80=99re on Linux, with x86_64, and usin=
g Clang. If you=E2=80=99re on a Mac (even M1), you can probably make <code =
class=3D"language-plaintext highlighter-rouge">ld64</code> do the right thi=
ng, but this is outside of what I=E2=80=99m an expert on.</p> <p>If you=E2=
=80=99re on Windows, use WSL. I have no idea how MSCV does linker scripts a=
t all.</p> </blockquote> <p>First, we want a very simple static library:</p=
> <div class=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"=
language-c" data-lang=3D"c"><span class=3D"kt">int</span> <span class=3D"nf=
">lib_call</span><span class=3D"p">(</span><span class=3D"k">const</span> <=
span class=3D"kt">char</span><span class=3D"o">*</span> <span class=3D"n">s=
tr</span><span class=3D"p">)</span> <span class=3D"p">{</span>
  <span class=3D"c1">// Discard `str`, we just want to take any argument.</=
span>
  <span class=3D"p">(</span><span class=3D"kt">void</span><span class=3D"p"=
>)</span><span class=3D"n">str</span><span class=3D"p">;</span>

  <span class=3D"c1">// This will go in `.bss`.</span>
  <span class=3D"k">static</span> <span class=3D"kt">int</span> <span class=
=3D"n">count</span><span class=3D"p">;</span>
  <span class=3D"k">return</span> <span class=3D"n">count</span><span class=
=3D"o">++</span><span class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><a class=3D"codeblock-button godbolt" href=3D"https://godbolt.org/cli=
entstate/eyJzZXNzaW9ucyI6W3siaWQiOjEsImxhbmd1YWdlIjoiYyIsInNvdXJjZSI6%20Iml=
udCBsaWJfY2FsbChjb25zdCBjaGFyKiBzdHIpIHtcbiAgLy8gRGlzY2Fy%20ZCBgc3RyYCwgd2U=
ganVzdCB3YW50IHRvIHRha2UgYW55IGFyZ3VtZW50Llxu%20ICAodm9pZClzdHI7XG5cbiAgLy8=
gVGhpcyB3aWxsIGdvIGluIGAuYnNzYC5c%20biAgc3RhdGljIGludCBjb3VudDtcbiAgcmV0dXJ=
uIGNvdW50Kys7XG59Iiwi%20Y29tcGlsZXJzIjpbeyJpZCI6ImNjbGFuZ190cnVuayIsIm9wdGl=
vbnMiOiIi%20fV19XX0=3D">godbolt</a><div class=3D"codeblock-button">extern.c=
</div></div></div> <p>Compile <code class=3D"language-plaintext highlighter=
-rouge">extern.c</code> into a static library like so:</p> <div class=3D"co=
deblock"><figure class=3D"highlight"><pre><code class=3D"language-shell" da=
ta-lang=3D"shell">clang <span class=3D"nt">-c</span> extern.c
ar rc libextern.a extern.o</code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Shell</div></div></div> <p>We can che=
ck out that we got something reasonable by using <code class=3D"language-pl=
aintext highlighter-rouge">nm</code>. The <code class=3D"language-plaintext=
 highlighter-rouge">nm</code> program shows you all the symbols a library o=
r object defines.</p> <div class=3D"codeblock"><figure class=3D"highlight">=
<pre><code class=3D"language-terminal" data-lang=3D"terminal"><span class=
=3D"gp">$</span><span class=3D"w"> </span>nm libextern.a
<span class=3D"go">extern.o:
0000000000000000 T lib_call
0000000000000000 b lib_call.count</span></code></pre></figure><div class=3D=
"codeblock-buttons"><div class=3D"codeblock-button">Terminal</div></div></d=
iv> <p>This shows us the address, section type, and name of each symbol; <c=
ode class=3D"language-plaintext highlighter-rouge">man nm</code> tells us t=
hat <code class=3D"language-plaintext highlighter-rouge">T</code> means <co=
de class=3D"language-plaintext highlighter-rouge">.text</code> and <code cl=
ass=3D"language-plaintext highlighter-rouge">b</code> means <code class=3D"=
language-plaintext highlighter-rouge">.bss</code>. Capital letters mean tha=
t the symbol is <em>exported</em>, so the linker can use it to resolve a sy=
mbol reference or a relocation. In C/C++, symbols declared <code class=3D"l=
anguage-plaintext highlighter-rouge">static</code> or in an unnamed namespa=
ce are =E2=80=9Chidden=E2=80=9D, and can=E2=80=99t be referenced outside of=
 the object. This is sometimes called internal vs external linkage.</p> <p>=
Next, we need a C program that uses the library:</p> <div class=3D"codebloc=
k"><figure class=3D"highlight"><pre><code class=3D"language-c" data-lang=3D=
"c"><span class=3D"k">extern</span> <span class=3D"kt">int</span> <span cla=
ss=3D"nf">lib_call</span><span class=3D"p">(</span><span class=3D"k">const<=
/span> <span class=3D"kt">char</span><span class=3D"o">*</span> <span class=
=3D"n">str</span><span class=3D"p">);</span>

<span class=3D"c1">// We're gonna use a custom entrypoint. This code will n=
ever run anyways, we</span>
<span class=3D"c1">// just care about the linker output.</span>
<span class=3D"kt">void</span> <span class=3D"nf">run</span><span class=3D"=
p">(</span><span class=3D"kt">void</span><span class=3D"p">)</span> <span c=
lass=3D"p">{</span>
  <span class=3D"c1">// This will go in `.data`, because it's initialized t=
o non-zero.</span>
  <span class=3D"k">static</span> <span class=3D"kt">int</span> <span class=
=3D"n">data</span> <span class=3D"o">=3D</span> <span class=3D"mi">5</span>=
<span class=3D"p">;</span>

  <span class=3D"c1">// The string-constant will go into `.rodata`.</span>
  <span class=3D"n">data</span> <span class=3D"o">=3D</span> <span class=3D=
"n">lib_call</span><span class=3D"p">(</span><span class=3D"s">"Hello from =
.rodata!"</span><span class=3D"p">);</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><a class=3D"codeblock-button godbolt" href=3D"https://godbolt.org/cli=
entstate/eyJzZXNzaW9ucyI6W3siaWQiOjEsImxhbmd1YWdlIjoiYyIsInNvdXJjZSI6%20ImV=
4dGVybiBpbnQgbGliX2NhbGwoY29uc3QgY2hhciogc3RyKTtcblxuLy8g%20V2UncmUgZ29ubmE=
gdXNlIGEgY3VzdG9tIGVudHJ5cG9pbnQuIFRoaXMgY29k%20ZSB3aWxsIG5ldmVyIHJ1biBhbnl=
3YXlzLCB3ZVxuLy8ganVzdCBjYXJlIGFi%20b3V0IHRoZSBsaW5rZXIgb3V0cHV0Llxudm9pZCB=
ydW4odm9pZCkge1xuICAv%20LyBUaGlzIHdpbGwgZ28gaW4gYC5kYXRhYCwgYmVjYXVzZSBpdCd=
zIGluaXRp%20YWxpemVkIHRvIG5vbi16ZXJvLlxuICBzdGF0aWMgaW50IGRhdGEgPSA1O1xu%20=
XG4gIC8vIFRoZSBzdHJpbmctY29uc3RhbnQgd2lsbCBnbyBpbnRvIGAucm9k%20YXRhYC5cbiAg=
ZGF0YSA9IGxpYl9jYWxsKFwiSGVsbG8gZnJvbSAucm9kYXRh%20IVwiKTtcbn0iLCJjb21waWxl=
cnMiOlt7ImlkIjoiY2NsYW5nX3RydW5rIiwi%20b3B0aW9ucyI6IiJ9XX1dfQ=3D=3D">godbol=
t</a><div class=3D"codeblock-button">run.c</div></div></div> <p>Compile it =
with <code class=3D"language-plaintext highlighter-rouge">clang -c run.c</c=
ode>. We can inspect the symbol table with <code class=3D"language-plaintex=
t highlighter-rouge">nm</code> as before:</p> <div class=3D"codeblock"><fig=
ure class=3D"highlight"><pre><code class=3D"language-terminal" data-lang=3D=
"terminal"><span class=3D"gp">$</span><span class=3D"w"> </span>nm run.o
<span class=3D"go">                 U lib_call
0000000000000000 T run
0000000000000000 d run.data</span></code></pre></figure><div class=3D"codeb=
lock-buttons"><div class=3D"codeblock-button">Terminal</div></div></div> <p=
>As you might guess, <code class=3D"language-plaintext highlighter-rouge">d=
</code> is just <code class=3D"language-plaintext highlighter-rouge">.data<=
/code>. However, <code class=3D"language-plaintext highlighter-rouge">U</co=
de> is interesting: it=E2=80=99s an undefined symbol, meaning the linker wi=
ll need to perform a symbol resolution! In fact, if we ask Clang to link th=
is for us (it just shells out to a linker like <code class=3D"language-plai=
ntext highlighter-rouge">ld</code>):</p> <div class=3D"codeblock"><figure c=
lass=3D"highlight"><pre><code class=3D"language-terminal" data-lang=3D"term=
inal"><span class=3D"gp">$</span><span class=3D"w"> </span>clang run.o
<span class=3D"go">/usr/bin/ld: /somewhere/crt1.o: in function `_start':
(.text+0x20): undefined reference to `main'
/usr/bin/ld: run.o: in function `run':
run.c:(.text+0xf): undefined reference to `lib_call'</span></code></pre></f=
igure><div class=3D"codeblock-buttons"><div class=3D"codeblock-button">Term=
inal</div></div></div> <p>The linker also complains that there=E2=80=99s no=
 <code class=3D"language-plaintext highlighter-rouge">main()</code> functio=
n, and that some object we didn=E2=80=99t provide called <code class=3D"lan=
guage-plaintext highlighter-rouge">crt1.o</code> wants it. This is the star=
tup code for the C runtime; we can skip linking it with <code class=3D"lang=
uage-plaintext highlighter-rouge">-nostartfiles</code>. This will result in=
 the linker picking an entry point for us.</p> <p>We can resolve the missin=
g symbol by linking against our library. <code class=3D"language-plaintext =
highlighter-rouge">-lfoo</code> says to search for the library <code class=
=3D"language-plaintext highlighter-rouge">libfoo.a</code>; <code class=3D"l=
anguage-plaintext highlighter-rouge">-L.</code> says to include the current=
 directory for searching for libraries.</p> <div class=3D"codeblock"><figur=
e class=3D"highlight"><pre><code class=3D"language-shell" data-lang=3D"shel=
l">clang run.o <span class=3D"nt">-L</span><span class=3D"nb">.</span> <spa=
n class=3D"nt">-lextern</span> <span class=3D"nt">-nostartfiles</span></cod=
e></pre></figure><div class=3D"codeblock-buttons"><div class=3D"codeblock-b=
utton">Shell</div></div></div> <p>This gives us our binary, <code class=3D"=
language-plaintext highlighter-rouge">a.out</code>, which we can now <code =
class=3D"language-plaintext highlighter-rouge">objdump</code>:</p> <div cla=
ss=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-t=
erminal" data-lang=3D"terminal"><span class=3D"gp">$</span><span class=3D"w=
"> </span>objdump <span class=3D"nt">-d</span> <span class=3D"nt">-Mintel</=
span> a.out
<span class=3D"go">
a.out:     file format elf64-x86-64


Disassembly of section .text:

</span><span class=3D"gp">0000000000401000 &lt;run&gt;</span>:
<span class=3D"go">  401000:  55                      push   rbp
  401001:  48 89 e5                mov    rbp,rsp
  401004:  48 bf 00 20 40 00 00    movabs rdi,0x402000
  40100b:  00 00 00=20
</span><span class=3D"gp">  40100e:  e8 0d 00 00 00          call   401020 =
&lt;lib_call&gt;</span><span class=3D"w">
</span><span class=3D"go">  401013:  89 04 25 00 40 40 00    mov    DWORD P=
TR ds:0x404000,eax
  40101a:  5d                      pop    rbp
  40101b:  c3                      ret   =20
  40101c:  0f 1f 40 00             nop    DWORD PTR [rax+0x0]

</span><span class=3D"gp">0000000000401020 &lt;lib_call&gt;</span>:
<span class=3D"go">  401020:  55                      push   rbp
  401021:  48 89 e5                mov    rbp,rsp
  401024:  48 89 7d f8             mov    QWORD PTR [rbp-0x8],rdi
  401028:  8b 04 25 04 40 40 00    mov    eax,DWORD PTR ds:0x404004
  40102f:  89 c1                   mov    ecx,eax
  401031:  83 c1 01                add    ecx,0x1
  401034:  89 0c 25 04 40 40 00    mov    DWORD PTR ds:0x404004,ecx
  40103b:  5d                      pop    rbp
  40103c:  c3                      ret    </span></code></pre></figure><div=
 class=3D"codeblock-buttons"><div class=3D"codeblock-button">Terminal</div>=
</div></div> <p>Let=E2=80=99s write up the simplest possible linker script =
for all this:</p> <div class=3D"codeblock"><figure class=3D"highlight"><pre=
><code class=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">ENTRY</sp=
an><span class=3D"p">(</span><span class=3D"n">run</span><span class=3D"p">=
)</span>
<span class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">text</span><span class=3D"p">);</span> <s=
pan class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">text</=
span><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">=
)</span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">bss</span> <span class=3D"o">=
:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">bss</span><span class=3D"p">);</span> <sp=
an class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">bss</sp=
an><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">)<=
/span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">data</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">data</span><span class=3D"p">);</span> <s=
pan class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">data</=
span><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">=
)</span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">rodata</span> <span class=3D"=
o">:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span clas=
s=3D"p">(.</span><span class=3D"n">rodata</span><span class=3D"p">);</span>=
 <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">rod=
ata</span><span class=3D"p">.</span><span class=3D"o">*</span><span class=
=3D"p">)</span> <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">link.ld</div></div></div> <p>Let=E2=
=80=99s link! We=E2=80=99ll also want to make sure that the system libc doe=
sn=E2=80=99t get in the way, using <code class=3D"language-plaintext highli=
ghter-rouge">-nostdlib</code><sup id=3D"fnref:libgcc_s" role=3D"doc-noteref=
"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:libgcc_s" cla=
ss=3D"footnote" rel=3D"footnote">16</a></sup>.</p> <div class=3D"codeblock"=
><figure class=3D"highlight"><pre><code class=3D"language-shell" data-lang=
=3D"shell">clang run.o <span class=3D"nt">-L</span><span class=3D"nb">.</sp=
an> <span class=3D"nt">-lextern</span> <span class=3D"nt">-nostartfiles</sp=
an> <span class=3D"nt">-nostdlib</span> <span class=3D"nt">-Wl</span>,-T,li=
nk.ld</code></pre></figure><div class=3D"codeblock-buttons"><div class=3D"c=
odeblock-button">Shell</div></div></div> <p>At this point, you can use <cod=
e class=3D"language-plaintext highlighter-rouge">objdump</code> to inspect =
<code class=3D"language-plaintext highlighter-rouge">a.out</code> at your l=
eisure! You=E2=80=99ll notice there are a few other sections, like <code cl=
ass=3D"language-plaintext highlighter-rouge">.eh_frame</code>. Clang adds t=
hese by default, but you can throw them out using <code class=3D"language-p=
laintext highlighter-rouge">/DISCARD/</code>.</p> <p>It=E2=80=99s worth it =
to run the examples in the post through the linker using this =E2=80=9Cplay=
ground=E2=80=9D. You can actually control the sections Clang puts symbols i=
nto using the <code class=3D"language-plaintext highlighter-rouge">__attrib=
ute__((section("blah")))</code> compiler extension. The Rust equivalent is =
<code class=3D"language-plaintext highlighter-rouge">#[link_section =3D "bl=
ah"]</code>.</p> <div class=3D"footnotes" role=3D"doc-endnotes"> <ol> <li i=
d=3D"fn:linker-flag" role=3D"doc-endnote"> <p>Blame GCC for this. <code cla=
ss=3D"language-plaintext highlighter-rouge">-Wl</code> feeds arguments thro=
ugh to the linker, and <code class=3D"language-plaintext highlighter-rouge"=
>-T</code> is <code class=3D"language-plaintext highlighter-rouge">ld</code=
>=E2=80=99s linker script input flag. Thankfully, rustc is far more sensibl=
e here: <code class=3D"language-plaintext highlighter-rouge">-Clink-args=3D=
-Wl,-T,foo.ld</code> (when GCC/Clang is your linker frontend).&nbsp;<a href=
=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:linker-flag" class=
=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=
=3D"fn:etymology-of-s" role=3D"doc-endnote"> <p>Correction, 2022-09-11. I h=
ave really been bothered by not knowing if this is actually true, and have =
periodically asked around about it. I asked Russ Cox, who was actually <em>=
at</em> Bell Labs back in the day, and he asked Ken Thompson, who confirms:=
 it=E2=80=99s genuinely <code class=3D"language-plaintext highlighter-rouge=
">.s</code> for source, because it was the only source they had back then.<=
/p> <p>I am glad I got this from the horse=E2=80=99s mouth. :)&nbsp;<a href=
=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:etymology-of-s" cla=
ss=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=
=3D"fn:clang-languages" role=3D"doc-endnote"> <p>And many other things, lik=
e Objective-C.&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script=
/#fnref:clang-languages" class=3D"reversefootnote" role=3D"doc-backlink">=
=E2=86=A9</a></p> </li> <li id=3D"fn:object-what" role=3D"doc-endnote"> <p>=
Completely and utterly unrelated to the objects of object-oriented programm=
ing. Best I can tell, the etymology is lost to time.&nbsp;<a href=3D"https:=
//mcyoung.xyz/2021/06/01/linker-script/#fnref:object-what" class=3D"reverse=
footnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:aout" =
role=3D"doc-endnote"> <p><code class=3D"language-plaintext highlighter-roug=
e">a.out</code> is <em>also</em> an object file format, like ELF, but toolc=
hains live and die by tradition, so that=E2=80=99s the name given to the li=
nker=E2=80=99s output by default.&nbsp;<a href=3D"https://mcyoung.xyz/2021/=
06/01/linker-script/#fnref:aout" class=3D"reversefootnote" role=3D"doc-back=
link">=E2=86=A9</a></p> </li> <li id=3D"fn:rust-objects" role=3D"doc-endnot=
e"> <p>Rust does not compile each <code class=3D"language-plaintext highlig=
hter-rouge">.rs</code> file into an object, and its =E2=80=9Ccrates=E2=80=
=9D are much larger than the average C++ translation unit. However, the Rus=
t compiler will nonetheless produce many object files for a single crate, p=
recisely for the benefit of this compilation model.&nbsp;<a href=3D"https:/=
/mcyoung.xyz/2021/06/01/linker-script/#fnref:rust-objects" class=3D"reverse=
footnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:bare-m=
etal-loading" role=3D"doc-endnote"> <p>Operating systems are loaded by a bo=
otloader. Bootloaders are themselves loaded by other bootloaders, such as t=
he BIOS. At the bottom of the turtles is the mask ROM, which is a tiny boot=
loader permanently burned into the device.&nbsp;<a href=3D"https://mcyoung.=
xyz/2021/06/01/linker-script/#fnref:bare-metal-loading" class=3D"reversefoo=
tnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:text-sect=
ion" role=3D"doc-endnote"> <p>No idea on the etymology. This isn=E2=80=99t =
ASCII text!&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#f=
nref:text-section" class=3D"reversefootnote" role=3D"doc-backlink">=E2=86=
=A9</a></p> </li> <li id=3D"fn:bss-section" role=3D"doc-endnote"> <p>Back i=
n the 50s, this stood for =E2=80=9Cblock started by symbol=E2=80=9D.&nbsp;<=
a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:bss-section" =
class=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li=
 id=3D"fn:order-sorting" role=3D"doc-endnote"> <p>Yes, yes, you can write <=
code class=3D"language-plaintext highlighter-rouge">SORT_BY_NAME(*)(.text)<=
/code> but that=E2=80=99s not really something you ever wind up needing.</p=
> <p>See <a href=3D"https://sourceware.org/binutils/docs/ld/Input-Section-W=
ildcards.html">https://sourceware.org/binutils/docs/ld/Input-Section-Wildca=
rds.html</a> for more information on this.&nbsp;<a href=3D"https://mcyoung.=
xyz/2021/06/01/linker-script/#fnref:order-sorting" class=3D"reversefootnote=
" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:comment-syntax=
" role=3D"doc-endnote"> <p>You only get <code class=3D"language-plaintext h=
ighlighter-rouge">/* */</code> comment syntax because that=E2=80=99s the lo=
west common denominator.&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/lin=
ker-script/#fnref:comment-syntax" class=3D"reversefootnote" role=3D"doc-bac=
klink">=E2=86=A9</a></p> </li> <li id=3D"fn:dot-align" role=3D"doc-endnote"=
> <p>Well, <code class=3D"language-plaintext highlighter-rouge">.</code> ac=
tually gets increased to the alignment of the section first. If you insist =
on an unaligned section, the syntax is, obviously,</p> <div class=3D"codebl=
ock"><figure class=3D"highlight"><pre><code class=3D"language-cpp" data-lan=
g=3D"cpp"><span class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">unaligned</span> <span class=
=3D"p">.</span><span class=3D"o">:</span> <span class=3D"p">{</span>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>(T=
hat was sarcasm. It must be stressed that this is not a friendly language.)=
&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:dot-al=
ign" class=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li=
> <li id=3D"fn:dot-in-asm" role=3D"doc-endnote"> <p>This symbol is also ava=
ilable in assembly files. <code class=3D"language-plaintext highlighter-rou=
ge">jmp .</code> is an overly-cute idiom for an infinity busy loop. It is e=
ven more terse in ARM and RISC-V, where it=E2=80=99s written <code class=3D=
"language-plaintext highlighter-rouge">b .</code> and <code class=3D"langua=
ge-plaintext highlighter-rouge">j .</code>, respectively.</p> <p>Personally=
, I prefer the obtuse clarity of <code class=3D"language-plaintext highligh=
ter-rouge">loop_forever: j loop_forever</code>.&nbsp;<a href=3D"https://mcy=
oung.xyz/2021/06/01/linker-script/#fnref:dot-in-asm" class=3D"reversefootno=
te" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:attrs-in-asm=
" role=3D"doc-endnote"> <p>These are the same characters used to declare a =
section in assembly. If I wanted to place my code in a section named <code =
class=3D"language-plaintext highlighter-rouge">.crt0</code> but wanted it t=
o be placed into a readonly, executable memory block, use the the assembler=
 directive <code class=3D"language-plaintext highlighter-rouge">.section .c=
rt0, rxal</code>&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/linker-scri=
pt/#fnref:attrs-in-asm" class=3D"reversefootnote" role=3D"doc-backlink">=E2=
=86=A9</a></p> </li> <li id=3D"fn:not-main" role=3D"doc-endnote"> <p>Note t=
hat the entry point is almost never a function called <code class=3D"langua=
ge-plaintext highlighter-rouge">main()</code>. In the default configuration=
 of most toolchains, an object called <code class=3D"language-plaintext hig=
hlighter-rouge">crt0.o</code> is provided as part of the libc, which provid=
es a <code class=3D"language-plaintext highlighter-rouge">_start()</code> f=
unction that itself calls <code class=3D"language-plaintext highlighter-rou=
ge">main()</code>. CRT stands for =E2=80=9CC runtime=E2=80=9D; thus, <code =
class=3D"language-plaintext highlighter-rouge">crt0.o</code> initializes th=
e C runtime.</p> <p>This file contains the moral equivalent of the followin=
g C code, which varies according to target:</p> <div class=3D"codeblock"><f=
igure class=3D"highlight"><pre><code class=3D"language-c" data-lang=3D"c"><=
span class=3D"k">extern</span> <span class=3D"kt">int</span> <span class=3D=
"nf">main</span><span class=3D"p">(</span><span class=3D"kt">int</span> <sp=
an class=3D"n">argc</span><span class=3D"p">,</span> <span class=3D"kt">cha=
r</span><span class=3D"o">**</span> <span class=3D"n">argv</span><span clas=
s=3D"p">);</span>
<span class=3D"n">noreturn</span> <span class=3D"kt">void</span> <span clas=
s=3D"nf">_start</span><span class=3D"p">()</span> <span class=3D"p">{</span=
>
  <span class=3D"n">init_libc</span><span class=3D"p">();</span>    <span c=
lass=3D"c1">// Initializes global libc state.</span>
  <span class=3D"n">run_ctors</span><span class=3D"p">();</span>    <span c=
lass=3D"c1">// Runs all library constructors.</span>
  <span class=3D"kt">int</span> <span class=3D"n">ret</span> <span class=3D=
"o">=3D</span> <span class=3D"n">main</span><span class=3D"p">(</span><span=
 class=3D"n">get_argc</span><span class=3D"p">(),</span> <span class=3D"n">=
get_argv</span><span class=3D"p">());</span>
  <span class=3D"n">run_dtors</span><span class=3D"p">();</span>    <span c=
lass=3D"c1">// Runs all library destructors.</span>
  <span class=3D"n">cleanup_libc</span><span class=3D"p">();</span> <span c=
lass=3D"c1">// Deinitializes the libc.</span>
 =20
  <span class=3D"n">exit</span><span class=3D"p">(</span><span class=3D"n">=
ret</span><span class=3D"p">);</span> <span class=3D"c1">// Asks the OS to =
gracefully destroy the process.</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">C</div></div></div> <p>This behavior =
can be disabled with <code class=3D"language-plaintext highlighter-rouge">-=
nostartfiles</code> in Clang. The OSDev wiki has some on this topic: <a hre=
f=3D"https://wiki.osdev.org/Creating_a_C_Library#Program_Initialization">ht=
tps://wiki.osdev.org/Creating_a_C_Library#Program_Initialization</a>.&nbsp;=
<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:not-main" cl=
ass=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li i=
d=3D"fn:libgcc_s" role=3D"doc-endnote"> <p>If you include libc, you will ge=
t bizarre errors involving something called =E2=80=9C<code class=3D"languag=
e-plaintext highlighter-rouge">gcc_s</code>=E2=80=9D. <code class=3D"langua=
ge-plaintext highlighter-rouge">libgcc</code> (and <code class=3D"language-=
plaintext highlighter-rouge">libgcc_s</code>) is GCC=E2=80=99s <em>compiler=
 runtime</em> library. Where <code class=3D"language-plaintext highlighter-=
rouge">libc</code> exposes high-level operations on the C runtime and utili=
ties for manipulating common objects, <code class=3D"language-plaintext hig=
hlighter-rouge">libgcc</code> provides even lower-level support, including:=
</p> <ul> <li>Polyfills for arithmetic operations not available on the targ=
et. For example, dividing two 64-bit integers on most 32-bit targets will e=
mit a reference to the a symbol like <code class=3D"language-plaintext high=
lighter-rouge">__udivmoddi4</code> (they all have utterly incomprehensible =
names like this one).</li> <li>Soft-float implementations, i.e., IEEE float=
s implemented in software for targets without an FPU.</li> <li>Bits of unwi=
nding (e.g. exceptions and panics) support (the rest is in <code class=3D"l=
anguage-plaintext highlighter-rouge">libunwind</code>).</li> <li>Miscellane=
ous runtime support code, such as the code that calls C++ static initialize=
rs.</li> </ul> <p>Clang=E2=80=99s version, <code class=3D"language-plaintex=
t highlighter-rouge">libcompiler-rt</code>, is ABI-compatible with <code cl=
ass=3D"language-plaintext highlighter-rouge">libgcc</code> and provides var=
ious support for profiling, sanitizers, and many, many other things the com=
piler needs available for compiling code.&nbsp;<a href=3D"https://mcyoung.x=
yz/2021/06/01/linker-script/#fnref:libgcc_s" class=3D"reversefootnote" role=
=3D"doc-backlink">=E2=86=A9</a></p> </li> </ol> </div> </div> <div class=3D=
"related post-footer"> <h2>Related Posts</h2> <ul class=3D"related-posts"> =
<li> <span class=3D"post-meta">2024-12-16</span> / <h6 style=3D"display:inl=
ine"><a href=3D"https://mcyoung.xyz/2024/12/16/rangefuncs/">Go's Weird Litt=
le Iterators</a></h6> </li><li> <span class=3D"post-meta">2024-12-12</span>=
 / <h6 style=3D"display:inline"><a href=3D"https://mcyoung.xyz/2024/12/12/g=
o-abi/">Things You Never Wanted To Know About Go Interfaces</a></h6> </li><=
li> <span class=3D"post-meta">2024-12-10</span> / <h6 style=3D"display:inli=
ne"><a href=3D"https://mcyoung.xyz/2024/12/10/json-sucks/">Nobody Gets Fire=
d for Picking JSON, but Maybe They Should?</a></h6> </li></ul> </div> <div =
class=3D"minimap" style=3D"width: 232.95px; right: calc((29rem - 849px) * 0=
.150032);"> <div class=3D"minimap-size" style=3D"padding-top: 1759.11%;"></=
div> <div class=3D"minimap-controller" style=3D"right: -108.023px; padding-=
top: 54.2384%; transform: translate(0px, 669.966px);"></div> <div class=3D"=
minimap-content" style=3D"width: 666.524%; height: 666.524%; transform: sca=
le(0.150032); top: -3001.2px;"> <div class=3D"content container"> <div clas=
s=3D"post-title"> <span class=3D"post-meta"> 2021-06-01 =E2=80=A2 4898 word=
s =E2=80=A2 40 minutes <br class=3D"show-if-mobile"> <span class=3D"hide-if=
-mobile">=E2=80=A2</span> <a href=3D"https://mcyoung.xyz/tags.html#dark-art=
s">#dark-arts</a> =E2=80=A2 <a href=3D"https://mcyoung.xyz/tags.html#linker=
s">#linkers</a> =E2=80=A2 <a href=3D"https://mcyoung.xyz/tags.html#toolchai=
ns">#toolchains</a> </span> <h1><a href=3D"https://mcyoung.xyz/2021/06/01/l=
inker-script/"> Everything You Never Wanted To Know About Linker Script </a=
></h1> </div> <div class=3D"post"> <p>Low level software usually has lots o=
f <code class=3D"language-plaintext highlighter-rouge">.cc</code> or <code =
class=3D"language-plaintext highlighter-rouge">.rs</code> files. Even lower=
-level software, like your cryptography library, probably has <code class=
=3D"language-plaintext highlighter-rouge">.S</code> containing assembly, my=
 least favorite language for code review.</p> <p>The lowest level software =
out there, firmware, kernels, and drivers, have one third file type to feed=
 into the toolchain: an <code class=3D"language-plaintext highlighter-rouge=
">.ld</code> file, a =E2=80=9Clinker script=E2=80=9D. The linker script, pr=
ovided to Clang as <code class=3D"language-plaintext highlighter-rouge">-Wl=
,-T,foo.ld</code><sup id=3D"fnref:linker-flag" role=3D"doc-noteref"><a href=
=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:linker-flag" class=3D"=
footnote" rel=3D"footnote">1</a></sup>, is like a template for the final ex=
ecutable. It tells the linker how to organize code from the input objects. =
This permits extremely precise control over the toolchain=E2=80=99s output.=
</p> <p>Very few people know how to write linker script; it=E2=80=99s a bit=
 of an obscure skill. Unfortunately, I=E2=80=99m one of them, so I get call=
ed to do it on occasion. Hopefully, this post is a good enough summary of t=
he linker script language that you, too, can build your own binary!</p> <p>=
Everything in this post can be found in excruciating detail in <a href=3D"h=
ttps://sourceware.org/binutils/docs/ld/index.html">GNU <code class=3D"langu=
age-plaintext highlighter-rouge">ld</code>=E2=80=99s documentation</a>; <co=
de class=3D"language-plaintext highlighter-rouge">lld</code> accepts basica=
lly the same syntax. There=E2=80=99s no spec, just what your linker happens=
 to accept. I will, however, do my best to provide a more friendly introduc=
tion.</p> <p>No prior knowledge of how toolchains work is necessary! Where =
possible, I=E2=80=99ve tried to provide historical context on the names of =
everything. Toolchains are, unfortunately, bound by half a century of tradi=
tion. Better to at least know why they=E2=80=99re called that.</p> <blockqu=
ote> <h3 id=3D"wait-an-s-file"><a href=3D"https://mcyoung.xyz/2021/06/01/li=
nker-script/#wait-an-s-file">Wait, an <code class=3D"language-plaintext hig=
hlighter-rouge">.S</code> file?</a></h3> <p>On Windows, assembly files use =
the sensible <code class=3D"language-plaintext highlighter-rouge">.asm</cod=
e> extension. POSIX we use the <code class=3D"language-plaintext highlighte=
r-rouge">.s</code> extension, or <code class=3D"language-plaintext highligh=
ter-rouge">.S</code> when we=E2=80=99d like Clang to run the C preprocessor=
 on them (virtually all hand-written assembly is of the second kind).</p> <=
p>I don=E2=80=99t actually have a historical citation<sup id=3D"fnref:etymo=
logy-of-s" role=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/06/01/l=
inker-script/#fn:etymology-of-s" class=3D"footnote" rel=3D"footnote">2</a><=
/sup> for <code class=3D"language-plaintext highlighter-rouge">.s</code>, o=
ther than that it came from the Unix tradition of obnoxiously terse names. =
If we are to believe that <code class=3D"language-plaintext highlighter-rou=
ge">.o</code> stands for =E2=80=9Cobject=E2=80=9D, and <code class=3D"langu=
age-plaintext highlighter-rouge">.a</code> stands for =E2=80=9Carchive=E2=
=80=9D, then <code class=3D"language-plaintext highlighter-rouge">.s</code>=
 must stand for =E2=80=9Csource=E2=80=9D, up until the B compiler replaced =
them with <code class=3D"language-plaintext highlighter-rouge">.b</code> fi=
les! See <a href=3D"http://man.cat-v.org/unix-1st/1/b">http://man.cat-v.org=
/unix-1st/1/b</a>.</p> <p>A final bit of trivia: <code class=3D"language-pl=
aintext highlighter-rouge">.C</code> files are obviously different from <co=
de class=3D"language-plaintext highlighter-rouge">.c</code> files=E2=80=A6 =
they=E2=80=99re C++ files! (Seriously, try it.)</p> </blockquote> <blockquo=
te> <p>Note: This post is specifically about POSIX. I know basically nothin=
g about MSVC and <code class=3D"language-plaintext highlighter-rouge">link.=
exe</code> other than that they exist. The most I=E2=80=99ve done is helped=
 people debug trivial <code class=3D"language-plaintext highlighter-rouge">=
__declspec</code> issues.</p> <p>I will also only be covering things specif=
ic to linking an executable; linking other outputs, like shared libraries, =
is beyond this post.</p> </blockquote> <h2 id=3D"seriously-whats-a-linker">=
<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#seriously-whats-a-=
linker">Seriously, What=E2=80=99s a linker?</a></h2> <p>A linker is but a s=
mall part of a <em>toolchain</em>, the low-level programmer=E2=80=99s toolb=
ox: everything you need to go from source code to execution.</p> <p>The cro=
wn jewel of any toolchain is the compiler. The LLVM toolchain, for example,=
 includes Clang, a C/C++<sup id=3D"fnref:clang-languages" role=3D"doc-noter=
ef"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:clang-langu=
ages" class=3D"footnote" rel=3D"footnote">3</a></sup> compiler. The compile=
r takes source code, such as <code class=3D"language-plaintext highlighter-=
rouge">.cc</code>, and lowers it down to a <code class=3D"language-plaintex=
t highlighter-rouge">.s</code> file, an <em>assembly file</em> which textua=
lly describes machine code for a specific architecture (you can also write =
them yourself).</p> <p>Another toolchain program, the assembler, <em>assemb=
les</em> each <code class=3D"language-plaintext highlighter-rouge">.s</code=
> into a <code class=3D"language-plaintext highlighter-rouge">.o</code> fil=
e, an <em>object file</em><sup id=3D"fnref:object-what" role=3D"doc-noteref=
"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:object-what" =
class=3D"footnote" rel=3D"footnote">4</a></sup>. An assembly file is merely=
 a textual representation of an object file; assemblers are not particularl=
y interesting programs.</p> <p>A third program, the linker, <em>links</em> =
all of your object files into a final <em>executable</em> or <em>binary</em=
>, traditionally given the name <code class=3D"language-plaintext highlight=
er-rouge">a.out</code><sup id=3D"fnref:aout" role=3D"doc-noteref"><a href=
=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:aout" class=3D"footnot=
e" rel=3D"footnote">5</a></sup>.</p> <p>This three (or two, if you do compi=
le/assemble in one step) phase process is sometimes called the <em>C compil=
ation model</em>. All modern software build infrastructure is built around =
this model<sup id=3D"fnref:rust-objects" role=3D"doc-noteref"><a href=3D"ht=
tps://mcyoung.xyz/2021/06/01/linker-script/#fn:rust-objects" class=3D"footn=
ote" rel=3D"footnote">6</a></sup>.</p> <blockquote> <h3 id=3D"even-more-sta=
ges"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#even-more-sta=
ges">Even More Stages!</a></h3> <p>Clang, being based on LLVM, actually exp=
oses one stage in between the <code class=3D"language-plaintext highlighter=
-rouge">.cc</code> file and the <code class=3D"language-plaintext highlight=
er-rouge">.s</code> file. You can ask it to skip doing codegen and emit a <=
code class=3D"language-plaintext highlighter-rouge">.ll</code> file filled =
with LLVM IR, an intermediate between human-writable source code and assemb=
ly. The magic words to get this file are <code class=3D"language-plaintext =
highlighter-rouge">clang -S -emit-llvm</code>. (The Rust equivalent is <cod=
e class=3D"language-plaintext highlighter-rouge">rustc --emit=3Dllvm-ir</co=
de>.)</p> <p>The LLVM toolchain provides <code class=3D"language-plaintext =
highlighter-rouge">llc</code>, the LLVM compiler, which performs the <code =
class=3D"language-plaintext highlighter-rouge">.ll</code> -&gt; <code class=
=3D"language-plaintext highlighter-rouge">.s</code> step (optionally assemb=
ling it, too). <code class=3D"language-plaintext highlighter-rouge">lli</co=
de> is an interpreter for the IR. Studying IR is mostly useful for understa=
nding optimization behavior; topic for another day.</p> </blockquote> <p>Th=
e compiler, assembler, and linker are the central components of a toolchain=
. Other languages, like Rust, usually provide their own toolchain, or just =
a compiler, reusing the existing C/C++ toolchain. The assembler and linker =
are language agnostic.</p> <p>The toolchain also provides various debugging=
 tools, including an interactive debugger, and tools for manipulating objec=
t files, such as <code class=3D"language-plaintext highlighter-rouge">nm</c=
ode>, <code class=3D"language-plaintext highlighter-rouge">objdump</code>, =
<code class=3D"language-plaintext highlighter-rouge">objcopy</code>, and <c=
ode class=3D"language-plaintext highlighter-rouge">ar</code>.</p> <p>These =
days, most of this stuff is bundled into a single program, the compiler fro=
ntend, which knows how to compiler, assemble, and link, in one invocation. =
You can ask Clang to spit out <code class=3D"language-plaintext highlighter=
-rouge">.o</code> files with <code class=3D"language-plaintext highlighter-=
rouge">clang -c</code>, and <code class=3D"language-plaintext highlighter-r=
ouge">.s</code> files with <code class=3D"language-plaintext highlighter-ro=
uge">clang -S</code>.</p> <blockquote> <h3 id=3D"trs-nms"><a href=3D"https:=
//mcyoung.xyz/2021/06/01/linker-script/#trs-nms">Trs Nms</a></h3> <p>The UN=
IX crowd at Bell Labs was very excited about short, terse names. This tradi=
tion survives in Go=E2=80=99s somewhat questionable practice of single-lett=
er variables.</p> <p>Most toolchain program names are cute contractions. <c=
ode class=3D"language-plaintext highlighter-rouge">cc</code> is =E2=80=9CC =
compiler=E2=80=9D; compilers for almost all other languages follow this con=
vention, like <code class=3D"language-plaintext highlighter-rouge">rustc</c=
ode>, <code class=3D"language-plaintext highlighter-rouge">javac</code>, <c=
ode class=3D"language-plaintext highlighter-rouge">protoc</code>, and <code=
 class=3D"language-plaintext highlighter-rouge">scalac</code>; Clang is jus=
t <code class=3D"language-plaintext highlighter-rouge">clang</code>, but is=
 perfectly ok being called as <code class=3D"language-plaintext highlighter=
-rouge">cc</code>.</p> <p><code class=3D"language-plaintext highlighter-rou=
ge">as</code> is =E2=80=9Cassembler=E2=80=9D; <code class=3D"language-plain=
text highlighter-rouge">ld</code> is =E2=80=9Cloader=E2=80=9D (you=E2=80=99=
ll learn why sooner). <code class=3D"language-plaintext highlighter-rouge">=
ar</code> is =E2=80=9Carchiver=E2=80=9D, <code class=3D"language-plaintext =
highlighter-rouge">nm</code> is =E2=80=9Cnames=E2=80=9D. Other names tend t=
o be a bit more sensible.</p> </blockquote> <h3 id=3D"final-link"><a href=
=3D"https://mcyoung.xyz/2021/06/01/linker-script/#final-link">Final Link</a=
></h3> <p>Some fifty years ago at Bell Labs, someone really wanted to write=
 a program with more than one <code class=3D"language-plaintext highlighter=
-rouge">.s</code> file. To solve this, a program that could =E2=80=9Clink=
=E2=80=9D symbol references across object files was written: the first link=
er.</p> <p>You can take several <code class=3D"language-plaintext highlight=
er-rouge">.o</code> files and use <code class=3D"language-plaintext highlig=
hter-rouge">ar</code> (an archaic <code class=3D"language-plaintext highlig=
hter-rouge">tar</code>, basically) to create a library, which always have n=
ames like <code class=3D"language-plaintext highlighter-rouge">libfoo.a</co=
de> (the <code class=3D"language-plaintext highlighter-rouge">lib</code> is=
 mandatory). A static library is just a collection of objects, which can be=
 provided on an as-needed basis to the linker.</p> <p>The =E2=80=9Cfinal li=
nk=E2=80=9D incorporates several <code class=3D"language-plaintext highligh=
ter-rouge">.o</code> files and <code class=3D"language-plaintext highlighte=
r-rouge">.a</code> files to produce an executable. It does roughly the foll=
owing:</p> <ol> <li>Parse all the objects and static libraries and put thei=
r <em>symbols</em> into a database. Symbols are named addresses of function=
s and global variables.</li> <li>Search for all unresolved symbol reference=
s in the <code class=3D"language-plaintext highlighter-rouge">.o</code> fil=
es and match it up with a symbol from the database, recursively doing this =
for any code in a <code class=3D"language-plaintext highlighter-rouge">.a</=
code> referenced during this process. This forms a sort of dependency graph=
 between sections. This step is called <em>symbol resolution</em>.</li> <li=
>Throw out any code that isn=E2=80=99t referenced by the input files by tra=
cing the dependency graph from the entry-point symbol (e.g., <code class=3D=
"language-plaintext highlighter-rouge">_start</code> on Linux). This step i=
s called <em>garbage collection</em>.</li> <li>Execute the linker script to=
 figure out how to stitch the final binary together. This includes discover=
ing the offsets at which everything will go.</li> <li>Resolve <em>relocatio=
ns</em>, =E2=80=9Choles=E2=80=9D in the binary that require knowing the fin=
al runtime address of the section. Relocations are instructions placed in t=
he object file for the linker to execute.</li> <li>Write out the completed =
binary.</li> </ol> <p>This process is extremely memory-intensive; it is pos=
sible for colossal binaries, especially ones with tons of debug information=
, to =E2=80=9Cfail to link=E2=80=9D because the linker exhausts the system=
=E2=80=99s memory.</p> <p>We only care about step 4; whole books can be wri=
tten about the previous steps. Thankfully, Ian Lance Taylor, mad linker sci=
entist and author of <code class=3D"language-plaintext highlighter-rouge">g=
old</code>, has written several excellent words on this topic: <a href=3D"h=
ttps://lwn.net/Articles/276782/">https://lwn.net/Articles/276782/</a>.</p> =
<h2 id=3D"object-files-and-sections"><a href=3D"https://mcyoung.xyz/2021/06=
/01/linker-script/#object-files-and-sections">Object Files and Sections</a>=
</h2> <p>Linkers, fundamentally, consume object files and produce object fi=
les; the output is executable, meaning that all relocations have been resol=
ved and an entry-point address (where the OS/bootloader will jump to to sta=
rt the binary).</p> <p>It=E2=80=99s useful to be able to peek into object f=
iles. The <code class=3D"language-plaintext highlighter-rouge">objdump</cod=
e> utility is best for this. <code class=3D"language-plaintext highlighter-=
rouge">objdump -x my_object.o</code> will show <em>all</em> headers, tellin=
g you what exactly is in it.</p> <p>At a high level, an object file describ=
es how a program should be loaded into memory. The object is divided into s=
ections, which are named blocks of data. Sections may have file-like permis=
sions, such as allocatable, loadable, readonly, and executable. <code class=
=3D"language-plaintext highlighter-rouge">objdump -h</code> can be used to =
show the list of sections. Some selected lines of output from <code class=
=3D"language-plaintext highlighter-rouge">objdump</code> on my machine (I=
=E2=80=99m on a 64-bit machine, but I=E2=80=99ve trimmed leading zeros to m=
ake it all fit):</p> <div class=3D"codeblock"><figure class=3D"highlight"><=
pre><code class=3D"language-terminal" data-lang=3D"terminal"><span class=3D=
"gp">$</span><span class=3D"w"> </span>objdump <span class=3D"nt">-h</span>=
 <span class=3D"s2">"</span><span class=3D"si">$(</span>which clang<span cl=
ass=3D"si">)</span><span class=3D"s2">"</span>
<span class=3D"go">/usr/bin/clang:     file format elf64-x86-64

Sections:
Idx Name    Size      VMA       LMA       File off  Algn
 11 .init   00000017  00691ab8  00691ab8  00291ab8  2**2
            CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt    00006bb0  00691ad0  00691ad0  00291ad0  2**4
            CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text   0165e861  00698680  00698680  00298680  2**4
            CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini   00000009  01cf6ee4  01cf6ee4  018f6ee4  2**2
            CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata 0018ec68  01cf6ef0  01cf6ef0  018f6ef0  2**4
            CONTENTS, ALLOC, LOAD, READONLY, DATA
 24 .data   000024e8  021cd5d0  021cd5d0  01dcc5d0  2**4
            CONTENTS, ALLOC, LOAD, DATA
 26 .bss    00009d21  021cfac0  021cfac0  01dceab8  2**4
            ALLOC</span></code></pre></figure><div class=3D"codeblock-butto=
ns"><div class=3D"codeblock-button">Terminal</div></div></div> <p>Allocatea=
ble (<code class=3D"language-plaintext highlighter-rouge">ALLOC</code>) sec=
tions must be <em>allocated</em> space by the operating system; if the sect=
ion is loadable (<code class=3D"language-plaintext highlighter-rouge">LOAD<=
/code>), then the operating system must further fill that space with the co=
ntents of the section. This process is called <em>loading</em> and is perfo=
rmed by a <em>loader</em> program<sup id=3D"fnref:bare-metal-loading" role=
=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#f=
n:bare-metal-loading" class=3D"footnote" rel=3D"footnote">7</a></sup>. The =
loader is sometimes called the =E2=80=9Cdynamic linker=E2=80=9D, and is oft=
en the same program as the =E2=80=9Cprogram linker=E2=80=9D; this is why th=
e linker is called <code class=3D"language-plaintext highlighter-rouge">ld<=
/code>.</p> <p>Loading can also be done beforehand using the <code class=3D=
"language-plaintext highlighter-rouge">binary</code> output format. This is=
 useful for tiny microcontrollers that are too primitive to perform any loa=
ding. <code class=3D"language-plaintext highlighter-rouge">objcopy</code> i=
s useful for this and many other tasks that involve transforming object fil=
es.</p> <p>Some common (POSIX) sections include:</p> <ul> <li><code class=
=3D"language-plaintext highlighter-rouge">.text</code>, where your code liv=
es<sup id=3D"fnref:text-section" role=3D"doc-noteref"><a href=3D"https://mc=
young.xyz/2021/06/01/linker-script/#fn:text-section" class=3D"footnote" rel=
=3D"footnote">8</a></sup>. It=E2=80=99s usually a loadable, readonly, execu=
table section.</li> <li><code class=3D"language-plaintext highlighter-rouge=
">.data</code> contains the initial values of global variables. It=E2=80=99=
s loadable.</li> <li><code class=3D"language-plaintext highlighter-rouge">.=
rodata</code> contains constants. It=E2=80=99s loadable and readonly.</li> =
<li><code class=3D"language-plaintext highlighter-rouge">.bss</code> is an =
empty allocatable section<sup id=3D"fnref:bss-section" role=3D"doc-noteref"=
><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:bss-section" c=
lass=3D"footnote" rel=3D"footnote">9</a></sup>. C specifies that uninitiali=
zed globals default to zero; this is a convenient way for avoiding storing =
a huge block of zeros in the executable!</li> <li>Debug sections that are n=
ot loaded or allocated; these are usually removed for release builds.</li> =
</ul> <p>After the linker decides which sections from the <code class=3D"la=
nguage-plaintext highlighter-rouge">.o</code> and <code class=3D"language-p=
laintext highlighter-rouge">.a</code> inputs to keep (based on which symbol=
s it decided it needed), it looks to the linker script how to arrange them =
in the output.</p> <p>Let=E2=80=99s write our first linker script!</p> <div=
 class=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"langua=
ge-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <span class=3D"=
p">{</span>
  <span class=3D"cm">/* Define an output section ".text". */</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span>
    <span class=3D"cm">/* Pull in all symbols in input sections named .text=
 */</span>
    <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">=
text</span><span class=3D"p">)</span>
    <span class=3D"cm">/* Do the same for sections starting with .text.,
       such as .text.foo */</span>
    <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">=
text</span><span class=3D"p">.</span><span class=3D"o">*</span><span class=
=3D"p">)</span>
  <span class=3D"p">}</span>

  <span class=3D"cm">/* Do the same for ".bss", ".rodata", and ".data". */<=
/span>
  <span class=3D"p">.</span><span class=3D"n">bss</span> <span class=3D"o">=
:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">bss</span><span class=3D"p">);</span> <sp=
an class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">bss</sp=
an><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">)<=
/span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">data</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">data</span><span class=3D"p">);</span> <s=
pan class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">data</=
span><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">=
)</span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">rodata</span> <span class=3D"=
o">:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span clas=
s=3D"p">(.</span><span class=3D"n">rodata</span><span class=3D"p">);</span>=
 <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">rod=
ata</span><span class=3D"p">.</span><span class=3D"o">*</span><span class=
=3D"p">)</span> <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
is tells the linker to create a <code class=3D"language-plaintext highlight=
er-rouge">.text</code> section in the output, which contains all sections n=
amed <code class=3D"language-plaintext highlighter-rouge">.text</code> from=
 all inputs, plus all sections with names like <code class=3D"language-plai=
ntext highlighter-rouge">.text.foo</code>. The content of the section is la=
id out in order: the contents of all <code class=3D"language-plaintext high=
lighter-rouge">.text</code> sections will come before any <code class=3D"la=
nguage-plaintext highlighter-rouge">.text.*</code> sections; I don=E2=80=99=
t think the linker makes any promises about the ordering between different =
objects<sup id=3D"fnref:order-sorting" role=3D"doc-noteref"><a href=3D"http=
s://mcyoung.xyz/2021/06/01/linker-script/#fn:order-sorting" class=3D"footno=
te" rel=3D"footnote">10</a></sup>.</p> <p>As I mentioned before, parsers fo=
r linker script are fussy<sup id=3D"fnref:comment-syntax" role=3D"doc-noter=
ef"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:comment-syn=
tax" class=3D"footnote" rel=3D"footnote">11</a></sup>: the space in <code c=
lass=3D"language-plaintext highlighter-rouge">.text :</code> is significant=
.</p> <p>Note that the two <code class=3D"language-plaintext highlighter-ro=
uge">.text</code> sections are different, and can have different names! The=
 linker generally doesn=E2=80=99t care what a section is named; just its at=
tributes. We could name it <code class=3D"language-plaintext highlighter-ro=
uge">code</code> if we wanted to; even the leading period is mere conventio=
n. Some object file formats don=E2=80=99t support arbitrary sections; all t=
he sane ones (ELF, COFF, Mach-O) don=E2=80=99t care, but they don=E2=80=99t=
 all spell it the same way; in Mach-O, you call it <code class=3D"language-=
plaintext highlighter-rouge">__text</code>.</p> <p>Before continuing, I rec=
ommend looking at the <a href=3D"https://mcyoung.xyz/2021/06/01/linker-scri=
pt/#appendix">appendix</a> so that you have a clear path towards being able=
 to run and test your linker scripts!</p> <blockquote> <h3 id=3D"input-sect=
ion-syntax"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#input-=
section-syntax">Input Section Syntax</a></h3> <p>None of this syntax is use=
d in practice but it=E2=80=99s useful to contextualize the syntax for pulli=
ng in a section. The full form of the syntax is</p> <div class=3D"codeblock=
"><figure class=3D"highlight"><pre><code class=3D"language-text" data-lang=
=3D"text">&gt; archive:object(section1 section2 ...)</code></pre></figure><=
div class=3D"codeblock-buttons"><div class=3D"codeblock-button">Plaintext</=
div></div></div> <p>Naturally, all of this is optional, so you can write <c=
ode class=3D"language-plaintext highlighter-rouge">foo.o</code> or <code cl=
ass=3D"language-plaintext highlighter-rouge">libbar.a:(.text)</code> or <co=
de class=3D"language-plaintext highlighter-rouge">:baz.o(.text .data)</code=
>, where the last one means =E2=80=9Cnot part of a library=E2=80=9D. There=
=E2=80=99s even an <code class=3D"language-plaintext highlighter-rouge">EXC=
LUDE_FILE</code> syntax for filtering by source object, and a <code class=
=3D"language-plaintext highlighter-rouge">INPUT_SECTION_FLAGS</code> syntax=
 for filtering by the presence of format-specific flags.</p> <p>Do not use =
any of this. Just write <code class=3D"language-plaintext highlighter-rouge=
">*(.text)</code> and don=E2=80=99t think about it too hard. The <code clas=
s=3D"language-plaintext highlighter-rouge">*</code> is just a glob for all =
objects.</p> </blockquote> <p>Each section has an <em>alignment</em>, which=
 is just the maximum of the alignments of all input sections pulled into it=
. This is important for ensuring that code and globals are aligned the way =
the architecture expects them to be. The alignment of a section can be set =
explicitly with</p> <div class=3D"codeblock"><figure class=3D"highlight"><p=
re><code class=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTION=
S</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">super_aligned</span> <span cl=
ass=3D"o">:</span> <span class=3D"n">ALIGN</span><span class=3D"p">(</span>=
<span class=3D"mi">16</span><span class=3D"p">)</span> <span class=3D"p">{<=
/span>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Yo=
u can also instruct the linker to toss out sections using the special <code=
 class=3D"language-plaintext highlighter-rouge">/DISCARD/</code> output sec=
tion, which overrides any decisions made at garbage-collection time. I=E2=
=80=99ve only ever used this to discard debug information that GCC was real=
ly excited about keeping around.</p> <p>On the other hand, you can use <cod=
e class=3D"language-plaintext highlighter-rouge">KEEP(*(.text.*))</code> to=
 ensure no <code class=3D"language-plaintext highlighter-rouge">.text</code=
> sections are discarded by garbage-collection. Unfortunately, this doesn=
=E2=80=99t let you pull in sections from static libraries that weren=E2=80=
=99t referenced in the input objects.</p> <h3 id=3D"lma-and-vma"><a href=3D=
"https://mcyoung.xyz/2021/06/01/linker-script/#lma-and-vma">LMA and VMA</a>=
</h3> <p>Every section has three addresses associated with it. The simplest=
 is the file offset: how far from the start of the file to find the section=
.</p> <p>The <em>virtual memory address</em>, or VMA, is where the program =
expects to find the section at runtime. This is the address that is used by=
 pointers and the program counter.</p> <p>The <em>load memory address</em>,=
 or LMA, is where the loader (be it a runtime loader or <code class=3D"lang=
uage-plaintext highlighter-rouge">objcpy</code>) must place the code. This =
is almost always the same as the VMA. Later on, in <a href=3D"https://mcyou=
ng.xyz/2021/06/01/linker-script/#rom-ram-lma">Using Symbols and LMAs</a>, I=
=E2=80=99ll explain a place where this is actually useful.</p> <p>When decl=
aring a new section, the VMA and LMA are both set to the value<sup id=3D"fn=
ref:dot-align" role=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/06/=
01/linker-script/#fn:dot-align" class=3D"footnote" rel=3D"footnote">12</a><=
/sup> of the <em>location counter</em>, which has the <em>extremely</em> de=
scriptive name <code class=3D"language-plaintext highlighter-rouge">.</code=
><sup id=3D"fnref:dot-in-asm" role=3D"doc-noteref"><a href=3D"https://mcyou=
ng.xyz/2021/06/01/linker-script/#fn:dot-in-asm" class=3D"footnote" rel=3D"f=
ootnote">13</a></sup>. This counter is automatically incremented as data is=
 copied from the input</p> <p>We can explicitly specify the VMA of a sectio=
n by putting an expression before the colon, and the LMA by putting an expr=
ession in the <code class=3D"language-plaintext highlighter-rouge">AT(lma)<=
/code> specifier <em>after</em> the colon:</p> <div class=3D"codeblock"><fi=
gure class=3D"highlight"><pre><code class=3D"language-cpp" data-lang=3D"cpp=
"><span class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"mh=
">0x10008000</span><span class=3D"o">:</span> <span class=3D"n">AT</span><s=
pan class=3D"p">(</span><span class=3D"mh">0x40008000</span><span class=3D"=
p">)</span> <span class=3D"p">{</span>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
is will modify the location counter; you could also write it as</p> <div cl=
ass=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-=
cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <span class=3D"p">=
{</span>
  <span class=3D"p">.</span> <span class=3D"o">=3D</span> <span class=3D"mh=
">0x10008000</span><span class=3D"p">;</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"n">AT</span><span class=3D"p">(</span><span class=
=3D"mh">0x40008000</span><span class=3D"p">)</span> <span class=3D"p">{</sp=
an>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Wi=
thin <code class=3D"language-plaintext highlighter-rouge">SECTIONS</code>, =
the location counter can be set at any point, even while in the middle of d=
eclaring a section (though the linker will probably complain if you do some=
thing rude like move it backwards).</p> <p>The location counter is incremen=
ted automatically as sections are added, so it=E2=80=99s rarely necessary t=
o fuss with it directly.</p> <h2 id=3D"memory-regions-and-section-allocatio=
n"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#memory-regions-=
and-section-allocation">Memory Regions and Section Allocation</a></h2> <p>B=
y default, the linker will simply allocate sections starting at address <co=
de class=3D"language-plaintext highlighter-rouge">0</code>. The <code class=
=3D"language-plaintext highlighter-rouge">MEMORY</code> statement can be us=
ed to define <em>memory regions</em> for more finely controlling how VMAs a=
nd LMAs are allocated without writing them down explicitly.</p> <p>A classi=
c example of a <code class=3D"language-plaintext highlighter-rouge">MEMORY<=
/code> block separates the address space into ROM and RAM:</p> <div class=
=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-cpp=
" data-lang=3D"cpp"><span class=3D"n">MEMORY</span> <span class=3D"p">{</sp=
an>
  <span class=3D"n">rom</span> <span class=3D"p">(</span><span class=3D"n">=
rx</span><span class=3D"p">)</span>   <span class=3D"o">:</span> <span clas=
s=3D"n">ORIGIN</span> <span class=3D"o">=3D</span> <span class=3D"mh">0x800=
0</span><span class=3D"p">,</span>     <span class=3D"n">LENGTH</span> <spa=
n class=3D"o">=3D</span> <span class=3D"mi">16</span><span class=3D"n">K</s=
pan>
  <span class=3D"n">ram</span> <span class=3D"p">(</span><span class=3D"n">=
rw</span><span class=3D"o">!</span><span class=3D"n">x</span><span class=3D=
"p">)</span> <span class=3D"o">:</span> <span class=3D"n">ORIGIN</span> <sp=
an class=3D"o">=3D</span> <span class=3D"mh">0x10000000</span><span class=
=3D"p">,</span> <span class=3D"n">LENGTH</span> <span class=3D"o">=3D</span=
> <span class=3D"mi">256</span><span class=3D"n">M</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>A =
region is a block of memory with a name and some attributes. The name is ir=
relevant beyond the scope of the linker script. The attributes in parens ar=
e used to specify what sections could conceivably go in that region. A sect=
ion is compatible if it has any of the attributes before the <code class=3D=
"language-plaintext highlighter-rouge">!</code>, and none which come after =
the <code class=3D"language-plaintext highlighter-rouge">!</code>. (This fi=
lter mini-language isn=E2=80=99t very expressive.)</p> <p>The attributes ar=
e the ones we mentioned earlier: <code class=3D"language-plaintext highligh=
ter-rouge">rwxal</code> are readonly, read/write, executable, allocated, an=
d loadable<sup id=3D"fnref:attrs-in-asm" role=3D"doc-noteref"><a href=3D"ht=
tps://mcyoung.xyz/2021/06/01/linker-script/#fn:attrs-in-asm" class=3D"footn=
ote" rel=3D"footnote">14</a></sup>.</p> <p>When allocating a section a VMA,=
 the linker will try to pick the best memory region that matches the filter=
 using a heuristic. I don=E2=80=99t really trust the heuristic, but you can=
 instead write <code class=3D"language-plaintext highlighter-rouge">&gt; re=
gion</code> to put something into a specific region. Thus,</p> <div class=
=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-cpp=
" data-lang=3D"cpp"><span class=3D"n">SECTION</span> <span class=3D"p">{</s=
pan>
  <span class=3D"p">.</span><span class=3D"n">data</span> <span class=3D"p"=
>{</span>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n=
">ram</span> <span class=3D"n">AT</span><span class=3D"o">&gt;</span> <span=
 class=3D"n">rom</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p><c=
ode class=3D"language-plaintext highlighter-rouge">AT&gt;</code> is the =E2=
=80=9Cobvious=E2=80=9D of <code class=3D"language-plaintext highlighter-rou=
ge">AT()</code> and <code class=3D"language-plaintext highlighter-rouge">&g=
t;</code>, and sets which region to allocate the LMA from.</p> <p>The origi=
n and length of a region can be obtained with the <code class=3D"language-p=
laintext highlighter-rouge">ORIGIN(region)</code> and <code class=3D"langua=
ge-plaintext highlighter-rouge">LENGTH(region)</code> functions.</p> <h2 id=
=3D"other-stuff-to-put-in-sections"><a href=3D"https://mcyoung.xyz/2021/06/=
01/linker-script/#other-stuff-to-put-in-sections">Other Stuff to Put In Sec=
tions</a></h2> <p>Output sections can hold more than just input sections. A=
rbitrary data can be placed into sections using the <code class=3D"language=
-plaintext highlighter-rouge">BYTE</code>, <code class=3D"language-plaintex=
t highlighter-rouge">SHORT</code>, <code class=3D"language-plaintext highli=
ghter-rouge">LONG</code> and <code class=3D"language-plaintext highlighter-=
rouge">QUAD</code> for placing literal 8, 16, 32, and 64-bit unsigned integ=
ers into the section:</p> <div class=3D"codeblock"><figure class=3D"highlig=
ht"><pre><code class=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">S=
ECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">screams_internally</span> <sp=
an class=3D"o">:</span> <span class=3D"p">{</span> <span class=3D"n">LONG</=
span><span class=3D"p">(</span><span class=3D"mh">0xaaaaaaaa</span><span cl=
ass=3D"p">)</span> <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Nu=
meric literals in linker script may, conveniently, be given the suffixes <c=
ode class=3D"language-plaintext highlighter-rouge">K</code> or <code class=
=3D"language-plaintext highlighter-rouge">M</code> to specify a kilobyte or=
 megabyte quantity. E.g., <code class=3D"language-plaintext highlighter-rou=
ge">4K</code> is sugar for <code class=3D"language-plaintext highlighter-ro=
uge">4096</code>.</p> <h3 id=3D"fill"><a href=3D"https://mcyoung.xyz/2021/0=
6/01/linker-script/#fill">Fill</a></h3> <p>You can fill the unused portions=
 of a section by using the <code class=3D"language-plaintext highlighter-ro=
uge">FILL</code> command, which sets the =E2=80=9Cfill pattern=E2=80=9D fro=
m that point onward. For example, we can create four kilobytes of <code cla=
ss=3D"language-plaintext highlighter-rouge">0xaa</code> using <code class=
=3D"language-plaintext highlighter-rouge">FILL</code> and the location coun=
ter:</p> <div class=3D"codeblock"><figure class=3D"highlight"><pre><code cl=
ass=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <s=
pan class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">scream_page</span> <span clas=
s=3D"o">:</span> <span class=3D"p">{</span>
    <span class=3D"n">FILL</span><span class=3D"p">(</span><span class=3D"m=
h">0xaa</span><span class=3D"p">)</span>
    <span class=3D"p">.</span> <span class=3D"o">+=3D</span> <span class=3D=
"mi">4</span><span class=3D"n">K</span><span class=3D"p">;</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
e =E2=80=9Cfill pattern=E2=80=9D is used to fill any unspecified space, suc=
h as alignment padding or jumping around with the location counter. We can =
use multiple FILLs to vary the fill pattern, such as if we wanted half the =
page to be <code class=3D"language-plaintext highlighter-rouge">0x0a</code>=
 and half <code class=3D"language-plaintext highlighter-rouge">0xa0</code>:=
</p> <div class=3D"codeblock"><figure class=3D"highlight"><pre><code class=
=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <span=
 class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">scream_page</span> <span clas=
s=3D"o">:</span> <span class=3D"p">{</span>
    <span class=3D"n">FILL</span><span class=3D"p">(</span><span class=3D"m=
h">0x0a</span><span class=3D"p">)</span>
    <span class=3D"p">.</span> <span class=3D"o">+=3D</span> <span class=3D=
"mi">2</span><span class=3D"n">K</span><span class=3D"p">;</span>
    <span class=3D"n">FILL</span><span class=3D"p">(</span><span class=3D"m=
h">0xa0</span><span class=3D"p">)</span>
    <span class=3D"p">.</span> <span class=3D"o">+=3D</span> <span class=3D=
"mi">2</span><span class=3D"n">K</span><span class=3D"p">;</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Wh=
en using one fill pattern for the whole section, you can just write <code c=
lass=3D"language-plaintext highlighter-rouge">=3D fill;</code> at the end o=
f the section. For example,</p> <div class=3D"codeblock"><figure class=3D"h=
ighlight"><pre><code class=3D"language-cpp" data-lang=3D"cpp"><span class=
=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">scream_page</span> <span clas=
s=3D"o">:</span> <span class=3D"p">{</span>
    <span class=3D"p">.</span> <span class=3D"o">+=3D</span> <span class=3D=
"mi">4</span><span class=3D"n">K</span><span class=3D"p">;</span>
  <span class=3D"p">}</span> <span class=3D"o">=3D</span> <span class=3D"mh=
">0xaa</span><span class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <h3 i=
d=3D"linker-symbols"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-scrip=
t/#linker-symbols">Linker Symbols</a></h3> <p>Although the linker needs to =
resolve all symbols using the input <code class=3D"language-plaintext highl=
ighter-rouge">.o</code> and <code class=3D"language-plaintext highlighter-r=
ouge">.a</code> files, you can also declare symbols directly in linker scri=
pt; this is the absolute latest that symbols can be provided. For example:<=
/p> <div class=3D"codeblock"><figure class=3D"highlight"><pre><code class=
=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</span> <span=
 class=3D"p">{</span>
  <span class=3D"n">my_cool_symbol</span> <span class=3D"o">=3D</span> <spa=
n class=3D"mi">5</span><span class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
is will define a new symbol with value <code class=3D"language-plaintext hi=
ghlighter-rouge">5</code>. If we then wrote <code class=3D"language-plainte=
xt highlighter-rouge">extern char my_cool_symbol;</code>, we can access the=
 value placed by the linker. However, note that the value of a symbol is an=
 <em>address</em>! If you did</p> <div class=3D"codeblock"><figure class=3D=
"highlight"><pre><code class=3D"language-c" data-lang=3D"c"><span class=3D"=
k">extern</span> <span class=3D"kt">char</span> <span class=3D"n">my_cool_s=
ymbol</span><span class=3D"p">;</span>

<span class=3D"kt">uintptr_t</span> <span class=3D"nf">get</span><span clas=
s=3D"p">()</span> <span class=3D"p">{</span>
  <span class=3D"k">return</span> <span class=3D"n">my_cool_symbol</span><s=
pan class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">C</div></div></div> <p>the processor =
would be very confused about why you just dereferenced a pointer with addre=
ss <code class=3D"language-plaintext highlighter-rouge">5</code>. The <em>c=
orrect</em> way to extract a linker symbol=E2=80=99s value is to write</p> =
<div class=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"la=
nguage-c" data-lang=3D"c"><span class=3D"k">extern</span> <span class=3D"kt=
">char</span> <span class=3D"n">my_cool_symbol</span><span class=3D"p">;</s=
pan>

<span class=3D"kt">uintptr_t</span> <span class=3D"nf">get</span><span clas=
s=3D"p">()</span> <span class=3D"p">{</span>
  <span class=3D"k">return</span> <span class=3D"p">(</span><span class=3D"=
kt">uintptr_t</span><span class=3D"p">)</span><span class=3D"o">&amp;</span=
><span class=3D"n">my_cool_symbol</span><span class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">C</div></div></div> <p>It seems a bit=
 silly to take the address of the global and use that as some kind of magic=
 value, but that=E2=80=99s just how it works. The exact same mechanism work=
s in Rust, too:</p> <div class=3D"codeblock"><figure class=3D"highlight"><p=
re><code class=3D"language-rust" data-lang=3D"rust"><span class=3D"k">fn</s=
pan> <span class=3D"nf">get</span><span class=3D"p">()</span> <span class=
=3D"k">-&gt;</span> <span class=3D"nb">usize</span> <span class=3D"p">{</sp=
an>
  <span class=3D"k">extern</span> <span class=3D"s">"C"</span> <span class=
=3D"p">{</span>
    <span class=3D"nd">#[link_name</span> <span class=3D"nd">=3D</span> <sp=
an class=3D"s">"my_cool_symbol"</span><span class=3D"nd">]</span>
    <span class=3D"k">static</span> <span class=3D"n">SYM</span><span class=
=3D"p">:</span> <span class=3D"nb">u8</span><span class=3D"p">;</span>
  <span class=3D"p">}</span>

  <span class=3D"nd">addr_of!</span><span class=3D"p">(</span><span class=
=3D"n">SYM</span><span class=3D"p">)</span> <span class=3D"k">as</span> <sp=
an class=3D"nb">usize</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Rust</div></div></div> <p>The most co=
mmon use of this mechanism is percolating information not known until link =
time. For example, a common idiom is</p> <div class=3D"codeblock"><figure c=
lass=3D"highlight"><pre><code class=3D"language-cpp" data-lang=3D"cpp"><spa=
n class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span>
    <span class=3D"n">__text_start</span> <span class=3D"o">=3D</span> <spa=
n class=3D"p">.;</span>
    <span class=3D"cm">/* stuff */</span>
    <span class=3D"n">__text_end</span> <span class=3D"o">=3D</span> <span =
class=3D"p">.;</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Th=
is allows initialization code to find the section=E2=80=99s address and len=
gth; in this case, the pointer values are actually meaningful!</p> <blockqu=
ote> <h3 id=3D"wunderbars"><a href=3D"https://mcyoung.xyz/2021/06/01/linker=
-script/#wunderbars">Wunderbars</a></h3> <p>It=E2=80=99s common practice to=
 lead linker symbols with two underscores, because C declares a surprisingl=
y large class of symbols reserved for the implementation, so normal user co=
de won=E2=80=99t call them. These include names like <code class=3D"languag=
e-plaintext highlighter-rouge">__text_start</code>, which start with two un=
derscores, and names starting with an underscore and an uppercase letter, l=
ike <code class=3D"language-plaintext highlighter-rouge">_Atomic</code>.</p=
> <p>However, libc and STL headers will totally use the double underscore s=
ymbols to make them resistant to tampering by users (which they are entitle=
d to), so beware!</p> </blockquote> <p>Symbol assignments can even go insid=
e of a section, to capture the location counter=E2=80=99s value between inp=
ut sections:</p> <div class=3D"codeblock"><figure class=3D"highlight"><pre>=
<code class=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">SECTIONS</=
span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span>
    <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">=
text</span><span class=3D"p">)</span>
    <span class=3D"n">text_middle</span> <span class=3D"o">=3D</span> <span=
 class=3D"p">.;</span>
    <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">=
text</span><span class=3D"p">.</span><span class=3D"o">*</span><span class=
=3D"p">)</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>Sy=
mbol names are not limited to C identifiers, and may contain dashes, period=
s, dollar signs, and other symbols. They may even be quoted, like <code cla=
ss=3D"language-plaintext highlighter-rouge">"this symbol has spaces"</code>=
, which C will never be able to access as an <code class=3D"language-plaint=
ext highlighter-rouge">extern</code>.</p> <p>There is a mini-language of ex=
pressions that symbols can be assigned to. This includes:</p> <ul> <li>Nume=
ric literals like <code class=3D"language-plaintext highlighter-rouge">42</=
code>, <code class=3D"language-plaintext highlighter-rouge">0xaa</code>, an=
d <code class=3D"language-plaintext highlighter-rouge">4K</code>.</li> <li>=
The location counter, <code class=3D"language-plaintext highlighter-rouge">=
.</code>.</li> <li>Other symbols.</li> <li>The usual set of C operators, su=
ch as arithmetic and bit operations. Xor is curiously missing.</li> <li>A h=
andful of builtin functions, described below.</li> </ul> <p>There are some =
fairly complicated rules around how symbols may be given relative addresses=
 to the start of a section, which are only relevant when dealing with posit=
ion-independent code: <a href=3D"https://sourceware.org/binutils/docs/ld/Ex=
pression-Section.html">https://sourceware.org/binutils/docs/ld/Expression-S=
ection.html</a></p> <p>Functions belong to one of two board categories: get=
ters for properties of sections, memory regions, and other linker structure=
s; and arithmetic. Useful functions include:</p> <ul> <li><code class=3D"la=
nguage-plaintext highlighter-rouge">ADDR</code>, <code class=3D"language-pl=
aintext highlighter-rouge">LOADADDR</code>, <code class=3D"language-plainte=
xt highlighter-rouge">SIZEOF</code>, and <code class=3D"language-plaintext =
highlighter-rouge">ALIGNOF</code>, which produce the VMA, LMA, size, and al=
ignment of a previously defined section.</li> <li><code class=3D"language-p=
laintext highlighter-rouge">ORIGIN</code> and <code class=3D"language-plain=
text highlighter-rouge">LENGTH</code>, which produce the start address and =
length of a memory region.</li> <li><code class=3D"language-plaintext highl=
ighter-rouge">MAX</code>, <code class=3D"language-plaintext highlighter-rou=
ge">MIN</code> are obvious; <code class=3D"language-plaintext highlighter-r=
ouge">LOG2CEIL</code> computes the base-2 log, rounded up.</li> <li><code c=
lass=3D"language-plaintext highlighter-rouge">ALIGN(expr, align)</code> rou=
nds <code class=3D"language-plaintext highlighter-rouge">expr</code> to the=
 next multiple of <code class=3D"language-plaintext highlighter-rouge">alig=
n</code>. <code class=3D"language-plaintext highlighter-rouge">ALIGN(align)=
</code> is roughly equivalent to <code class=3D"language-plaintext highligh=
ter-rouge">ALIGN(., align)</code> with some subtleties around PIC. <code cl=
ass=3D"language-plaintext highlighter-rouge">. =3D ALIGN(align);</code> wil=
l align the location counter to <code class=3D"language-plaintext highlight=
er-rouge">align</code>.</li> </ul> <p>Some other builtins can be found at <=
a href=3D"https://sourceware.org/binutils/docs/ld/Builtin-Functions.html">h=
ttps://sourceware.org/binutils/docs/ld/Builtin-Functions.html</a>.</p> <p>A=
 symbol definition can be wrapped in the <code class=3D"language-plaintext =
highlighter-rouge">PROVIDEO()</code> function to make it =E2=80=9Cweak=E2=
=80=9D, analogous to the =E2=80=9Cweak symbol=E2=80=9D feature found in Cla=
ng. This means that the linker will not use the definition if any input obj=
ect defines it.</p> <h3 id=3D"rom-ram-lma"><a href=3D"https://mcyoung.xyz/2=
021/06/01/linker-script/#rom-ram-lma">Using Symbols and LMAs</a></h3> <p>As=
 mentioned before, it is extremely rare for the LMA and VMA to be different=
. The most common situation where this occurs is when you=E2=80=99re runnin=
g on a system, like a microcontroller, where memory is partitioned into two=
 pieces: ROM and RAM. The ROM has the executable burned into it, and RAM st=
arts out full of random garbage.</p> <p>Most of the contents of the linked =
executable are read-only, so their VMA can be in ROM. However, the <code cl=
ass=3D"language-plaintext highlighter-rouge">.data</code> and <code class=
=3D"language-plaintext highlighter-rouge">.bss</code> sections need to lie =
in RAM, because they=E2=80=99re writable. For <code class=3D"language-plain=
text highlighter-rouge">.bss</code> this is easy, because it doesn=E2=80=99=
t have loadable content. For <code class=3D"language-plaintext highlighter-=
rouge">.data</code>, though, we need to separate the VMA and LMA: the VMA m=
ust go in RAM, and the LMA in ROM.</p> <p>This distinction is important for=
 the code that initializes the RAM: while for <code class=3D"language-plain=
text highlighter-rouge">.bss</code> all it has to do is zero it, for <code =
class=3D"language-plaintext highlighter-rouge">.data</code>, it has to copy=
 from ROM to RAM! The LMA lets us distinguish the copy source and the copy =
destination.</p> <p>This has the important property that it tells the loade=
r (usually <code class=3D"language-plaintext highlighter-rouge">objcopy</co=
de> in this case) to use the ROM addresses for actually loading the section=
 to, but to link the code as if it were at a RAM address (which is needed f=
or things like PC-relative loads to work correctly).</p> <p>Here=E2=80=99s =
how we=E2=80=99d do it in linker script:</p> <div class=3D"codeblock"><figu=
re class=3D"highlight"><pre><code class=3D"language-cpp" data-lang=3D"cpp">=
<span class=3D"n">MEMORY</span> <span class=3D"p">{</span>
  <span class=3D"n">rom</span> <span class=3D"o">:</span> <span class=3D"cm=
">/* ... */</span>
  <span class=3D"n">ram</span> <span class=3D"o">:</span> <span class=3D"cm=
">/* ... */</span>
<span class=3D"p">}</span>

<span class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"cm">/* .text and .rodata just go straight into the ROM. We=
 don't need
     to mutate them ever. */</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">text</span><span class=3D"p">)</span> <sp=
an class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n">rom=
</span>
  <span class=3D"p">.</span><span class=3D"n">rodata</span> <span class=3D"=
o">:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span clas=
s=3D"p">(.</span><span class=3D"n">rodata</span><span class=3D"p">)</span> =
<span class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n">=
rom</span>

  <span class=3D"cm">/* .bss doesn't have any "loadable" content, so it goe=
s straight
     into RAM. We could include `AT&gt; rom`, but because the sections
     have no content, it doesn't matter. */</span>
  <span class=3D"p">.</span><span class=3D"n">bss</span> <span class=3D"o">=
:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">bss</span><span class=3D"p">)</span> <spa=
n class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n">ram<=
/span>

  <span class=3D"cm">/* As described above, we need to get a RAM VMA but a =
ROM LMA;
     the &gt; and AT&gt; operators achieve this. */</span>
  <span class=3D"p">.</span><span class=3D"n">data</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">data</span><span class=3D"p">)</span> <sp=
an class=3D"p">}</span> <span class=3D"o">&gt;</span> <span class=3D"n">ram=
</span> <span class=3D"n">AT</span><span class=3D"o">&gt;</span> <span clas=
s=3D"n">rom</span>
<span class=3D"p">}</span>

<span class=3D"cm">/* The initialization code will need some symbols to kno=
w how to
   zero the .bss and copy the initial .data values. We can use the
   functions from the previous section for this! */</span>

<span class=3D"n">bss_start</span> <span class=3D"o">=3D</span> <span class=
=3D"n">ADDR</span><span class=3D"p">(.</span><span class=3D"n">bss</span><s=
pan class=3D"p">);</span>
<span class=3D"n">bss_end</span> <span class=3D"o">=3D</span> <span class=
=3D"n">bss_start</span> <span class=3D"o">+</span> <span class=3D"n">SIZEOF=
</span><span class=3D"p">(.</span><span class=3D"n">bss</span><span class=
=3D"p">);</span>

<span class=3D"n">data_start</span> <span class=3D"o">=3D</span> <span clas=
s=3D"n">ADDR</span><span class=3D"p">(.</span><span class=3D"n">data</span>=
<span class=3D"p">);</span>
<span class=3D"n">data_end</span> <span class=3D"o">=3D</span> <span class=
=3D"n">data_start</span> <span class=3D"o">+</span> <span class=3D"n">SIZEO=
F</span><span class=3D"p">(.</span><span class=3D"n">data</span><span class=
=3D"p">);</span>

<span class=3D"n">rom_data_start</span> <span class=3D"o">=3D</span> <span =
class=3D"n">LOADADDR</span><span class=3D"p">(.</span><span class=3D"n">dat=
a</span><span class=3D"p">);</span></code></pre></figure><div class=3D"code=
block-buttons"><div class=3D"codeblock-button">Linker Script</div></div></d=
iv> <p>Although we would normally write the initialization code in assembly=
 (since it=E2=80=99s undefined behavior to execute C before initializing th=
e <code class=3D"language-plaintext highlighter-rouge">.bss</code> and <cod=
e class=3D"language-plaintext highlighter-rouge">.data</code> sections), I=
=E2=80=99ve written it in C for illustrative purposes:</p> <div class=3D"co=
deblock"><figure class=3D"highlight"><pre><code class=3D"language-c" data-l=
ang=3D"c"><span class=3D"cp">#include</span> <span class=3D"cpf">&lt;string=
.h&gt;</span><span class=3D"cp">
</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">bss_start</span><span class=3D"p">[];</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">bss_end</span><span class=3D"p">[];</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">data_start</span><span class=3D"p">[];</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">data_end</span><span class=3D"p">[];</span>
<span class=3D"k">extern</span> <span class=3D"kt">char</span> <span class=
=3D"n">rom_data_start</span><span class=3D"p">[];</span>

<span class=3D"kt">void</span> <span class=3D"nf">init_sections</span><span=
 class=3D"p">(</span><span class=3D"kt">void</span><span class=3D"p">)</spa=
n> <span class=3D"p">{</span>
  <span class=3D"c1">// Zero the .bss.</span>
  <span class=3D"n">memset</span><span class=3D"p">(</span><span class=3D"n=
">bss_start</span><span class=3D"p">,</span> <span class=3D"mi">0</span><sp=
an class=3D"p">,</span> <span class=3D"n">bss_end</span> <span class=3D"o">=
-</span> <span class=3D"n">bss_start</span><span class=3D"p">);</span>

  <span class=3D"c1">// Copy the .data values from ROM to RAM.</span>
  <span class=3D"n">memcpy</span><span class=3D"p">(</span><span class=3D"n=
">data_start</span><span class=3D"p">,</span> <span class=3D"n">rom_data_st=
art</span><span class=3D"p">,</span> <span class=3D"n">data_end</span> <spa=
n class=3D"o">-</span> <span class=3D"n">data_start</span><span class=3D"p"=
>);</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">C</div></div></div> <h2 id=3D"misc-li=
nker-script-features"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-scri=
pt/#misc-linker-script-features">Misc Linker Script Features</a></h2> <p>Li=
nker script includes a bunch of other commands that don=E2=80=99t fit into =
a specific category:</p> <ul> <li><code class=3D"language-plaintext highlig=
hter-rouge">ENTRY()</code> sets the program entry-point, either as a symbol=
 or a raw address. The <code class=3D"language-plaintext highlighter-rouge"=
>-e</code> flag can be used to override it. The <code class=3D"language-pla=
intext highlighter-rouge">ld</code> docs assert that there are fallbacks if=
 an entry-point can=E2=80=99t be found, but in my experience you can someti=
mes get errors here. <code class=3D"language-plaintext highlighter-rouge">E=
NTRY(_start)</code> would use the <code class=3D"language-plaintext highlig=
hter-rouge">_start</code> symbol, for example<sup id=3D"fnref:not-main" rol=
e=3D"doc-noteref"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#=
fn:not-main" class=3D"footnote" rel=3D"footnote">15</a></sup>.</li> <li><co=
de class=3D"language-plaintext highlighter-rouge">INCLUDE "path/to/file.ld"=
</code> is <code class=3D"language-plaintext highlighter-rouge">#include</c=
ode> but for linker script.</li> <li><code class=3D"language-plaintext high=
lighter-rouge">INPUT(foo.o)</code> will add <code class=3D"language-plainte=
xt highlighter-rouge">foo.o</code> as a linker input, as if it was passed a=
t the commandline. <code class=3D"language-plaintext highlighter-rouge">GRO=
UP</code> is similar, but with the semantics of <code class=3D"language-pla=
intext highlighter-rouge">--start-group</code>.</li> <li><code class=3D"lan=
guage-plaintext highlighter-rouge">OUTPUT()</code> overrides the usual <cod=
e class=3D"language-plaintext highlighter-rouge">a.out</code> default outpu=
t name.</li> <li><code class=3D"language-plaintext highlighter-rouge">ASSER=
T()</code> provides static assertions.</li> <li><code class=3D"language-pla=
intext highlighter-rouge">EXTERN(sym)</code> causes the linker to behave as=
 if an undefined reference to <code class=3D"language-plaintext highlighter=
-rouge">sym</code> existed in an input object.</li> </ul> <p>(Other command=
s are documented, but I=E2=80=99ve never needed them in practice.)</p> <h2 =
id=3D"real-linker-scripts"><a href=3D"https://mcyoung.xyz/2021/06/01/linker=
-script/#real-linker-scripts">Real Linker Scripts</a></h2> <p>It may be use=
ful to look at some real-life linker scripts.</p> <p>If you wanna see what =
Clang, Rust, and the like all ultimately use, run <code class=3D"language-p=
laintext highlighter-rouge">ld --verbose</code>. This will print the defaul=
t linker script for your machine; this is a really intense script that uses=
 basically every feature available in linker script (and, since it=E2=80=99=
s GNU, is very poorly formatted).</p> <p>The Linux kernel also has linker s=
cripts, which are differently intense, because they use the C preprocessor.=
 For example, the one for amd64: <a href=3D"https://github.com/torvalds/lin=
ux/blob/master/arch/x86/kernel/vmlinux.lds.S">https://github.com/torvalds/l=
inux/blob/master/arch/x86/kernel/vmlinux.lds.S</a>.</p> <p>Tock OS, a secur=
e operating system written in Rust, has some pretty solid linker scripts, w=
ith lots of comments: <a href=3D"https://github.com/tock/tock/blob/master/b=
oards/kernel_layout.ld">https://github.com/tock/tock/blob/master/boards/ker=
nel_layout.ld</a>. I recommend taking a look to see what a =E2=80=9Creal=E2=
=80=9D but not too wild linker script looks like. There=E2=80=99s a fair bi=
t of toolchain-specific stuff in there, too, that should give you an idea o=
f what to expect.</p> <p>Happy linking!</p> <hr> <h2 id=3D"appendix"><a hre=
f=3D"https://mcyoung.xyz/2021/06/01/linker-script/#appendix">Appendix: A Li=
nker Playground</a></h2> <p>tl;dr: If you don=E2=80=99t wanna try out any e=
xamples, skip this section.</p> <p>I want you to be able to try out the exa=
mples above, but there=E2=80=99s no Godbolt for linker scripts (yet!). Unli=
ke normal code, you can=E2=80=99t just run linker script through a compiler=
, you=E2=80=99re gonna need some objects to link, too! Let=E2=80=99s set up=
 a very small C project for testing your linker scripts.</p> <blockquote> <=
p>Note: I=E2=80=99m assuming you=E2=80=99re on Linux, with x86_64, and usin=
g Clang. If you=E2=80=99re on a Mac (even M1), you can probably make <code =
class=3D"language-plaintext highlighter-rouge">ld64</code> do the right thi=
ng, but this is outside of what I=E2=80=99m an expert on.</p> <p>If you=E2=
=80=99re on Windows, use WSL. I have no idea how MSCV does linker scripts a=
t all.</p> </blockquote> <p>First, we want a very simple static library:</p=
> <div class=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"=
language-c" data-lang=3D"c"><span class=3D"kt">int</span> <span class=3D"nf=
">lib_call</span><span class=3D"p">(</span><span class=3D"k">const</span> <=
span class=3D"kt">char</span><span class=3D"o">*</span> <span class=3D"n">s=
tr</span><span class=3D"p">)</span> <span class=3D"p">{</span>
  <span class=3D"c1">// Discard `str`, we just want to take any argument.</=
span>
  <span class=3D"p">(</span><span class=3D"kt">void</span><span class=3D"p"=
>)</span><span class=3D"n">str</span><span class=3D"p">;</span>

  <span class=3D"c1">// This will go in `.bss`.</span>
  <span class=3D"k">static</span> <span class=3D"kt">int</span> <span class=
=3D"n">count</span><span class=3D"p">;</span>
  <span class=3D"k">return</span> <span class=3D"n">count</span><span class=
=3D"o">++</span><span class=3D"p">;</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><a class=3D"codeblock-button godbolt" href=3D"https://godbolt.org/cli=
entstate/eyJzZXNzaW9ucyI6W3siaWQiOjEsImxhbmd1YWdlIjoiYyIsInNvdXJjZSI6%20Iml=
udCBsaWJfY2FsbChjb25zdCBjaGFyKiBzdHIpIHtcbiAgLy8gRGlzY2Fy%20ZCBgc3RyYCwgd2U=
ganVzdCB3YW50IHRvIHRha2UgYW55IGFyZ3VtZW50Llxu%20ICAodm9pZClzdHI7XG5cbiAgLy8=
gVGhpcyB3aWxsIGdvIGluIGAuYnNzYC5c%20biAgc3RhdGljIGludCBjb3VudDtcbiAgcmV0dXJ=
uIGNvdW50Kys7XG59Iiwi%20Y29tcGlsZXJzIjpbeyJpZCI6ImNjbGFuZ190cnVuayIsIm9wdGl=
vbnMiOiIi%20fV19XX0=3D">godbolt</a><div class=3D"codeblock-button">extern.c=
</div></div></div> <p>Compile <code class=3D"language-plaintext highlighter=
-rouge">extern.c</code> into a static library like so:</p> <div class=3D"co=
deblock"><figure class=3D"highlight"><pre><code class=3D"language-shell" da=
ta-lang=3D"shell">clang <span class=3D"nt">-c</span> extern.c
ar rc libextern.a extern.o</code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Shell</div></div></div> <p>We can che=
ck out that we got something reasonable by using <code class=3D"language-pl=
aintext highlighter-rouge">nm</code>. The <code class=3D"language-plaintext=
 highlighter-rouge">nm</code> program shows you all the symbols a library o=
r object defines.</p> <div class=3D"codeblock"><figure class=3D"highlight">=
<pre><code class=3D"language-terminal" data-lang=3D"terminal"><span class=
=3D"gp">$</span><span class=3D"w"> </span>nm libextern.a
<span class=3D"go">extern.o:
0000000000000000 T lib_call
0000000000000000 b lib_call.count</span></code></pre></figure><div class=3D=
"codeblock-buttons"><div class=3D"codeblock-button">Terminal</div></div></d=
iv> <p>This shows us the address, section type, and name of each symbol; <c=
ode class=3D"language-plaintext highlighter-rouge">man nm</code> tells us t=
hat <code class=3D"language-plaintext highlighter-rouge">T</code> means <co=
de class=3D"language-plaintext highlighter-rouge">.text</code> and <code cl=
ass=3D"language-plaintext highlighter-rouge">b</code> means <code class=3D"=
language-plaintext highlighter-rouge">.bss</code>. Capital letters mean tha=
t the symbol is <em>exported</em>, so the linker can use it to resolve a sy=
mbol reference or a relocation. In C/C++, symbols declared <code class=3D"l=
anguage-plaintext highlighter-rouge">static</code> or in an unnamed namespa=
ce are =E2=80=9Chidden=E2=80=9D, and can=E2=80=99t be referenced outside of=
 the object. This is sometimes called internal vs external linkage.</p> <p>=
Next, we need a C program that uses the library:</p> <div class=3D"codebloc=
k"><figure class=3D"highlight"><pre><code class=3D"language-c" data-lang=3D=
"c"><span class=3D"k">extern</span> <span class=3D"kt">int</span> <span cla=
ss=3D"nf">lib_call</span><span class=3D"p">(</span><span class=3D"k">const<=
/span> <span class=3D"kt">char</span><span class=3D"o">*</span> <span class=
=3D"n">str</span><span class=3D"p">);</span>

<span class=3D"c1">// We're gonna use a custom entrypoint. This code will n=
ever run anyways, we</span>
<span class=3D"c1">// just care about the linker output.</span>
<span class=3D"kt">void</span> <span class=3D"nf">run</span><span class=3D"=
p">(</span><span class=3D"kt">void</span><span class=3D"p">)</span> <span c=
lass=3D"p">{</span>
  <span class=3D"c1">// This will go in `.data`, because it's initialized t=
o non-zero.</span>
  <span class=3D"k">static</span> <span class=3D"kt">int</span> <span class=
=3D"n">data</span> <span class=3D"o">=3D</span> <span class=3D"mi">5</span>=
<span class=3D"p">;</span>

  <span class=3D"c1">// The string-constant will go into `.rodata`.</span>
  <span class=3D"n">data</span> <span class=3D"o">=3D</span> <span class=3D=
"n">lib_call</span><span class=3D"p">(</span><span class=3D"s">"Hello from =
.rodata!"</span><span class=3D"p">);</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><a class=3D"codeblock-button godbolt" href=3D"https://godbolt.org/cli=
entstate/eyJzZXNzaW9ucyI6W3siaWQiOjEsImxhbmd1YWdlIjoiYyIsInNvdXJjZSI6%20ImV=
4dGVybiBpbnQgbGliX2NhbGwoY29uc3QgY2hhciogc3RyKTtcblxuLy8g%20V2UncmUgZ29ubmE=
gdXNlIGEgY3VzdG9tIGVudHJ5cG9pbnQuIFRoaXMgY29k%20ZSB3aWxsIG5ldmVyIHJ1biBhbnl=
3YXlzLCB3ZVxuLy8ganVzdCBjYXJlIGFi%20b3V0IHRoZSBsaW5rZXIgb3V0cHV0Llxudm9pZCB=
ydW4odm9pZCkge1xuICAv%20LyBUaGlzIHdpbGwgZ28gaW4gYC5kYXRhYCwgYmVjYXVzZSBpdCd=
zIGluaXRp%20YWxpemVkIHRvIG5vbi16ZXJvLlxuICBzdGF0aWMgaW50IGRhdGEgPSA1O1xu%20=
XG4gIC8vIFRoZSBzdHJpbmctY29uc3RhbnQgd2lsbCBnbyBpbnRvIGAucm9k%20YXRhYC5cbiAg=
ZGF0YSA9IGxpYl9jYWxsKFwiSGVsbG8gZnJvbSAucm9kYXRh%20IVwiKTtcbn0iLCJjb21waWxl=
cnMiOlt7ImlkIjoiY2NsYW5nX3RydW5rIiwi%20b3B0aW9ucyI6IiJ9XX1dfQ=3D=3D">godbol=
t</a><div class=3D"codeblock-button">run.c</div></div></div> <p>Compile it =
with <code class=3D"language-plaintext highlighter-rouge">clang -c run.c</c=
ode>. We can inspect the symbol table with <code class=3D"language-plaintex=
t highlighter-rouge">nm</code> as before:</p> <div class=3D"codeblock"><fig=
ure class=3D"highlight"><pre><code class=3D"language-terminal" data-lang=3D=
"terminal"><span class=3D"gp">$</span><span class=3D"w"> </span>nm run.o
<span class=3D"go">                 U lib_call
0000000000000000 T run
0000000000000000 d run.data</span></code></pre></figure><div class=3D"codeb=
lock-buttons"><div class=3D"codeblock-button">Terminal</div></div></div> <p=
>As you might guess, <code class=3D"language-plaintext highlighter-rouge">d=
</code> is just <code class=3D"language-plaintext highlighter-rouge">.data<=
/code>. However, <code class=3D"language-plaintext highlighter-rouge">U</co=
de> is interesting: it=E2=80=99s an undefined symbol, meaning the linker wi=
ll need to perform a symbol resolution! In fact, if we ask Clang to link th=
is for us (it just shells out to a linker like <code class=3D"language-plai=
ntext highlighter-rouge">ld</code>):</p> <div class=3D"codeblock"><figure c=
lass=3D"highlight"><pre><code class=3D"language-terminal" data-lang=3D"term=
inal"><span class=3D"gp">$</span><span class=3D"w"> </span>clang run.o
<span class=3D"go">/usr/bin/ld: /somewhere/crt1.o: in function `_start':
(.text+0x20): undefined reference to `main'
/usr/bin/ld: run.o: in function `run':
run.c:(.text+0xf): undefined reference to `lib_call'</span></code></pre></f=
igure><div class=3D"codeblock-buttons"><div class=3D"codeblock-button">Term=
inal</div></div></div> <p>The linker also complains that there=E2=80=99s no=
 <code class=3D"language-plaintext highlighter-rouge">main()</code> functio=
n, and that some object we didn=E2=80=99t provide called <code class=3D"lan=
guage-plaintext highlighter-rouge">crt1.o</code> wants it. This is the star=
tup code for the C runtime; we can skip linking it with <code class=3D"lang=
uage-plaintext highlighter-rouge">-nostartfiles</code>. This will result in=
 the linker picking an entry point for us.</p> <p>We can resolve the missin=
g symbol by linking against our library. <code class=3D"language-plaintext =
highlighter-rouge">-lfoo</code> says to search for the library <code class=
=3D"language-plaintext highlighter-rouge">libfoo.a</code>; <code class=3D"l=
anguage-plaintext highlighter-rouge">-L.</code> says to include the current=
 directory for searching for libraries.</p> <div class=3D"codeblock"><figur=
e class=3D"highlight"><pre><code class=3D"language-shell" data-lang=3D"shel=
l">clang run.o <span class=3D"nt">-L</span><span class=3D"nb">.</span> <spa=
n class=3D"nt">-lextern</span> <span class=3D"nt">-nostartfiles</span></cod=
e></pre></figure><div class=3D"codeblock-buttons"><div class=3D"codeblock-b=
utton">Shell</div></div></div> <p>This gives us our binary, <code class=3D"=
language-plaintext highlighter-rouge">a.out</code>, which we can now <code =
class=3D"language-plaintext highlighter-rouge">objdump</code>:</p> <div cla=
ss=3D"codeblock"><figure class=3D"highlight"><pre><code class=3D"language-t=
erminal" data-lang=3D"terminal"><span class=3D"gp">$</span><span class=3D"w=
"> </span>objdump <span class=3D"nt">-d</span> <span class=3D"nt">-Mintel</=
span> a.out
<span class=3D"go">
a.out:     file format elf64-x86-64


Disassembly of section .text:

</span><span class=3D"gp">0000000000401000 &lt;run&gt;</span>:
<span class=3D"go">  401000:  55                      push   rbp
  401001:  48 89 e5                mov    rbp,rsp
  401004:  48 bf 00 20 40 00 00    movabs rdi,0x402000
  40100b:  00 00 00=20
</span><span class=3D"gp">  40100e:  e8 0d 00 00 00          call   401020 =
&lt;lib_call&gt;</span><span class=3D"w">
</span><span class=3D"go">  401013:  89 04 25 00 40 40 00    mov    DWORD P=
TR ds:0x404000,eax
  40101a:  5d                      pop    rbp
  40101b:  c3                      ret   =20
  40101c:  0f 1f 40 00             nop    DWORD PTR [rax+0x0]

</span><span class=3D"gp">0000000000401020 &lt;lib_call&gt;</span>:
<span class=3D"go">  401020:  55                      push   rbp
  401021:  48 89 e5                mov    rbp,rsp
  401024:  48 89 7d f8             mov    QWORD PTR [rbp-0x8],rdi
  401028:  8b 04 25 04 40 40 00    mov    eax,DWORD PTR ds:0x404004
  40102f:  89 c1                   mov    ecx,eax
  401031:  83 c1 01                add    ecx,0x1
  401034:  89 0c 25 04 40 40 00    mov    DWORD PTR ds:0x404004,ecx
  40103b:  5d                      pop    rbp
  40103c:  c3                      ret    </span></code></pre></figure><div=
 class=3D"codeblock-buttons"><div class=3D"codeblock-button">Terminal</div>=
</div></div> <p>Let=E2=80=99s write up the simplest possible linker script =
for all this:</p> <div class=3D"codeblock"><figure class=3D"highlight"><pre=
><code class=3D"language-cpp" data-lang=3D"cpp"><span class=3D"n">ENTRY</sp=
an><span class=3D"p">(</span><span class=3D"n">run</span><span class=3D"p">=
)</span>
<span class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">text</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">text</span><span class=3D"p">);</span> <s=
pan class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">text</=
span><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">=
)</span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">bss</span> <span class=3D"o">=
:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">bss</span><span class=3D"p">);</span> <sp=
an class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">bss</sp=
an><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">)<=
/span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">data</span> <span class=3D"o"=
>:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span class=
=3D"p">(.</span><span class=3D"n">data</span><span class=3D"p">);</span> <s=
pan class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">data</=
span><span class=3D"p">.</span><span class=3D"o">*</span><span class=3D"p">=
)</span> <span class=3D"p">}</span>
  <span class=3D"p">.</span><span class=3D"n">rodata</span> <span class=3D"=
o">:</span> <span class=3D"p">{</span> <span class=3D"o">*</span><span clas=
s=3D"p">(.</span><span class=3D"n">rodata</span><span class=3D"p">);</span>=
 <span class=3D"o">*</span><span class=3D"p">(.</span><span class=3D"n">rod=
ata</span><span class=3D"p">.</span><span class=3D"o">*</span><span class=
=3D"p">)</span> <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">link.ld</div></div></div> <p>Let=E2=
=80=99s link! We=E2=80=99ll also want to make sure that the system libc doe=
sn=E2=80=99t get in the way, using <code class=3D"language-plaintext highli=
ghter-rouge">-nostdlib</code><sup id=3D"fnref:libgcc_s" role=3D"doc-noteref=
"><a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fn:libgcc_s" cla=
ss=3D"footnote" rel=3D"footnote">16</a></sup>.</p> <div class=3D"codeblock"=
><figure class=3D"highlight"><pre><code class=3D"language-shell" data-lang=
=3D"shell">clang run.o <span class=3D"nt">-L</span><span class=3D"nb">.</sp=
an> <span class=3D"nt">-lextern</span> <span class=3D"nt">-nostartfiles</sp=
an> <span class=3D"nt">-nostdlib</span> <span class=3D"nt">-Wl</span>,-T,li=
nk.ld</code></pre></figure><div class=3D"codeblock-buttons"><div class=3D"c=
odeblock-button">Shell</div></div></div> <p>At this point, you can use <cod=
e class=3D"language-plaintext highlighter-rouge">objdump</code> to inspect =
<code class=3D"language-plaintext highlighter-rouge">a.out</code> at your l=
eisure! You=E2=80=99ll notice there are a few other sections, like <code cl=
ass=3D"language-plaintext highlighter-rouge">.eh_frame</code>. Clang adds t=
hese by default, but you can throw them out using <code class=3D"language-p=
laintext highlighter-rouge">/DISCARD/</code>.</p> <p>It=E2=80=99s worth it =
to run the examples in the post through the linker using this =E2=80=9Cplay=
ground=E2=80=9D. You can actually control the sections Clang puts symbols i=
nto using the <code class=3D"language-plaintext highlighter-rouge">__attrib=
ute__((section("blah")))</code> compiler extension. The Rust equivalent is =
<code class=3D"language-plaintext highlighter-rouge">#[link_section =3D "bl=
ah"]</code>.</p> <div class=3D"footnotes" role=3D"doc-endnotes"> <ol> <li i=
d=3D"fn:linker-flag" role=3D"doc-endnote"> <p>Blame GCC for this. <code cla=
ss=3D"language-plaintext highlighter-rouge">-Wl</code> feeds arguments thro=
ugh to the linker, and <code class=3D"language-plaintext highlighter-rouge"=
>-T</code> is <code class=3D"language-plaintext highlighter-rouge">ld</code=
>=E2=80=99s linker script input flag. Thankfully, rustc is far more sensibl=
e here: <code class=3D"language-plaintext highlighter-rouge">-Clink-args=3D=
-Wl,-T,foo.ld</code> (when GCC/Clang is your linker frontend).&nbsp;<a href=
=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:linker-flag" class=
=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=
=3D"fn:etymology-of-s" role=3D"doc-endnote"> <p>Correction, 2022-09-11. I h=
ave really been bothered by not knowing if this is actually true, and have =
periodically asked around about it. I asked Russ Cox, who was actually <em>=
at</em> Bell Labs back in the day, and he asked Ken Thompson, who confirms:=
 it=E2=80=99s genuinely <code class=3D"language-plaintext highlighter-rouge=
">.s</code> for source, because it was the only source they had back then.<=
/p> <p>I am glad I got this from the horse=E2=80=99s mouth. :)&nbsp;<a href=
=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:etymology-of-s" cla=
ss=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=
=3D"fn:clang-languages" role=3D"doc-endnote"> <p>And many other things, lik=
e Objective-C.&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script=
/#fnref:clang-languages" class=3D"reversefootnote" role=3D"doc-backlink">=
=E2=86=A9</a></p> </li> <li id=3D"fn:object-what" role=3D"doc-endnote"> <p>=
Completely and utterly unrelated to the objects of object-oriented programm=
ing. Best I can tell, the etymology is lost to time.&nbsp;<a href=3D"https:=
//mcyoung.xyz/2021/06/01/linker-script/#fnref:object-what" class=3D"reverse=
footnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:aout" =
role=3D"doc-endnote"> <p><code class=3D"language-plaintext highlighter-roug=
e">a.out</code> is <em>also</em> an object file format, like ELF, but toolc=
hains live and die by tradition, so that=E2=80=99s the name given to the li=
nker=E2=80=99s output by default.&nbsp;<a href=3D"https://mcyoung.xyz/2021/=
06/01/linker-script/#fnref:aout" class=3D"reversefootnote" role=3D"doc-back=
link">=E2=86=A9</a></p> </li> <li id=3D"fn:rust-objects" role=3D"doc-endnot=
e"> <p>Rust does not compile each <code class=3D"language-plaintext highlig=
hter-rouge">.rs</code> file into an object, and its =E2=80=9Ccrates=E2=80=
=9D are much larger than the average C++ translation unit. However, the Rus=
t compiler will nonetheless produce many object files for a single crate, p=
recisely for the benefit of this compilation model.&nbsp;<a href=3D"https:/=
/mcyoung.xyz/2021/06/01/linker-script/#fnref:rust-objects" class=3D"reverse=
footnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:bare-m=
etal-loading" role=3D"doc-endnote"> <p>Operating systems are loaded by a bo=
otloader. Bootloaders are themselves loaded by other bootloaders, such as t=
he BIOS. At the bottom of the turtles is the mask ROM, which is a tiny boot=
loader permanently burned into the device.&nbsp;<a href=3D"https://mcyoung.=
xyz/2021/06/01/linker-script/#fnref:bare-metal-loading" class=3D"reversefoo=
tnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:text-sect=
ion" role=3D"doc-endnote"> <p>No idea on the etymology. This isn=E2=80=99t =
ASCII text!&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#f=
nref:text-section" class=3D"reversefootnote" role=3D"doc-backlink">=E2=86=
=A9</a></p> </li> <li id=3D"fn:bss-section" role=3D"doc-endnote"> <p>Back i=
n the 50s, this stood for =E2=80=9Cblock started by symbol=E2=80=9D.&nbsp;<=
a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:bss-section" =
class=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li=
 id=3D"fn:order-sorting" role=3D"doc-endnote"> <p>Yes, yes, you can write <=
code class=3D"language-plaintext highlighter-rouge">SORT_BY_NAME(*)(.text)<=
/code> but that=E2=80=99s not really something you ever wind up needing.</p=
> <p>See <a href=3D"https://sourceware.org/binutils/docs/ld/Input-Section-W=
ildcards.html">https://sourceware.org/binutils/docs/ld/Input-Section-Wildca=
rds.html</a> for more information on this.&nbsp;<a href=3D"https://mcyoung.=
xyz/2021/06/01/linker-script/#fnref:order-sorting" class=3D"reversefootnote=
" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:comment-syntax=
" role=3D"doc-endnote"> <p>You only get <code class=3D"language-plaintext h=
ighlighter-rouge">/* */</code> comment syntax because that=E2=80=99s the lo=
west common denominator.&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/lin=
ker-script/#fnref:comment-syntax" class=3D"reversefootnote" role=3D"doc-bac=
klink">=E2=86=A9</a></p> </li> <li id=3D"fn:dot-align" role=3D"doc-endnote"=
> <p>Well, <code class=3D"language-plaintext highlighter-rouge">.</code> ac=
tually gets increased to the alignment of the section first. If you insist =
on an unaligned section, the syntax is, obviously,</p> <div class=3D"codebl=
ock"><figure class=3D"highlight"><pre><code class=3D"language-cpp" data-lan=
g=3D"cpp"><span class=3D"n">SECTIONS</span> <span class=3D"p">{</span>
  <span class=3D"p">.</span><span class=3D"n">unaligned</span> <span class=
=3D"p">.</span><span class=3D"o">:</span> <span class=3D"p">{</span>
    <span class=3D"cm">/* ... */</span>
  <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">Linker Script</div></div></div> <p>(T=
hat was sarcasm. It must be stressed that this is not a friendly language.)=
&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:dot-al=
ign" class=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li=
> <li id=3D"fn:dot-in-asm" role=3D"doc-endnote"> <p>This symbol is also ava=
ilable in assembly files. <code class=3D"language-plaintext highlighter-rou=
ge">jmp .</code> is an overly-cute idiom for an infinity busy loop. It is e=
ven more terse in ARM and RISC-V, where it=E2=80=99s written <code class=3D=
"language-plaintext highlighter-rouge">b .</code> and <code class=3D"langua=
ge-plaintext highlighter-rouge">j .</code>, respectively.</p> <p>Personally=
, I prefer the obtuse clarity of <code class=3D"language-plaintext highligh=
ter-rouge">loop_forever: j loop_forever</code>.&nbsp;<a href=3D"https://mcy=
oung.xyz/2021/06/01/linker-script/#fnref:dot-in-asm" class=3D"reversefootno=
te" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li id=3D"fn:attrs-in-asm=
" role=3D"doc-endnote"> <p>These are the same characters used to declare a =
section in assembly. If I wanted to place my code in a section named <code =
class=3D"language-plaintext highlighter-rouge">.crt0</code> but wanted it t=
o be placed into a readonly, executable memory block, use the the assembler=
 directive <code class=3D"language-plaintext highlighter-rouge">.section .c=
rt0, rxal</code>&nbsp;<a href=3D"https://mcyoung.xyz/2021/06/01/linker-scri=
pt/#fnref:attrs-in-asm" class=3D"reversefootnote" role=3D"doc-backlink">=E2=
=86=A9</a></p> </li> <li id=3D"fn:not-main" role=3D"doc-endnote"> <p>Note t=
hat the entry point is almost never a function called <code class=3D"langua=
ge-plaintext highlighter-rouge">main()</code>. In the default configuration=
 of most toolchains, an object called <code class=3D"language-plaintext hig=
hlighter-rouge">crt0.o</code> is provided as part of the libc, which provid=
es a <code class=3D"language-plaintext highlighter-rouge">_start()</code> f=
unction that itself calls <code class=3D"language-plaintext highlighter-rou=
ge">main()</code>. CRT stands for =E2=80=9CC runtime=E2=80=9D; thus, <code =
class=3D"language-plaintext highlighter-rouge">crt0.o</code> initializes th=
e C runtime.</p> <p>This file contains the moral equivalent of the followin=
g C code, which varies according to target:</p> <div class=3D"codeblock"><f=
igure class=3D"highlight"><pre><code class=3D"language-c" data-lang=3D"c"><=
span class=3D"k">extern</span> <span class=3D"kt">int</span> <span class=3D=
"nf">main</span><span class=3D"p">(</span><span class=3D"kt">int</span> <sp=
an class=3D"n">argc</span><span class=3D"p">,</span> <span class=3D"kt">cha=
r</span><span class=3D"o">**</span> <span class=3D"n">argv</span><span clas=
s=3D"p">);</span>
<span class=3D"n">noreturn</span> <span class=3D"kt">void</span> <span clas=
s=3D"nf">_start</span><span class=3D"p">()</span> <span class=3D"p">{</span=
>
  <span class=3D"n">init_libc</span><span class=3D"p">();</span>    <span c=
lass=3D"c1">// Initializes global libc state.</span>
  <span class=3D"n">run_ctors</span><span class=3D"p">();</span>    <span c=
lass=3D"c1">// Runs all library constructors.</span>
  <span class=3D"kt">int</span> <span class=3D"n">ret</span> <span class=3D=
"o">=3D</span> <span class=3D"n">main</span><span class=3D"p">(</span><span=
 class=3D"n">get_argc</span><span class=3D"p">(),</span> <span class=3D"n">=
get_argv</span><span class=3D"p">());</span>
  <span class=3D"n">run_dtors</span><span class=3D"p">();</span>    <span c=
lass=3D"c1">// Runs all library destructors.</span>
  <span class=3D"n">cleanup_libc</span><span class=3D"p">();</span> <span c=
lass=3D"c1">// Deinitializes the libc.</span>
 =20
  <span class=3D"n">exit</span><span class=3D"p">(</span><span class=3D"n">=
ret</span><span class=3D"p">);</span> <span class=3D"c1">// Asks the OS to =
gracefully destroy the process.</span>
<span class=3D"p">}</span></code></pre></figure><div class=3D"codeblock-but=
tons"><div class=3D"codeblock-button">C</div></div></div> <p>This behavior =
can be disabled with <code class=3D"language-plaintext highlighter-rouge">-=
nostartfiles</code> in Clang. The OSDev wiki has some on this topic: <a hre=
f=3D"https://wiki.osdev.org/Creating_a_C_Library#Program_Initialization">ht=
tps://wiki.osdev.org/Creating_a_C_Library#Program_Initialization</a>.&nbsp;=
<a href=3D"https://mcyoung.xyz/2021/06/01/linker-script/#fnref:not-main" cl=
ass=3D"reversefootnote" role=3D"doc-backlink">=E2=86=A9</a></p> </li> <li i=
d=3D"fn:libgcc_s" role=3D"doc-endnote"> <p>If you include libc, you will ge=
t bizarre errors involving something called =E2=80=9C<code class=3D"languag=
e-plaintext highlighter-rouge">gcc_s</code>=E2=80=9D. <code class=3D"langua=
ge-plaintext highlighter-rouge">libgcc</code> (and <code class=3D"language-=
plaintext highlighter-rouge">libgcc_s</code>) is GCC=E2=80=99s <em>compiler=
 runtime</em> library. Where <code class=3D"language-plaintext highlighter-=
rouge">libc</code> exposes high-level operations on the C runtime and utili=
ties for manipulating common objects, <code class=3D"language-plaintext hig=
hlighter-rouge">libgcc</code> provides even lower-level support, including:=
</p> <ul> <li>Polyfills for arithmetic operations not available on the targ=
et. For example, dividing two 64-bit integers on most 32-bit targets will e=
mit a reference to the a symbol like <code class=3D"language-plaintext high=
lighter-rouge">__udivmoddi4</code> (they all have utterly incomprehensible =
names like this one).</li> <li>Soft-float implementations, i.e., IEEE float=
s implemented in software for targets without an FPU.</li> <li>Bits of unwi=
nding (e.g. exceptions and panics) support (the rest is in <code class=3D"l=
anguage-plaintext highlighter-rouge">libunwind</code>).</li> <li>Miscellane=
ous runtime support code, such as the code that calls C++ static initialize=
rs.</li> </ul> <p>Clang=E2=80=99s version, <code class=3D"language-plaintex=
t highlighter-rouge">libcompiler-rt</code>, is ABI-compatible with <code cl=
ass=3D"language-plaintext highlighter-rouge">libgcc</code> and provides var=
ious support for profiling, sanitizers, and many, many other things the com=
piler needs available for compiling code.&nbsp;<a href=3D"https://mcyoung.x=
yz/2021/06/01/linker-script/#fnref:libgcc_s" class=3D"reversefootnote" role=
=3D"doc-backlink">=E2=86=A9</a></p> </li> </ol> </div> </div> <div class=3D=
"related post-footer"> <h2>Related Posts</h2> <ul class=3D"related-posts"> =
<li> <span class=3D"post-meta">2024-12-16</span> / <h6 style=3D"display:inl=
ine"><a href=3D"https://mcyoung.xyz/2024/12/16/rangefuncs/">Go's Weird Litt=
le Iterators</a></h6> </li><li> <span class=3D"post-meta">2024-12-12</span>=
 / <h6 style=3D"display:inline"><a href=3D"https://mcyoung.xyz/2024/12/12/g=
o-abi/">Things You Never Wanted To Know About Go Interfaces</a></h6> </li><=
li> <span class=3D"post-meta">2024-12-10</span> / <h6 style=3D"display:inli=
ne"><a href=3D"https://mcyoung.xyz/2024/12/10/json-sucks/">Nobody Gets Fire=
d for Picking JSON, but Maybe They Should?</a></h6> </li></ul> </div> </div=
> </div> </div></div> <div class=3D"sidebar show-if-mobile footer"> <div cl=
ass=3D"container sidebar-sticky"> <a href=3D"https://creativecommons.org/li=
censes/by-sa/4.0/legalcode">CC BY-SA</a> =E2=80=A2 <a href=3D"https://varz.=
mcyoung.xyz/">Site Analytics</a> <br> =C2=A9 2024 Miguel Young de la Sota <=
/div> </div>  </body></html>
------MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://mcyoung.xyz/public/css/syntax.css

@charset "utf-8";

pre { line-height: 125%; }

td.linenos .normal { color: inherit; background-color: transparent; padding=
-left: 5px; padding-right: 5px; }

span.linenos { color: inherit; background-color: transparent; padding-left:=
 5px; padding-right: 5px; }

td.linenos .special { color: rgb(0, 0, 0); background-color: rgb(255, 255, =
192); padding-left: 5px; padding-right: 5px; }

span.linenos.special { color: rgb(0, 0, 0); background-color: rgb(255, 255,=
 192); padding-left: 5px; padding-right: 5px; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(255, 255, 255); }

.highlight .c { color: rgb(106, 153, 85); font-style: italic; }

.highlight .err { color: rgb(209, 105, 105); }

.highlight .k { color: rgb(86, 156, 214); }

.highlight .n { color: rgb(156, 220, 254); }

.highlight .o { color: rgb(212, 212, 212); }

.highlight .p { color: rgb(212, 212, 212); }

.highlight .cd { color: rgb(106, 153, 85); font-style: italic; }

.highlight .ch { color: rgb(106, 153, 85); font-style: italic; }

.highlight .cm { color: rgb(106, 153, 85); font-style: italic; }

.highlight .cp { color: rgb(106, 153, 85); font-style: italic; }

.highlight .cpf { color: rgb(106, 153, 85); font-style: italic; }

.highlight .c1 { color: rgb(106, 153, 85); font-style: italic; }

.highlight .cs { color: rgb(106, 153, 85); font-style: italic; }

.highlight .kc { color: rgb(86, 156, 214); }

.highlight .kd { color: rgb(86, 156, 214); }

.highlight .kn { color: rgb(86, 156, 214); }

.highlight .kp { color: rgb(86, 156, 214); }

.highlight .kr { color: rgb(86, 156, 214); }

.highlight .kt { color: rgb(86, 156, 214); }

.highlight .m { color: rgb(181, 206, 168); }

.highlight .s { color: rgb(206, 145, 120); }

.highlight .na { color: rgb(156, 220, 254); }

.highlight .nb { color: rgb(78, 201, 176); }

.highlight .nc { color: rgb(78, 201, 176); }

.highlight .no { color: rgb(86, 156, 214); }

.highlight .nd { color: rgb(197, 134, 192); }

.highlight .ni { color: rgb(156, 220, 254); }

.highlight .ne { color: rgb(156, 220, 254); }

.highlight .nf { color: rgb(220, 220, 170); }

.highlight .nl { color: rgb(156, 220, 254); }

.highlight .nn { color: rgb(78, 201, 176); }

.highlight .nx { color: rgb(156, 220, 254); }

.highlight .py { color: rgb(156, 220, 254); }

.highlight .nt { color: rgb(156, 220, 254); }

.highlight .nv { color: rgb(156, 220, 254); }

.highlight .ow { color: rgb(212, 212, 212); }

.highlight .pm { color: rgb(212, 212, 212); }

.highlight .mb { color: rgb(181, 206, 168); }

.highlight .mf { color: rgb(181, 206, 168); }

.highlight .mh { color: rgb(181, 206, 168); }

.highlight .mi { color: rgb(181, 206, 168); }

.highlight .mo { color: rgb(181, 206, 168); }

.highlight .sa { color: rgb(206, 145, 120); }

.highlight .sb { color: rgb(206, 145, 120); }

.highlight .sc { color: rgb(86, 156, 214); }

.highlight .dl { color: rgb(206, 145, 120); }

.highlight .sd { color: rgb(206, 145, 120); }

.highlight .s2 { color: rgb(206, 145, 120); }

.highlight .se { color: rgb(215, 186, 125); }

.highlight .sh { color: rgb(206, 145, 120); }

.highlight .si { color: rgb(206, 145, 120); }

.highlight .sx { color: rgb(206, 145, 120); }

.highlight .sr { color: rgb(206, 145, 120); }

.highlight .s1 { color: rgb(206, 145, 120); }

.highlight .ss { color: rgb(206, 145, 120); }

.highlight .bp { color: rgb(78, 201, 176); }

.highlight .fm { color: rgb(220, 220, 170); }

.highlight .vc { color: rgb(156, 220, 254); }

.highlight .vg { color: rgb(156, 220, 254); }

.highlight .vi { color: rgb(156, 220, 254); }

.highlight .vm { color: rgb(156, 220, 254); }

.highlight .il { color: rgb(181, 206, 168); }
------MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://mcyoung.xyz/public/css/syntax-overrides.css

@charset "utf-8";

.highlight .language-llvm .err { color: rgb(129, 161, 193); background-colo=
r: transparent; }
------MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://mcyoung.xyz/public/css/style.css

@charset "utf-8";

* { box-sizing: border-box; }

html, body { margin: 0px; padding: 0px; }

@font-face { font-display: swap; font-family: "Abril Fatface"; font-style: =
normal; font-weight: 400; src: url("../fonts/abril-fatface.woff2") format("=
woff2"), url("../fonts/abril-fatface.ttf") format("truetype"); }

@font-face { font-display: swap; font-family: Rokkitt; font-style: normal; =
font-weight: 400; src: url("../fonts/rokkitt.woff2") format("woff2"), url("=
../fonts/rokkitt.ttf") format("truetype"); }

@font-face { font-display: swap; font-family: Rokkitt; font-style: italic; =
font-weight: 400; src: url("../fonts/rokkitt-italic.woff2") format("woff2")=
, url("../fonts/rokkitt-italic.ttf") format("truetype"); }

@font-face { font-display: swap; font-family: "Spline Sans Mono"; font-styl=
e: normal; font-weight: 400; src: url("../fonts/spline-mono.woff2") format(=
"woff2"), url("../fonts/spline-mono.ttf") format("truetype"); }

@font-face { font-display: swap; font-family: "Spline Sans Mono"; font-styl=
e: italic; font-weight: 400; src: url("../fonts/spline-mono-italic.woff2") =
format("woff2"), url("../fonts/spline-mono-italic.ttf") format("truetype");=
 }

html { font-family: Rokkitt, serif; }

code, pre, .post-meta, .codeblock-button { tab-size: 2; font-family: "Splin=
e Sans Mono", monospace; }

h1, h2, h3, h4, h5, h6 { font-family: "Abril Fatface", serif; font-weight: =
bold; text-rendering: geometricprecision; }

@media (min-width: 58em) {
  html { font-size: 20px; }
}

html { color: rgb(187, 187, 187); background-color: rgb(40, 40, 40); }

body { font-size: 16pt; line-height: 1.5; text-size-adjust: 100%; }

::selection { background-color: rgb(68, 68, 68); }

h1, h2, h3, h4, h5, h6 { transform: skewY(-2deg) translate(-1rem, 0rem); tr=
ansform-origin: center top; font-style: italic; text-decoration-line: under=
line; text-decoration-color: goldenrod; text-underline-offset: 4%; text-dec=
oration-thickness: 0.25ex; }

@media (max-width: 47em) {
  h1, h2, h3, h4, h5, h6 { transform: skewY(-2deg); }
}

h1 { font-size: 2rem; margin-top: 0px; }

h2 { margin-top: 1rem; font-size: 1.5rem; }

h3 { margin-top: 1.5rem; font-size: 1.25rem; }

h4, h5, h6 { margin-top: 1rem; font-size: 1rem; }

@media (max-width: 47em) {
  h1 { font-size: 1.5rem; }
}

p > em { color: rgb(221, 221, 221); }

h1 > a, h2 > a, h3 > a, h4 > a, h5 > a, h6 > a { text-decoration: none; }

a { color: inherit; text-decoration-line: none; word-break: break-word; }

a strong { color: inherit; }

.content p a { text-decoration-line: underline; text-decoration-color: gold=
enrod; text-underline-offset: 15%; text-decoration-thickness: 15%; }

.content a:hover, a:focus { text-decoration-line: underline; color: white; =
}

.content p a:hover, .content p a:focus { text-decoration-color: white; }

a:hover, a:focus, a code { }

p { margin-top: 0px; margin-bottom: 1rem; }

strong { color: rgb(221, 221, 221); }

ul, ol, dl { margin-top: 0px; margin-bottom: 1rem; }

dt { font-weight: bold; }

dd { margin-bottom: 0.5rem; }

hr { position: relative; margin: 1.5rem 0px; border-width: 2px 0px 0px; bor=
der-right-style: initial; border-bottom-style: initial; border-left-style: =
initial; border-right-color: initial; border-bottom-color: initial; border-=
left-color: initial; border-image: initial; border-top-style: solid; border=
-top-color: rgb(221, 221, 221); }

img { display: block; max-width: 100%; margin-bottom: 1rem; border-radius: =
5px; }

figure > * { margin: 0.6em auto; }

figure { max-width: 80%; margin: 1em auto; }

figcaption { text-align: center; font-size: 90%; font-style: italic; }

code { padding: 0.125em 0.25em; font-size: 74%; color: rgb(221, 221, 221); =
background-color: rgb(32, 32, 32); border-radius: 3px; }

.katex-inl > .katex { white-space: pre; padding: 0.125em 0.25em; background=
-color: rgb(32, 32, 32); border-radius: 3px; color: rgb(221, 221, 221); fon=
t-size: 100% !important; }

.katex-dpy { display: block; padding: 0.5rem 0.5rem 0.25rem; border-radius:=
 10px; font-size: 1rem; background-color: rgb(24, 24, 24); color: rgb(221, =
221, 221); }

pre { display: block; margin-top: 0px; margin-bottom: 1rem; padding: 1rem; =
font-size: 0.8rem; line-height: 1.4; white-space: pre; word-break: keep-all=
; background-color: rgb(24, 24, 24); border-radius: 10px; overflow: auto; }

pre::-webkit-scrollbar { display: none; }

pre code { padding: 0px; font-size: 100%; color: inherit; background-color:=
 transparent; position: relative; z-index: 2; }

.code-wrap pre { white-space: normal; word-break: break-all; }

figure.highlight { margin: 0px; max-width: 100%; border-radius: 10px; posit=
ion: relative; background-color: transparent; }

.codeblock { margin: 0px 0px 1rem; background-color: rgb(24, 24, 24); borde=
r-radius: 10px; position: relative; }

.code-multicol { display: flex; justify-content: space-around; column-gap: =
0.5rem; width: 100%; }

.code-multicol > .codeblock { flex-basis: 50%; flex-grow: 0; min-width: 0px=
; }

.codeblock-buttons { display: flex; justify-content: flex-end; column-gap: =
0.5rem; position: absolute; float: right; right: 0.5em; bottom: 0.5em; z-in=
dex: 3; }

.codeblock-button { display: block; background: rgb(40, 40, 40); padding: 2=
px 5px; border-radius: 5px; font-size: 0.6rem; }

a.codeblock-button { color: rgb(187, 187, 187); }

a.codeblock-button:hover { background-color: rgb(72, 72, 72); text-decorati=
on: none; }

.codeblock-button.godbolt::after { background-image: url("../images/godbolt=
.svg"); background-size: 0.8rem 0.8rem; width: 0.8rem; height: 0.8rem; cont=
ent: ""; position: relative; float: right; left: 0.1rem; top: 0.05rem; z-in=
dex: 4; }

.codeblock { margin-bottom: 1rem; border-radius: 4px; }

.codeblock pre { margin-bottom: 0px; }

.tooltip { position: relative; color: white; font-style: italic; }

.tooltip .tooltip-text { width: max-content; word-break: break-word; overfl=
ow-wrap: break-word; hyphens: auto; background: rgb(24, 24, 24); padding: 0=
.3rem 0.5rem; border-radius: 10px; font-size: 0.8rem; font-style: italic; p=
osition: absolute; left: 0px; z-index: 1; pointer-events: none; opacity: 0;=
 transition: opacity 0.2s ease-in-out 0s; }

.tooltip:hover .tooltip-text { opacity: 1; transition: opacity 0.3s ease-in=
-out 0s; }

blockquote { padding: 0.5rem 2rem 0.5rem 1rem; margin: 0.8rem 0px; color: r=
gb(187, 187, 187); background-color: rgb(32, 32, 32); border-left: 0.25rem =
solid rgb(153, 153, 153); }

@media (min-width: 48em) {
  blockquote { padding-right: 1.25rem; padding-left: 1.25rem; }
}

blockquote :first-child { margin-top: 0px; }

blockquote :last-child { margin-bottom: 0px; }

blockquote code { background-color: rgb(24, 24, 24); }

blockquote > h1, blockquote > h2, blockquote > h3, blockquote > h4, blockqu=
ote > h5, blockquote > h6 { font-style: normal; transform: translate(-0.2re=
m, 0.5rem); }

table { margin-bottom: 1rem; width: 100%; border: 1px solid rgb(229, 229, 2=
29); border-collapse: collapse; }

td, th { padding: 0.25rem 0.5rem; border: 1px solid rgb(229, 229, 229); }

tbody tr:nth-child(2n+1) td, tbody tr:nth-child(2n+1) th { background-color=
: rgb(32, 32, 32); }

div.footnotes { counter-reset: footnotes 0; padding-top: 1.5rem; border-wid=
th: 2px 0px 0px; border-right-style: initial; border-bottom-style: initial;=
 border-left-style: initial; border-right-color: initial; border-bottom-col=
or: initial; border-left-color: initial; border-image: initial; border-top-=
style: solid; border-top-color: rgb(238, 238, 238); }

div.footnotes ol > li { counter-increment: footnotes 1; }

div.footnotes ol > li:not(:first-child) { padding-top: 1rem; border-top: 2p=
x solid rgb(102, 102, 102); }

div.footnotes ol > li::marker { content: "(" counter(footnotes) ")   "; }

@media (max-width: 47em) {
  div.footnotes ol > li::marker { content: ""; }
  div.footnotes ol > li > p:first-child::before { content: "(" counter(foot=
notes) ") "; display: inline-block; white-space: pre; }
}

div.footnotes ol { padding: 0px; }

[role=3D"doc-endnotes"] p { position: relative; }

[role=3D"doc-endnotes"] p::after { content: "=E2=86=BA"; visibility: hidden=
; }

.footnote { text-decoration: none !important; }

.reversefootnote { visibility: hidden; position: absolute; bottom: 0px; rig=
ht: 0px; }

.reversefootnote::after { content: "=E2=86=BA"; color: goldenrod; visibilit=
y: visible; display: block; position: absolute; top: 0px; }

.post > p:last-of-type { position: relative; }

.post > p:last-of-type::after { position: absolute; bottom: 0px; right: 0px=
; content: "=E2=97=BC"; color: goldenrod; }

.container { max-width: 38rem; padding-left: 1rem; padding-right: 1rem; mar=
gin-left: auto; margin-right: auto; }

.content { padding-top: 1.5rem; padding-bottom: 1.5rem; }

@media (min-width: 48em) {
  .content { padding-bottom: 4rem; padding-top: 4rem; max-width: 38rem; mar=
gin-left: 14.5rem; margin-right: 2rem; }
}

@media (min-width: 72em) {
  .content { margin-left: 22rem; margin-right: 4rem; }
}

@media (max-width: 47em) {
  .hide-if-mobile { display: none !important; }
}

@media (min-width: 48em) {
  .show-if-mobile { display: none !important; }
}

.sidebar { color: rgb(154, 154, 154); background-color: rgb(24, 24, 24); te=
xt-align: center; }

@media (min-width: 48em) {
  .sidebar { position: fixed; top: 0px; left: 0px; bottom: 0px; width: 18em=
; text-align: left; padding: 1em; font-size: 0.7rem; display: flex; flex-fl=
ow: column; justify-content: space-between; }
}

@media (min-width: 72em) {
  .sidebar { font-size: 1rem; }
}

.sidebar-avatar { min-height: 150px; display: flex; justify-content: space-=
around; }

.sidebar-avatar img { margin: auto; height: 100%; object-fit: contain; }

.sidebar a { color: rgb(221, 221, 221); }

.sidebar a:hover { color: white; }

.sidebar-about h1 { font-size: 3.25em; transform: none; margin-bottom: 0.5r=
em; font-style: normal; }

.lead { font-size: 1.2em; font-weight: 300; color: rgb(187, 187, 187); }

.sidebar-nav { display: block; text-align: center; }

.sidebar-nav-item.active { font-weight: bold; }

.sidebar-sticky { padding: 0px 1em 1em; }

@media (max-width: 47em) {
  .footer .sidebar-sticky { padding-top: 1em; }
}

.sidebar-sticky hr { margin: 0.7rem 0px; }

.minimap { position: fixed; top: 0px; right: 0px; cursor: grab; z-index: 99=
9; }

@media (max-width: 89em) {
  .minimap { display: none; }
}

.minimap-size { position: relative; z-index: 3; }

.minimap-controller { width: 100%; padding-top: 100%; position: absolute; t=
op: 0px; left: 0px; transform-origin: 0px 0px; margin-left: auto; margin-ri=
ght: auto; background-color: rgb(221, 221, 221); opacity: 0.05; }

.minimap-content { position: absolute; top: 0px; left: 0px; width: 100%; he=
ight: 100%; z-index: -1; transform-origin: 0px 0px; border: 0px; }

.page, .post { position: relative; margin-bottom: 4em; }

.page-title, .post-title { display: block; margin-bottom: 1.5rem; transform=
: skewY(-2deg) translate(-1rem, -0.4rem); transform-origin: center top; }

@media (max-width: 47em) {
  .page-title, .post-title { transform: skewY(-2deg); }
}

@media (min-width: 48em) {
  .post-title { width: 85%; }
}

.post-meta { font-size: 70%; }

@media (max-width: 47em) {
  .post-meta { font-size: 60%; }
}

.post-title > h1, .page-title > h1 { transform: none; }

.post-meta a:hover { text-decoration: none; }

.post-meta, .post-meta * { color: rgb(154, 154, 154); font-style: italic; }

.post-preview .post { max-height: 26rem; position: relative; overflow: hidd=
en; }

.post-preview .post-title { overflow: visible; z-index: 4; }

.post-preview .post::after { content: "=C2=A0"; position: absolute; bottom:=
 0px; left: 0px; z-index: 3; width: 100%; text-align: center; margin: 0px; =
padding-top: 16rem; pointer-events: none; background-image: linear-gradient=
(rgba(40, 40, 40, 0), rgb(40, 40, 40)); }

.post-preview h2[id] > a, .post-preview h3[id] > a, .post-preview h4[id] > =
a, .post-preview h5[id] > a, .post-preview h6[id] > a { pointer-events: non=
e; }

.post-footer { padding-top: 2rem; padding-bottom: 2rem; border-top: 2px sol=
id rgb(238, 238, 238); }

.pagination { text-align: center; }

.pagination-item { padding: 1rem; }
------MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://mcyoung.xyz/public/images/godbolt.svg

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?>
<svg
   xmlns:dc=3D"http://purl.org/dc/elements/1.1/"
   xmlns:cc=3D"http://creativecommons.org/ns#"
   xmlns:rdf=3D"http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg=3D"http://www.w3.org/2000/svg"
   xmlns=3D"http://www.w3.org/2000/svg"
   xmlns:sodipodi=3D"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape=3D"http://www.inkscape.org/namespaces/inkscape"
   viewBox=3D"0 0 300 300"
   version=3D"1.1"
   id=3D"svg62"
   sodipodi:docname=3D"godbolt.svg"
   width=3D"300"
   height=3D"300"
   inkscape:version=3D"1.0.2 (e86c870879, 2021-01-15)">
  <metadata
     id=3D"metadata68">
    <rdf:RDF>
      <cc:Work
         rdf:about=3D"">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource=3D"http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <defs
     id=3D"defs66" />
  <sodipodi:namedview
     pagecolor=3D"#ffffff"
     bordercolor=3D"#666666"
     borderopacity=3D"1"
     objecttolerance=3D"10"
     gridtolerance=3D"10"
     guidetolerance=3D"10"
     inkscape:pageopacity=3D"0"
     inkscape:pageshadow=3D"2"
     inkscape:window-width=3D"2182"
     inkscape:window-height=3D"1346"
     id=3D"namedview64"
     showgrid=3D"false"
     inkscape:zoom=3D"2.2427293"
     inkscape:cx=3D"237.86801"
     inkscape:cy=3D"62.910823"
     inkscape:window-x=3D"1456"
     inkscape:window-y=3D"34"
     inkscape:window-maximized=3D"0"
     inkscape:current-layer=3D"svg62"
     lock-margins=3D"false"
     fit-margin-left=3D"0"
     fit-margin-top=3D"0" />
  <path
     class=3D"logo-pri"
     fill=3D"#67c52a"
     d=3D"m 241.46622,206.57669 c -1.1,-2.1 -1.1,-4.6 0,-6.6 1.4,-2.5 2.6,-=
5 3.8,-7.6 0.8,-1.9 -0.5,-4 -2.6,-4 h -22.5 c -2.3,0 -4.5,1.2 -5.7,3.1 -2.9=
,4.4 -6.3,8.7 -10.1,12.5 -14.5,14.5 -33.7,22.4 -54.1,22.4 -20.5,0 -39.7,-8 =
-54.100004,-22.4 -14.6,-14.4 -22.5,-33.6 -22.5,-54.1 0,-20.5 8,-39.7 22.4,-=
54.099997 14.500004,-14.5 33.700004,-22.4 54.100004,-22.4 20.5,0 39.7,8 54.=
1,22.4 3.9,3.9 7.2,8.099997 10.1,12.499997 1.3,1.9 3.4,3.1 5.7,3.1 h 22.6 c=
 2.1,0 3.4,-2.1 2.6,-4 -1.2,-2.6 -2.4,-5.1 -3.8,-7.599997 -1.1,-2.1 -1.1,-4=
.6 0,-6.6 l 7.6,-13.8 c 1.5,-2.7 1,-6 -1.2,-8.2 l -19.1,-19.1 c -2.2,-2.2 -=
5.5,-2.6 -8.2,-1.2 l -13.9,7.7 c -2.1,1.1 -4.6,1.1 -6.6,0 -6.6,-3.6 -13.6,-=
6.5 -20.8,-8.6 -2.3,-0.7 -4.1,-2.4 -4.7,-4.7 l -4.4,-15.2 c -0.9,-2.9 -3.5,=
-5 -6.6,-5 h -27 c -3.1,0 -5.8,2 -6.6,5 l -4.4,15.2 c -0.7,2.3 -2.4,4 -4.7,=
4.7 -7.2,2.1 -14.2,5 -20.8,8.6 -2.100004,1.1 -4.600004,1.2 -6.600004,0 l -1=
3.9,-7.7 c -2.7,-1.5 -6,-1 -8.2,1.2 l -19.1,19.1 c -2.2,2.2 -2.6,5.5 -1.2,8=
.2 l 7.7,13.9 c 1.1,2.1 1.1,4.6 0,6.6 -3.6,6.599997 -6.5,13.599997 -8.6,20.=
799997 -0.7,2.3 -2.4,4.1 -4.7,4.7 l -15.2,4.4 c -2.9,0.9 -5,3.5 -5,6.6 v 27=
 c 0,3.1 2,5.8 5,6.6 l 15.2,4.4 c 2.3,0.7 4,2.4 4.7,4.7 2.1,7.2 5,14.2 8.6,=
20.8 1.1,2.1 1.2,4.6 0,6.6 l -7.7,13.9 c -1.5,2.7 -1,6 1.2,8.2 l 19.1,19.1 =
c 2.2,2.2 5.5,2.6 8.2,1.2 l 13.9,-7.7 c 2.1,-1.1 4.6,-1.1 6.600004,0 6.6,3.=
6 13.6,6.5 20.8,8.6 2.3,0.7 4.1,2.4 4.7,4.7 l 4.4,15.2 c 0.9,2.9 3.5,5 6.6,=
5 h 27 c 3.1,0 5.8,-2 6.6,-5 l 4.4,-15.2 c 0.7,-2.3 2.4,-4 4.7,-4.7 7.2,-2.=
1 14.2,-5 20.8,-8.6 2.1,-1.1 4.6,-1.2 6.6,0 l 13.9,7.7 c 2.7,1.5 6,1 8.2,-1=
.2 l 19.1,-19.1 c 2.2,-2.2 2.6,-5.5 1.2,-8.2 z"
     id=3D"path58"
     sodipodi:nodetypes=3D"cccsscsscsssscssccccssccccccssccccccssccccccsscc=
ccccssccccccssccccccsscc" />
  <path
     class=3D"logo-sec"
     fill=3D"#3c3c3f"
     d=3D"m 104.36622,110.97669 h 92.7 v 17.2 h -92.7 z m 0,30.6 h 76.4 v 1=
7.2 h -76.4 z m 0,30.6 h 92.7 v 17.2 h -92.7 z"
     id=3D"path60"
     sodipodi:nodetypes=3D"ccccccccccccccc"
     style=3D"fill:#b3b3b3" />
</svg>=0A
------MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css

@charset "utf-8";

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("fonts/KaTeX_AMS-Regular.woff2") format("woff2"), url("fonts/KaTeX=
_AMS-Regular.woff") format("woff"), url("fonts/KaTeX_AMS-Regular.ttf") form=
at("truetype"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("fonts/KaTeX_Caligraphic-Bold.woff2") format("woff2"), url=
("fonts/KaTeX_Caligraphic-Bold.woff") format("woff"), url("fonts/KaTeX_Cali=
graphic-Bold.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("fonts/KaTeX_Caligraphic-Regular.woff2") format("woff2"), =
url("fonts/KaTeX_Caligraphic-Regular.woff") format("woff"), url("fonts/KaTe=
X_Caligraphic-Regular.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("fonts/KaTeX_Fraktur-Bold.woff2") format("woff2"), url("fonts/=
KaTeX_Fraktur-Bold.woff") format("woff"), url("fonts/KaTeX_Fraktur-Bold.ttf=
") format("truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("fonts/KaTeX_Fraktur-Regular.woff2") format("woff2"), url("fon=
ts/KaTeX_Fraktur-Regular.woff") format("woff"), url("fonts/KaTeX_Fraktur-Re=
gular.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("fonts/KaTeX_Main-Bold.woff2") format("woff2"), url("fonts/KaTeX_=
Main-Bold.woff") format("woff"), url("fonts/KaTeX_Main-Bold.ttf") format("t=
ruetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("fonts/KaTeX_Main-BoldItalic.woff2") format("woff2"), url("fonts/=
KaTeX_Main-BoldItalic.woff") format("woff"), url("fonts/KaTeX_Main-BoldItal=
ic.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("fonts/KaTeX_Main-Italic.woff2") format("woff2"), url("fonts/KaTe=
X_Main-Italic.woff") format("woff"), url("fonts/KaTeX_Main-Italic.ttf") for=
mat("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("fonts/KaTeX_Main-Regular.woff2") format("woff2"), url("fonts/KaT=
eX_Main-Regular.woff") format("woff"), url("fonts/KaTeX_Main-Regular.ttf") =
format("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("fonts/KaTeX_Math-BoldItalic.woff2") format("woff2"), url("fonts/=
KaTeX_Math-BoldItalic.woff") format("woff"), url("fonts/KaTeX_Math-BoldItal=
ic.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("fonts/KaTeX_Math-Italic.woff2") format("woff2"), url("fonts/KaTe=
X_Math-Italic.woff") format("woff"), url("fonts/KaTeX_Math-Italic.ttf") for=
mat("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("fonts/KaTeX_SansSerif-Bold.woff2") format("woff2"), url("fo=
nts/KaTeX_SansSerif-Bold.woff") format("woff"), url("fonts/KaTeX_SansSerif-=
Bold.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("fonts/KaTeX_SansSerif-Italic.woff2") format("woff2"), url("=
fonts/KaTeX_SansSerif-Italic.woff") format("woff"), url("fonts/KaTeX_SansSe=
rif-Italic.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("fonts/KaTeX_SansSerif-Regular.woff2") format("woff2"), url(=
"fonts/KaTeX_SansSerif-Regular.woff") format("woff"), url("fonts/KaTeX_Sans=
Serif-Regular.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("fonts/KaTeX_Script-Regular.woff2") format("woff2"), url("fonts=
/KaTeX_Script-Regular.woff") format("woff"), url("fonts/KaTeX_Script-Regula=
r.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("fonts/KaTeX_Size1-Regular.woff2") format("woff2"), url("fonts/K=
aTeX_Size1-Regular.woff") format("woff"), url("fonts/KaTeX_Size1-Regular.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("fonts/KaTeX_Size2-Regular.woff2") format("woff2"), url("fonts/K=
aTeX_Size2-Regular.woff") format("woff"), url("fonts/KaTeX_Size2-Regular.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("fonts/KaTeX_Size3-Regular.woff2") format("woff2"), url("fonts/K=
aTeX_Size3-Regular.woff") format("woff"), url("fonts/KaTeX_Size3-Regular.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("fonts/KaTeX_Size4-Regular.woff2") format("woff2"), url("fonts/K=
aTeX_Size4-Regular.woff") format("woff"), url("fonts/KaTeX_Size4-Regular.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("fonts/KaTeX_Typewriter-Regular.woff2") format("woff2"), ur=
l("fonts/KaTeX_Typewriter-Regular.woff") format("woff"), url("fonts/KaTeX_T=
ypewriter-Regular.ttf") format("truetype"); }

.katex { text-rendering: auto; font: 1.21em / 1.2 KaTeX_Main, "Times New Ro=
man", serif; text-indent: 0px; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.8"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction:=
 column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; =
}

.katex .thinbox { max-width: 0px; width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { left: 0px; overflow: hidden; position: absolute; w=
idth: 50.2%; }

.katex .halfarrow-right { overflow: hidden; position: absolute; right: 0px;=
 width: 50.2%; }

.katex .brace-left { left: 0px; overflow: hidden; position: absolute; width=
: 25.1%; }

.katex .brace-center { left: 25%; overflow: hidden; position: absolute; wid=
th: 50%; }

.katex .brace-right { overflow: hidden; position: absolute; right: 0px; wid=
th: 25.1%; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-right: 0.049em solid; border-top: 0.049em solid; box-=
sizing: border-box; margin-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; right: c=
alc(50% + 0.3em); text-align: left; }

.katex .cd-label-right { display: inline-block; left: calc(50% + 0.3em); po=
sition: absolute; text-align: right; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { padding-left: 2em; text-align: left; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }
------MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://mcyoung.xyz/public/images/avatar.png

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
rkJggg==

------MultipartBoundary--RPGGUpomVqGpoSQ05gO909kz8XZpD8vh4rlIY6mNg9------
